//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Garibay {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsNCdetalle")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsNCdetalle : global::System.Data.DataSet {
        
        private dtNCdetalleDataTable tabledtNCdetalle;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsNCdetalle() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsNCdetalle(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtNCdetalle"] != null)) {
                    base.Tables.Add(new dtNCdetalleDataTable(ds.Tables["dtNCdetalle"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtNCdetalleDataTable dtNCdetalle {
            get {
                return this.tabledtNCdetalle;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsNCdetalle cln = ((dsNCdetalle)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtNCdetalle"] != null)) {
                    base.Tables.Add(new dtNCdetalleDataTable(ds.Tables["dtNCdetalle"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtNCdetalle = ((dtNCdetalleDataTable)(base.Tables["dtNCdetalle"]));
            if ((initTable == true)) {
                if ((this.tabledtNCdetalle != null)) {
                    this.tabledtNCdetalle.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsNCdetalle";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsNCdetalle.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtNCdetalle = new dtNCdetalleDataTable();
            base.Tables.Add(this.tabledtNCdetalle);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtNCdetalle() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsNCdetalle ds = new dsNCdetalle();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtNCdetalleRowChangeEventHandler(object sender, dtNCdetalleRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtNCdetalleDataTable : global::System.Data.TypedTableBase<dtNCdetalleRow> {
            
            private global::System.Data.DataColumn columnNDCDetalleID;
            
            private global::System.Data.DataColumn columnnotadecompraID;
            
            private global::System.Data.DataColumn columnproductoID;
            
            private global::System.Data.DataColumn columnbodegaID;
            
            private global::System.Data.DataColumn columnCantidad;
            
            private global::System.Data.DataColumn columnpreciodecompra;
            
            private global::System.Data.DataColumn columnImporte;
            
            private global::System.Data.DataColumn columnentradaprodID;
            
            private global::System.Data.DataColumn columnProducto;
            
            private global::System.Data.DataColumn columnBodega;
            
            private global::System.Data.DataColumn columnGrupo;
            
            private global::System.Data.DataColumn columngrupoID;
            
            private global::System.Data.DataColumn columnPresentación;
            
            private global::System.Data.DataColumn columnpresentacionID;
            
            private global::System.Data.DataColumn columnSacos;
            
            private global::System.Data.DataColumn columnUnidad;
            
            private global::System.Data.DataColumn columnunidadID;
            
            private global::System.Data.DataColumn columnExistencia;
            
            private global::System.Data.DataColumn columntieneBoletas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNCdetalleDataTable() {
                this.TableName = "dtNCdetalle";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtNCdetalleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtNCdetalleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NDCDetalleIDColumn {
                get {
                    return this.columnNDCDetalleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notadecompraIDColumn {
                get {
                    return this.columnnotadecompraID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productoIDColumn {
                get {
                    return this.columnproductoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bodegaIDColumn {
                get {
                    return this.columnbodegaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn preciodecompraColumn {
                get {
                    return this.columnpreciodecompra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn entradaprodIDColumn {
                get {
                    return this.columnentradaprodID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductoColumn {
                get {
                    return this.columnProducto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BodegaColumn {
                get {
                    return this.columnBodega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrupoColumn {
                get {
                    return this.columnGrupo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grupoIDColumn {
                get {
                    return this.columngrupoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PresentaciónColumn {
                get {
                    return this.columnPresentación;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn presentacionIDColumn {
                get {
                    return this.columnpresentacionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SacosColumn {
                get {
                    return this.columnSacos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadColumn {
                get {
                    return this.columnUnidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unidadIDColumn {
                get {
                    return this.columnunidadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExistenciaColumn {
                get {
                    return this.columnExistencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tieneBoletasColumn {
                get {
                    return this.columntieneBoletas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNCdetalleRow this[int index] {
                get {
                    return ((dtNCdetalleRow)(this.Rows[index]));
                }
            }
            
            public event dtNCdetalleRowChangeEventHandler dtNCdetalleRowChanging;
            
            public event dtNCdetalleRowChangeEventHandler dtNCdetalleRowChanged;
            
            public event dtNCdetalleRowChangeEventHandler dtNCdetalleRowDeleting;
            
            public event dtNCdetalleRowChangeEventHandler dtNCdetalleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtNCdetalleRow(dtNCdetalleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNCdetalleRow AdddtNCdetalleRow(
                        int NDCDetalleID, 
                        int notadecompraID, 
                        int productoID, 
                        int bodegaID, 
                        decimal Cantidad, 
                        decimal preciodecompra, 
                        decimal Importe, 
                        int entradaprodID, 
                        string Producto, 
                        string Bodega, 
                        string Grupo, 
                        int grupoID, 
                        string Presentación, 
                        int presentacionID, 
                        decimal Sacos, 
                        string Unidad, 
                        int unidadID, 
                        double Existencia, 
                        bool tieneBoletas) {
                dtNCdetalleRow rowdtNCdetalleRow = ((dtNCdetalleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NDCDetalleID,
                        notadecompraID,
                        productoID,
                        bodegaID,
                        Cantidad,
                        preciodecompra,
                        Importe,
                        entradaprodID,
                        Producto,
                        Bodega,
                        Grupo,
                        grupoID,
                        Presentación,
                        presentacionID,
                        Sacos,
                        Unidad,
                        unidadID,
                        Existencia,
                        tieneBoletas};
                rowdtNCdetalleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtNCdetalleRow);
                return rowdtNCdetalleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtNCdetalleDataTable cln = ((dtNCdetalleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtNCdetalleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNDCDetalleID = base.Columns["NDCDetalleID"];
                this.columnnotadecompraID = base.Columns["notadecompraID"];
                this.columnproductoID = base.Columns["productoID"];
                this.columnbodegaID = base.Columns["bodegaID"];
                this.columnCantidad = base.Columns["Cantidad"];
                this.columnpreciodecompra = base.Columns["preciodecompra"];
                this.columnImporte = base.Columns["Importe"];
                this.columnentradaprodID = base.Columns["entradaprodID"];
                this.columnProducto = base.Columns["Producto"];
                this.columnBodega = base.Columns["Bodega"];
                this.columnGrupo = base.Columns["Grupo"];
                this.columngrupoID = base.Columns["grupoID"];
                this.columnPresentación = base.Columns["Presentación"];
                this.columnpresentacionID = base.Columns["presentacionID"];
                this.columnSacos = base.Columns["Sacos"];
                this.columnUnidad = base.Columns["Unidad"];
                this.columnunidadID = base.Columns["unidadID"];
                this.columnExistencia = base.Columns["Existencia"];
                this.columntieneBoletas = base.Columns["tieneBoletas"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNDCDetalleID = new global::System.Data.DataColumn("NDCDetalleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNDCDetalleID);
                this.columnnotadecompraID = new global::System.Data.DataColumn("notadecompraID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotadecompraID);
                this.columnproductoID = new global::System.Data.DataColumn("productoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductoID);
                this.columnbodegaID = new global::System.Data.DataColumn("bodegaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbodegaID);
                this.columnCantidad = new global::System.Data.DataColumn("Cantidad", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCantidad);
                this.columnpreciodecompra = new global::System.Data.DataColumn("preciodecompra", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpreciodecompra);
                this.columnImporte = new global::System.Data.DataColumn("Importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporte);
                this.columnentradaprodID = new global::System.Data.DataColumn("entradaprodID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnentradaprodID);
                this.columnProducto = new global::System.Data.DataColumn("Producto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProducto);
                this.columnBodega = new global::System.Data.DataColumn("Bodega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBodega);
                this.columnGrupo = new global::System.Data.DataColumn("Grupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrupo);
                this.columngrupoID = new global::System.Data.DataColumn("grupoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrupoID);
                this.columnPresentación = new global::System.Data.DataColumn("Presentación", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentación);
                this.columnpresentacionID = new global::System.Data.DataColumn("presentacionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpresentacionID);
                this.columnSacos = new global::System.Data.DataColumn("Sacos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSacos);
                this.columnUnidad = new global::System.Data.DataColumn("Unidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidad);
                this.columnunidadID = new global::System.Data.DataColumn("unidadID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunidadID);
                this.columnExistencia = new global::System.Data.DataColumn("Existencia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExistencia);
                this.columntieneBoletas = new global::System.Data.DataColumn("tieneBoletas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntieneBoletas);
                this.columnentradaprodID.DefaultValue = ((int)(-1));
                this.columnExistencia.DefaultValue = ((double)(0));
                this.columntieneBoletas.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNCdetalleRow NewdtNCdetalleRow() {
                return ((dtNCdetalleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtNCdetalleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtNCdetalleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtNCdetalleRowChanged != null)) {
                    this.dtNCdetalleRowChanged(this, new dtNCdetalleRowChangeEvent(((dtNCdetalleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtNCdetalleRowChanging != null)) {
                    this.dtNCdetalleRowChanging(this, new dtNCdetalleRowChangeEvent(((dtNCdetalleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtNCdetalleRowDeleted != null)) {
                    this.dtNCdetalleRowDeleted(this, new dtNCdetalleRowChangeEvent(((dtNCdetalleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtNCdetalleRowDeleting != null)) {
                    this.dtNCdetalleRowDeleting(this, new dtNCdetalleRowChangeEvent(((dtNCdetalleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtNCdetalleRow(dtNCdetalleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsNCdetalle ds = new dsNCdetalle();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtNCdetalleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtNCdetalleRow : global::System.Data.DataRow {
            
            private dtNCdetalleDataTable tabledtNCdetalle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtNCdetalleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtNCdetalle = ((dtNCdetalleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NDCDetalleID {
                get {
                    try {
                        return ((int)(this[this.tabledtNCdetalle.NDCDetalleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NDCDetalleID\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.NDCDetalleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int notadecompraID {
                get {
                    try {
                        return ((int)(this[this.tabledtNCdetalle.notadecompraIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notadecompraID\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.notadecompraIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int productoID {
                get {
                    try {
                        return ((int)(this[this.tabledtNCdetalle.productoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'productoID\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.productoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int bodegaID {
                get {
                    try {
                        return ((int)(this[this.tabledtNCdetalle.bodegaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bodegaID\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.bodegaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cantidad {
                get {
                    try {
                        return ((decimal)(this[this.tabledtNCdetalle.CantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cantidad\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.CantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal preciodecompra {
                get {
                    try {
                        return ((decimal)(this[this.tabledtNCdetalle.preciodecompraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'preciodecompra\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.preciodecompraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Importe {
                get {
                    try {
                        return ((decimal)(this[this.tabledtNCdetalle.ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Importe\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int entradaprodID {
                get {
                    try {
                        return ((int)(this[this.tabledtNCdetalle.entradaprodIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'entradaprodID\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.entradaprodIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Producto {
                get {
                    try {
                        return ((string)(this[this.tabledtNCdetalle.ProductoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Producto\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.ProductoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bodega {
                get {
                    try {
                        return ((string)(this[this.tabledtNCdetalle.BodegaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bodega\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.BodegaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grupo {
                get {
                    try {
                        return ((string)(this[this.tabledtNCdetalle.GrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grupo\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.GrupoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int grupoID {
                get {
                    try {
                        return ((int)(this[this.tabledtNCdetalle.grupoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grupoID\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.grupoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Presentación {
                get {
                    try {
                        return ((string)(this[this.tabledtNCdetalle.PresentaciónColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Presentación\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.PresentaciónColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int presentacionID {
                get {
                    try {
                        return ((int)(this[this.tabledtNCdetalle.presentacionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'presentacionID\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.presentacionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Sacos {
                get {
                    try {
                        return ((decimal)(this[this.tabledtNCdetalle.SacosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sacos\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.SacosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unidad {
                get {
                    try {
                        return ((string)(this[this.tabledtNCdetalle.UnidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unidad\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.UnidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int unidadID {
                get {
                    try {
                        return ((int)(this[this.tabledtNCdetalle.unidadIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unidadID\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.unidadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Existencia {
                get {
                    try {
                        return ((double)(this[this.tabledtNCdetalle.ExistenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Existencia\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.ExistenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool tieneBoletas {
                get {
                    try {
                        return ((bool)(this[this.tabledtNCdetalle.tieneBoletasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tieneBoletas\' in table \'dtNCdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNCdetalle.tieneBoletasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNDCDetalleIDNull() {
                return this.IsNull(this.tabledtNCdetalle.NDCDetalleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNDCDetalleIDNull() {
                this[this.tabledtNCdetalle.NDCDetalleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotadecompraIDNull() {
                return this.IsNull(this.tabledtNCdetalle.notadecompraIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotadecompraIDNull() {
                this[this.tabledtNCdetalle.notadecompraIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsproductoIDNull() {
                return this.IsNull(this.tabledtNCdetalle.productoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetproductoIDNull() {
                this[this.tabledtNCdetalle.productoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbodegaIDNull() {
                return this.IsNull(this.tabledtNCdetalle.bodegaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbodegaIDNull() {
                this[this.tabledtNCdetalle.bodegaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCantidadNull() {
                return this.IsNull(this.tabledtNCdetalle.CantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCantidadNull() {
                this[this.tabledtNCdetalle.CantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspreciodecompraNull() {
                return this.IsNull(this.tabledtNCdetalle.preciodecompraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpreciodecompraNull() {
                this[this.tabledtNCdetalle.preciodecompraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteNull() {
                return this.IsNull(this.tabledtNCdetalle.ImporteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteNull() {
                this[this.tabledtNCdetalle.ImporteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsentradaprodIDNull() {
                return this.IsNull(this.tabledtNCdetalle.entradaprodIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetentradaprodIDNull() {
                this[this.tabledtNCdetalle.entradaprodIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductoNull() {
                return this.IsNull(this.tabledtNCdetalle.ProductoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductoNull() {
                this[this.tabledtNCdetalle.ProductoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBodegaNull() {
                return this.IsNull(this.tabledtNCdetalle.BodegaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBodegaNull() {
                this[this.tabledtNCdetalle.BodegaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrupoNull() {
                return this.IsNull(this.tabledtNCdetalle.GrupoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrupoNull() {
                this[this.tabledtNCdetalle.GrupoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrupoIDNull() {
                return this.IsNull(this.tabledtNCdetalle.grupoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrupoIDNull() {
                this[this.tabledtNCdetalle.grupoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPresentaciónNull() {
                return this.IsNull(this.tabledtNCdetalle.PresentaciónColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPresentaciónNull() {
                this[this.tabledtNCdetalle.PresentaciónColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspresentacionIDNull() {
                return this.IsNull(this.tabledtNCdetalle.presentacionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpresentacionIDNull() {
                this[this.tabledtNCdetalle.presentacionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSacosNull() {
                return this.IsNull(this.tabledtNCdetalle.SacosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSacosNull() {
                this[this.tabledtNCdetalle.SacosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadNull() {
                return this.IsNull(this.tabledtNCdetalle.UnidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadNull() {
                this[this.tabledtNCdetalle.UnidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunidadIDNull() {
                return this.IsNull(this.tabledtNCdetalle.unidadIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunidadIDNull() {
                this[this.tabledtNCdetalle.unidadIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExistenciaNull() {
                return this.IsNull(this.tabledtNCdetalle.ExistenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExistenciaNull() {
                this[this.tabledtNCdetalle.ExistenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstieneBoletasNull() {
                return this.IsNull(this.tabledtNCdetalle.tieneBoletasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettieneBoletasNull() {
                this[this.tabledtNCdetalle.tieneBoletasColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtNCdetalleRowChangeEvent : global::System.EventArgs {
            
            private dtNCdetalleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNCdetalleRowChangeEvent(dtNCdetalleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNCdetalleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591