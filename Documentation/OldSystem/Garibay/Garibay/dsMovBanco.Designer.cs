//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Garibay {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsMovBanco")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsMovBanco : global::System.Data.DataSet {
        
        private dtMovBancoDataTable tabledtMovBanco;
        
        private dtSaldosDataTable tabledtSaldos;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsMovBanco() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsMovBanco(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtMovBanco"] != null)) {
                    base.Tables.Add(new dtMovBancoDataTable(ds.Tables["dtMovBanco"]));
                }
                if ((ds.Tables["dtSaldos"] != null)) {
                    base.Tables.Add(new dtSaldosDataTable(ds.Tables["dtSaldos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtMovBancoDataTable dtMovBanco {
            get {
                return this.tabledtMovBanco;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtSaldosDataTable dtSaldos {
            get {
                return this.tabledtSaldos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsMovBanco cln = ((dsMovBanco)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtMovBanco"] != null)) {
                    base.Tables.Add(new dtMovBancoDataTable(ds.Tables["dtMovBanco"]));
                }
                if ((ds.Tables["dtSaldos"] != null)) {
                    base.Tables.Add(new dtSaldosDataTable(ds.Tables["dtSaldos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtMovBanco = ((dtMovBancoDataTable)(base.Tables["dtMovBanco"]));
            if ((initTable == true)) {
                if ((this.tabledtMovBanco != null)) {
                    this.tabledtMovBanco.InitVars();
                }
            }
            this.tabledtSaldos = ((dtSaldosDataTable)(base.Tables["dtSaldos"]));
            if ((initTable == true)) {
                if ((this.tabledtSaldos != null)) {
                    this.tabledtSaldos.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsMovBanco";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsMovBanco.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtMovBanco = new dtMovBancoDataTable();
            base.Tables.Add(this.tabledtMovBanco);
            this.tabledtSaldos = new dtSaldosDataTable();
            base.Tables.Add(this.tabledtSaldos);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtMovBanco() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtSaldos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsMovBanco ds = new dsMovBanco();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtMovBancoRowChangeEventHandler(object sender, dtMovBancoRowChangeEvent e);
        
        public delegate void dtSaldosRowChangeEventHandler(object sender, dtSaldosRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtMovBancoDataTable : global::System.Data.TypedTableBase<dtMovBancoRow> {
            
            private global::System.Data.DataColumn columnmovBanID;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnconcepto;
            
            private global::System.Data.DataColumn columnconceptoID;
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columncargo;
            
            private global::System.Data.DataColumn columnabono;
            
            private global::System.Data.DataColumn columnsaldo;
            
            private global::System.Data.DataColumn columnuserID;
            
            private global::System.Data.DataColumn columnstoreTS;
            
            private global::System.Data.DataColumn columnupdateTS;
            
            private global::System.Data.DataColumn columncuentaID;
            
            private global::System.Data.DataColumn columnnumCabezas;
            
            private global::System.Data.DataColumn columnnumCheque;
            
            private global::System.Data.DataColumn columnfacturaOlarguillo;
            
            private global::System.Data.DataColumn columnchequeNombre;
            
            private global::System.Data.DataColumn columncatalogoMovBancoFiscalID;
            
            private global::System.Data.DataColumn columnsubCatalogoMovBancoFiscalID;
            
            private global::System.Data.DataColumn columncatalogoMovBancoInternoID;
            
            private global::System.Data.DataColumn columnsubCatalogoMovBancoInternoID;
            
            private global::System.Data.DataColumn columnchequecobrado;
            
            private global::System.Data.DataColumn columnfechachequedecobro;
            
            private global::System.Data.DataColumn columnsubconceptointerno;
            
            private global::System.Data.DataColumn columnconceptointerno;
            
            private global::System.Data.DataColumn columnconceptofiscal;
            
            private global::System.Data.DataColumn columnsubconceptofiscal;
            
            private global::System.Data.DataColumn columnnombreinterno;
            
            private global::System.Data.DataColumn columncreditoFinancieroID;
            
            private global::System.Data.DataColumn columnbancocreditoFinanciero;
            
            private global::System.Data.DataColumn columnnumCredito;
            
            private global::System.Data.DataColumn columnfechaCheque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMovBancoDataTable() {
                this.TableName = "dtMovBanco";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMovBancoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtMovBancoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn movBanIDColumn {
                get {
                    return this.columnmovBanID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conceptoColumn {
                get {
                    return this.columnconcepto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conceptoIDColumn {
                get {
                    return this.columnconceptoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cargoColumn {
                get {
                    return this.columncargo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn abonoColumn {
                get {
                    return this.columnabono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn saldoColumn {
                get {
                    return this.columnsaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn storeTSColumn {
                get {
                    return this.columnstoreTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updateTSColumn {
                get {
                    return this.columnupdateTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cuentaIDColumn {
                get {
                    return this.columncuentaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numCabezasColumn {
                get {
                    return this.columnnumCabezas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numChequeColumn {
                get {
                    return this.columnnumCheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn facturaOlarguilloColumn {
                get {
                    return this.columnfacturaOlarguillo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chequeNombreColumn {
                get {
                    return this.columnchequeNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn catalogoMovBancoFiscalIDColumn {
                get {
                    return this.columncatalogoMovBancoFiscalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subCatalogoMovBancoFiscalIDColumn {
                get {
                    return this.columnsubCatalogoMovBancoFiscalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn catalogoMovBancoInternoIDColumn {
                get {
                    return this.columncatalogoMovBancoInternoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subCatalogoMovBancoInternoIDColumn {
                get {
                    return this.columnsubCatalogoMovBancoInternoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn chequecobradoColumn {
                get {
                    return this.columnchequecobrado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechachequedecobroColumn {
                get {
                    return this.columnfechachequedecobro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subconceptointernoColumn {
                get {
                    return this.columnsubconceptointerno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conceptointernoColumn {
                get {
                    return this.columnconceptointerno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conceptofiscalColumn {
                get {
                    return this.columnconceptofiscal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subconceptofiscalColumn {
                get {
                    return this.columnsubconceptofiscal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreinternoColumn {
                get {
                    return this.columnnombreinterno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn creditoFinancieroIDColumn {
                get {
                    return this.columncreditoFinancieroID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bancocreditoFinancieroColumn {
                get {
                    return this.columnbancocreditoFinanciero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numCreditoColumn {
                get {
                    return this.columnnumCredito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaChequeColumn {
                get {
                    return this.columnfechaCheque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMovBancoRow this[int index] {
                get {
                    return ((dtMovBancoRow)(this.Rows[index]));
                }
            }
            
            public event dtMovBancoRowChangeEventHandler dtMovBancoRowChanging;
            
            public event dtMovBancoRowChangeEventHandler dtMovBancoRowChanged;
            
            public event dtMovBancoRowChangeEventHandler dtMovBancoRowDeleting;
            
            public event dtMovBancoRowChangeEventHandler dtMovBancoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtMovBancoRow(dtMovBancoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMovBancoRow AdddtMovBancoRow(
                        int movBanID, 
                        System.DateTime fecha, 
                        string concepto, 
                        int conceptoID, 
                        string nombre, 
                        double cargo, 
                        double abono, 
                        double saldo, 
                        int userID, 
                        System.DateTime storeTS, 
                        System.DateTime updateTS, 
                        int cuentaID, 
                        double numCabezas, 
                        int numCheque, 
                        string facturaOlarguillo, 
                        string chequeNombre, 
                        int catalogoMovBancoFiscalID, 
                        int subCatalogoMovBancoFiscalID, 
                        int catalogoMovBancoInternoID, 
                        int subCatalogoMovBancoInternoID, 
                        bool chequecobrado, 
                        System.DateTime fechachequedecobro, 
                        string subconceptointerno, 
                        string conceptointerno, 
                        string conceptofiscal, 
                        string subconceptofiscal, 
                        string nombreinterno, 
                        int creditoFinancieroID, 
                        string bancocreditoFinanciero, 
                        string numCredito, 
                        System.DateTime fechaCheque) {
                dtMovBancoRow rowdtMovBancoRow = ((dtMovBancoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        movBanID,
                        fecha,
                        concepto,
                        conceptoID,
                        nombre,
                        cargo,
                        abono,
                        saldo,
                        userID,
                        storeTS,
                        updateTS,
                        cuentaID,
                        numCabezas,
                        numCheque,
                        facturaOlarguillo,
                        chequeNombre,
                        catalogoMovBancoFiscalID,
                        subCatalogoMovBancoFiscalID,
                        catalogoMovBancoInternoID,
                        subCatalogoMovBancoInternoID,
                        chequecobrado,
                        fechachequedecobro,
                        subconceptointerno,
                        conceptointerno,
                        conceptofiscal,
                        subconceptofiscal,
                        nombreinterno,
                        creditoFinancieroID,
                        bancocreditoFinanciero,
                        numCredito,
                        fechaCheque};
                rowdtMovBancoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtMovBancoRow);
                return rowdtMovBancoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtMovBancoDataTable cln = ((dtMovBancoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtMovBancoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmovBanID = base.Columns["movBanID"];
                this.columnfecha = base.Columns["fecha"];
                this.columnconcepto = base.Columns["concepto"];
                this.columnconceptoID = base.Columns["conceptoID"];
                this.columnnombre = base.Columns["nombre"];
                this.columncargo = base.Columns["cargo"];
                this.columnabono = base.Columns["abono"];
                this.columnsaldo = base.Columns["saldo"];
                this.columnuserID = base.Columns["userID"];
                this.columnstoreTS = base.Columns["storeTS"];
                this.columnupdateTS = base.Columns["updateTS"];
                this.columncuentaID = base.Columns["cuentaID"];
                this.columnnumCabezas = base.Columns["numCabezas"];
                this.columnnumCheque = base.Columns["numCheque"];
                this.columnfacturaOlarguillo = base.Columns["facturaOlarguillo"];
                this.columnchequeNombre = base.Columns["chequeNombre"];
                this.columncatalogoMovBancoFiscalID = base.Columns["catalogoMovBancoFiscalID"];
                this.columnsubCatalogoMovBancoFiscalID = base.Columns["subCatalogoMovBancoFiscalID"];
                this.columncatalogoMovBancoInternoID = base.Columns["catalogoMovBancoInternoID"];
                this.columnsubCatalogoMovBancoInternoID = base.Columns["subCatalogoMovBancoInternoID"];
                this.columnchequecobrado = base.Columns["chequecobrado"];
                this.columnfechachequedecobro = base.Columns["fechachequedecobro"];
                this.columnsubconceptointerno = base.Columns["subconceptointerno"];
                this.columnconceptointerno = base.Columns["conceptointerno"];
                this.columnconceptofiscal = base.Columns["conceptofiscal"];
                this.columnsubconceptofiscal = base.Columns["subconceptofiscal"];
                this.columnnombreinterno = base.Columns["nombreinterno"];
                this.columncreditoFinancieroID = base.Columns["creditoFinancieroID"];
                this.columnbancocreditoFinanciero = base.Columns["bancocreditoFinanciero"];
                this.columnnumCredito = base.Columns["numCredito"];
                this.columnfechaCheque = base.Columns["fechaCheque"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmovBanID = new global::System.Data.DataColumn("movBanID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmovBanID);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnconcepto = new global::System.Data.DataColumn("concepto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconcepto);
                this.columnconceptoID = new global::System.Data.DataColumn("conceptoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconceptoID);
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columncargo = new global::System.Data.DataColumn("cargo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncargo);
                this.columnabono = new global::System.Data.DataColumn("abono", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabono);
                this.columnsaldo = new global::System.Data.DataColumn("saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsaldo);
                this.columnuserID = new global::System.Data.DataColumn("userID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columnstoreTS = new global::System.Data.DataColumn("storeTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstoreTS);
                this.columnupdateTS = new global::System.Data.DataColumn("updateTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdateTS);
                this.columncuentaID = new global::System.Data.DataColumn("cuentaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncuentaID);
                this.columnnumCabezas = new global::System.Data.DataColumn("numCabezas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumCabezas);
                this.columnnumCheque = new global::System.Data.DataColumn("numCheque", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumCheque);
                this.columnfacturaOlarguillo = new global::System.Data.DataColumn("facturaOlarguillo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfacturaOlarguillo);
                this.columnchequeNombre = new global::System.Data.DataColumn("chequeNombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchequeNombre);
                this.columncatalogoMovBancoFiscalID = new global::System.Data.DataColumn("catalogoMovBancoFiscalID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncatalogoMovBancoFiscalID);
                this.columnsubCatalogoMovBancoFiscalID = new global::System.Data.DataColumn("subCatalogoMovBancoFiscalID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubCatalogoMovBancoFiscalID);
                this.columncatalogoMovBancoInternoID = new global::System.Data.DataColumn("catalogoMovBancoInternoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncatalogoMovBancoInternoID);
                this.columnsubCatalogoMovBancoInternoID = new global::System.Data.DataColumn("subCatalogoMovBancoInternoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubCatalogoMovBancoInternoID);
                this.columnchequecobrado = new global::System.Data.DataColumn("chequecobrado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchequecobrado);
                this.columnfechachequedecobro = new global::System.Data.DataColumn("fechachequedecobro", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechachequedecobro);
                this.columnsubconceptointerno = new global::System.Data.DataColumn("subconceptointerno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubconceptointerno);
                this.columnconceptointerno = new global::System.Data.DataColumn("conceptointerno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconceptointerno);
                this.columnconceptofiscal = new global::System.Data.DataColumn("conceptofiscal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconceptofiscal);
                this.columnsubconceptofiscal = new global::System.Data.DataColumn("subconceptofiscal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubconceptofiscal);
                this.columnnombreinterno = new global::System.Data.DataColumn("nombreinterno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombreinterno);
                this.columncreditoFinancieroID = new global::System.Data.DataColumn("creditoFinancieroID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreditoFinancieroID);
                this.columnbancocreditoFinanciero = new global::System.Data.DataColumn("bancocreditoFinanciero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbancocreditoFinanciero);
                this.columnnumCredito = new global::System.Data.DataColumn("numCredito", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumCredito);
                this.columnfechaCheque = new global::System.Data.DataColumn("fechaCheque", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaCheque);
                this.columnnumCheque.DefaultValue = ((int)(0));
                this.columncatalogoMovBancoFiscalID.DefaultValue = ((int)(-1));
                this.columnsubCatalogoMovBancoFiscalID.DefaultValue = ((int)(-1));
                this.columncatalogoMovBancoInternoID.DefaultValue = ((int)(-1));
                this.columnsubCatalogoMovBancoInternoID.DefaultValue = ((int)(-1));
                this.columncreditoFinancieroID.DefaultValue = ((int)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMovBancoRow NewdtMovBancoRow() {
                return ((dtMovBancoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtMovBancoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtMovBancoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtMovBancoRowChanged != null)) {
                    this.dtMovBancoRowChanged(this, new dtMovBancoRowChangeEvent(((dtMovBancoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtMovBancoRowChanging != null)) {
                    this.dtMovBancoRowChanging(this, new dtMovBancoRowChangeEvent(((dtMovBancoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtMovBancoRowDeleted != null)) {
                    this.dtMovBancoRowDeleted(this, new dtMovBancoRowChangeEvent(((dtMovBancoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtMovBancoRowDeleting != null)) {
                    this.dtMovBancoRowDeleting(this, new dtMovBancoRowChangeEvent(((dtMovBancoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtMovBancoRow(dtMovBancoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMovBanco ds = new dsMovBanco();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtMovBancoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtSaldosDataTable : global::System.Data.TypedTableBase<dtSaldosRow> {
            
            private global::System.Data.DataColumn columncuentaID;
            
            private global::System.Data.DataColumn columnCargos;
            
            private global::System.Data.DataColumn columnAbonos;
            
            private global::System.Data.DataColumn columnMonth;
            
            private global::System.Data.DataColumn columnYear;
            
            private global::System.Data.DataColumn columnSaldo;
            
            private global::System.Data.DataColumn columnPeriodo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaldosDataTable() {
                this.TableName = "dtSaldos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSaldosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtSaldosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cuentaIDColumn {
                get {
                    return this.columncuentaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CargosColumn {
                get {
                    return this.columnCargos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AbonosColumn {
                get {
                    return this.columnAbonos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PeriodoColumn {
                get {
                    return this.columnPeriodo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaldosRow this[int index] {
                get {
                    return ((dtSaldosRow)(this.Rows[index]));
                }
            }
            
            public event dtSaldosRowChangeEventHandler dtSaldosRowChanging;
            
            public event dtSaldosRowChangeEventHandler dtSaldosRowChanged;
            
            public event dtSaldosRowChangeEventHandler dtSaldosRowDeleting;
            
            public event dtSaldosRowChangeEventHandler dtSaldosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtSaldosRow(dtSaldosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaldosRow AdddtSaldosRow(int cuentaID, double Cargos, double Abonos, string Month, int Year, double Saldo, string Periodo) {
                dtSaldosRow rowdtSaldosRow = ((dtSaldosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        cuentaID,
                        Cargos,
                        Abonos,
                        Month,
                        Year,
                        Saldo,
                        Periodo};
                rowdtSaldosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtSaldosRow);
                return rowdtSaldosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtSaldosDataTable cln = ((dtSaldosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtSaldosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncuentaID = base.Columns["cuentaID"];
                this.columnCargos = base.Columns["Cargos"];
                this.columnAbonos = base.Columns["Abonos"];
                this.columnMonth = base.Columns["Month"];
                this.columnYear = base.Columns["Year"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnPeriodo = base.Columns["Periodo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncuentaID = new global::System.Data.DataColumn("cuentaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncuentaID);
                this.columnCargos = new global::System.Data.DataColumn("Cargos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCargos);
                this.columnAbonos = new global::System.Data.DataColumn("Abonos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbonos);
                this.columnMonth = new global::System.Data.DataColumn("Month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnPeriodo = new global::System.Data.DataColumn("Periodo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriodo);
                this.columncuentaID.DefaultValue = ((int)(-1));
                this.columnCargos.DefaultValue = ((double)(0));
                this.columnAbonos.DefaultValue = ((double)(0));
                this.columnYear.DefaultValue = ((int)(2009));
                this.columnSaldo.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaldosRow NewdtSaldosRow() {
                return ((dtSaldosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtSaldosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtSaldosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtSaldosRowChanged != null)) {
                    this.dtSaldosRowChanged(this, new dtSaldosRowChangeEvent(((dtSaldosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtSaldosRowChanging != null)) {
                    this.dtSaldosRowChanging(this, new dtSaldosRowChangeEvent(((dtSaldosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtSaldosRowDeleted != null)) {
                    this.dtSaldosRowDeleted(this, new dtSaldosRowChangeEvent(((dtSaldosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtSaldosRowDeleting != null)) {
                    this.dtSaldosRowDeleting(this, new dtSaldosRowChangeEvent(((dtSaldosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtSaldosRow(dtSaldosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMovBanco ds = new dsMovBanco();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtSaldosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtMovBancoRow : global::System.Data.DataRow {
            
            private dtMovBancoDataTable tabledtMovBanco;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtMovBancoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtMovBanco = ((dtMovBancoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int movBanID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.movBanIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'movBanID\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.movBanIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMovBanco.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string concepto {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.conceptoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'concepto\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.conceptoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int conceptoID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.conceptoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conceptoID\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.conceptoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.nombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombre\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cargo {
                get {
                    try {
                        return ((double)(this[this.tabledtMovBanco.cargoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cargo\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.cargoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double abono {
                get {
                    try {
                        return ((double)(this[this.tabledtMovBanco.abonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'abono\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.abonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double saldo {
                get {
                    try {
                        return ((double)(this[this.tabledtMovBanco.saldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'saldo\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.saldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.userIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userID\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.userIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime storeTS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMovBanco.storeTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'storeTS\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.storeTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updateTS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMovBanco.updateTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updateTS\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.updateTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cuentaID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.cuentaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cuentaID\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.cuentaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double numCabezas {
                get {
                    try {
                        return ((double)(this[this.tabledtMovBanco.numCabezasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numCabezas\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.numCabezasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int numCheque {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.numChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numCheque\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.numChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string facturaOlarguillo {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.facturaOlarguilloColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'facturaOlarguillo\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.facturaOlarguilloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chequeNombre {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.chequeNombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chequeNombre\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.chequeNombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int catalogoMovBancoFiscalID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.catalogoMovBancoFiscalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'catalogoMovBancoFiscalID\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.catalogoMovBancoFiscalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int subCatalogoMovBancoFiscalID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.subCatalogoMovBancoFiscalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subCatalogoMovBancoFiscalID\' in table \'dtMovBanco\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.subCatalogoMovBancoFiscalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int catalogoMovBancoInternoID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.catalogoMovBancoInternoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'catalogoMovBancoInternoID\' in table \'dtMovBanco\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.catalogoMovBancoInternoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int subCatalogoMovBancoInternoID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.subCatalogoMovBancoInternoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subCatalogoMovBancoInternoID\' in table \'dtMovBanco\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.subCatalogoMovBancoInternoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool chequecobrado {
                get {
                    try {
                        return ((bool)(this[this.tabledtMovBanco.chequecobradoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chequecobrado\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.chequecobradoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechachequedecobro {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMovBanco.fechachequedecobroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechachequedecobro\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.fechachequedecobroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subconceptointerno {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.subconceptointernoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subconceptointerno\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.subconceptointernoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conceptointerno {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.conceptointernoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conceptointerno\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.conceptointernoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conceptofiscal {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.conceptofiscalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conceptofiscal\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.conceptofiscalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subconceptofiscal {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.subconceptofiscalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subconceptofiscal\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.subconceptofiscalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombreinterno {
                get {
                    try {
                        return ((string)(this[this.tabledtMovBanco.nombreinternoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombreinterno\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.nombreinternoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int creditoFinancieroID {
                get {
                    try {
                        return ((int)(this[this.tabledtMovBanco.creditoFinancieroIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'creditoFinancieroID\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.creditoFinancieroIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bancocreditoFinanciero {
                get {
                    if (this.IsbancocreditoFinancieroNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabledtMovBanco.bancocreditoFinancieroColumn]));
                    }
                }
                set {
                    this[this.tabledtMovBanco.bancocreditoFinancieroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string numCredito {
                get {
                    if (this.IsnumCreditoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabledtMovBanco.numCreditoColumn]));
                    }
                }
                set {
                    this[this.tabledtMovBanco.numCreditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechaCheque {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtMovBanco.fechaChequeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechaCheque\' in table \'dtMovBanco\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtMovBanco.fechaChequeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmovBanIDNull() {
                return this.IsNull(this.tabledtMovBanco.movBanIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmovBanIDNull() {
                this[this.tabledtMovBanco.movBanIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledtMovBanco.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledtMovBanco.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconceptoNull() {
                return this.IsNull(this.tabledtMovBanco.conceptoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconceptoNull() {
                this[this.tabledtMovBanco.conceptoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconceptoIDNull() {
                return this.IsNull(this.tabledtMovBanco.conceptoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconceptoIDNull() {
                this[this.tabledtMovBanco.conceptoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreNull() {
                return this.IsNull(this.tabledtMovBanco.nombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreNull() {
                this[this.tabledtMovBanco.nombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscargoNull() {
                return this.IsNull(this.tabledtMovBanco.cargoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcargoNull() {
                this[this.tabledtMovBanco.cargoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsabonoNull() {
                return this.IsNull(this.tabledtMovBanco.abonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetabonoNull() {
                this[this.tabledtMovBanco.abonoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssaldoNull() {
                return this.IsNull(this.tabledtMovBanco.saldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsaldoNull() {
                this[this.tabledtMovBanco.saldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserIDNull() {
                return this.IsNull(this.tabledtMovBanco.userIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserIDNull() {
                this[this.tabledtMovBanco.userIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstoreTSNull() {
                return this.IsNull(this.tabledtMovBanco.storeTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstoreTSNull() {
                this[this.tabledtMovBanco.storeTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdateTSNull() {
                return this.IsNull(this.tabledtMovBanco.updateTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdateTSNull() {
                this[this.tabledtMovBanco.updateTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscuentaIDNull() {
                return this.IsNull(this.tabledtMovBanco.cuentaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcuentaIDNull() {
                this[this.tabledtMovBanco.cuentaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumCabezasNull() {
                return this.IsNull(this.tabledtMovBanco.numCabezasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumCabezasNull() {
                this[this.tabledtMovBanco.numCabezasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumChequeNull() {
                return this.IsNull(this.tabledtMovBanco.numChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumChequeNull() {
                this[this.tabledtMovBanco.numChequeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfacturaOlarguilloNull() {
                return this.IsNull(this.tabledtMovBanco.facturaOlarguilloColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfacturaOlarguilloNull() {
                this[this.tabledtMovBanco.facturaOlarguilloColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschequeNombreNull() {
                return this.IsNull(this.tabledtMovBanco.chequeNombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchequeNombreNull() {
                this[this.tabledtMovBanco.chequeNombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscatalogoMovBancoFiscalIDNull() {
                return this.IsNull(this.tabledtMovBanco.catalogoMovBancoFiscalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcatalogoMovBancoFiscalIDNull() {
                this[this.tabledtMovBanco.catalogoMovBancoFiscalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubCatalogoMovBancoFiscalIDNull() {
                return this.IsNull(this.tabledtMovBanco.subCatalogoMovBancoFiscalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubCatalogoMovBancoFiscalIDNull() {
                this[this.tabledtMovBanco.subCatalogoMovBancoFiscalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscatalogoMovBancoInternoIDNull() {
                return this.IsNull(this.tabledtMovBanco.catalogoMovBancoInternoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcatalogoMovBancoInternoIDNull() {
                this[this.tabledtMovBanco.catalogoMovBancoInternoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubCatalogoMovBancoInternoIDNull() {
                return this.IsNull(this.tabledtMovBanco.subCatalogoMovBancoInternoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubCatalogoMovBancoInternoIDNull() {
                this[this.tabledtMovBanco.subCatalogoMovBancoInternoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschequecobradoNull() {
                return this.IsNull(this.tabledtMovBanco.chequecobradoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchequecobradoNull() {
                this[this.tabledtMovBanco.chequecobradoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechachequedecobroNull() {
                return this.IsNull(this.tabledtMovBanco.fechachequedecobroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechachequedecobroNull() {
                this[this.tabledtMovBanco.fechachequedecobroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubconceptointernoNull() {
                return this.IsNull(this.tabledtMovBanco.subconceptointernoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubconceptointernoNull() {
                this[this.tabledtMovBanco.subconceptointernoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconceptointernoNull() {
                return this.IsNull(this.tabledtMovBanco.conceptointernoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconceptointernoNull() {
                this[this.tabledtMovBanco.conceptointernoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconceptofiscalNull() {
                return this.IsNull(this.tabledtMovBanco.conceptofiscalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconceptofiscalNull() {
                this[this.tabledtMovBanco.conceptofiscalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubconceptofiscalNull() {
                return this.IsNull(this.tabledtMovBanco.subconceptofiscalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubconceptofiscalNull() {
                this[this.tabledtMovBanco.subconceptofiscalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombreinternoNull() {
                return this.IsNull(this.tabledtMovBanco.nombreinternoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombreinternoNull() {
                this[this.tabledtMovBanco.nombreinternoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreditoFinancieroIDNull() {
                return this.IsNull(this.tabledtMovBanco.creditoFinancieroIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreditoFinancieroIDNull() {
                this[this.tabledtMovBanco.creditoFinancieroIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbancocreditoFinancieroNull() {
                return this.IsNull(this.tabledtMovBanco.bancocreditoFinancieroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbancocreditoFinancieroNull() {
                this[this.tabledtMovBanco.bancocreditoFinancieroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumCreditoNull() {
                return this.IsNull(this.tabledtMovBanco.numCreditoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumCreditoNull() {
                this[this.tabledtMovBanco.numCreditoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaChequeNull() {
                return this.IsNull(this.tabledtMovBanco.fechaChequeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaChequeNull() {
                this[this.tabledtMovBanco.fechaChequeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtSaldosRow : global::System.Data.DataRow {
            
            private dtSaldosDataTable tabledtSaldos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSaldosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtSaldos = ((dtSaldosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cuentaID {
                get {
                    try {
                        return ((int)(this[this.tabledtSaldos.cuentaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cuentaID\' in table \'dtSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaldos.cuentaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cargos {
                get {
                    try {
                        return ((double)(this[this.tabledtSaldos.CargosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cargos\' in table \'dtSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaldos.CargosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Abonos {
                get {
                    try {
                        return ((double)(this[this.tabledtSaldos.AbonosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abonos\' in table \'dtSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaldos.AbonosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Month {
                get {
                    try {
                        return ((string)(this[this.tabledtSaldos.MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Month\' in table \'dtSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaldos.MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Year {
                get {
                    try {
                        return ((int)(this[this.tabledtSaldos.YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Year\' in table \'dtSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaldos.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Saldo {
                get {
                    try {
                        return ((double)(this[this.tabledtSaldos.SaldoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Saldo\' in table \'dtSaldos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtSaldos.SaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Periodo {
                get {
                    if (this.IsPeriodoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabledtSaldos.PeriodoColumn]));
                    }
                }
                set {
                    this[this.tabledtSaldos.PeriodoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscuentaIDNull() {
                return this.IsNull(this.tabledtSaldos.cuentaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcuentaIDNull() {
                this[this.tabledtSaldos.cuentaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCargosNull() {
                return this.IsNull(this.tabledtSaldos.CargosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCargosNull() {
                this[this.tabledtSaldos.CargosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbonosNull() {
                return this.IsNull(this.tabledtSaldos.AbonosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbonosNull() {
                this[this.tabledtSaldos.AbonosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthNull() {
                return this.IsNull(this.tabledtSaldos.MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthNull() {
                this[this.tabledtSaldos.MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearNull() {
                return this.IsNull(this.tabledtSaldos.YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearNull() {
                this[this.tabledtSaldos.YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaldoNull() {
                return this.IsNull(this.tabledtSaldos.SaldoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaldoNull() {
                this[this.tabledtSaldos.SaldoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPeriodoNull() {
                return this.IsNull(this.tabledtSaldos.PeriodoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPeriodoNull() {
                this[this.tabledtSaldos.PeriodoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtMovBancoRowChangeEvent : global::System.EventArgs {
            
            private dtMovBancoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMovBancoRowChangeEvent(dtMovBancoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtMovBancoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtSaldosRowChangeEvent : global::System.EventArgs {
            
            private dtSaldosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaldosRowChangeEvent(dtSaldosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSaldosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591