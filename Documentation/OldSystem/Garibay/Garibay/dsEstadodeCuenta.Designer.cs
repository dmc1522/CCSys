//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Garibay {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsEstadodeCuenta")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsEstadodeCuenta : global::System.Data.DataSet {
        
        private dtEstadodeCuentaDataTable tabledtEstadodeCuenta;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsEstadodeCuenta() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsEstadodeCuenta(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtEstadodeCuenta"] != null)) {
                    base.Tables.Add(new dtEstadodeCuentaDataTable(ds.Tables["dtEstadodeCuenta"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtEstadodeCuentaDataTable dtEstadodeCuenta {
            get {
                return this.tabledtEstadodeCuenta;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsEstadodeCuenta cln = ((dsEstadodeCuenta)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtEstadodeCuenta"] != null)) {
                    base.Tables.Add(new dtEstadodeCuentaDataTable(ds.Tables["dtEstadodeCuenta"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtEstadodeCuenta = ((dtEstadodeCuentaDataTable)(base.Tables["dtEstadodeCuenta"]));
            if ((initTable == true)) {
                if ((this.tabledtEstadodeCuenta != null)) {
                    this.tabledtEstadodeCuenta.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsEstadodeCuenta";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsEstadodeCuenta.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtEstadodeCuenta = new dtEstadodeCuentaDataTable();
            base.Tables.Add(this.tabledtEstadodeCuenta);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtEstadodeCuenta() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsEstadodeCuenta ds = new dsEstadodeCuenta();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtEstadodeCuentaRowChangeEventHandler(object sender, dtEstadodeCuentaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtEstadodeCuentaDataTable : global::System.Data.TypedTableBase<dtEstadodeCuentaRow> {
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnmontocredito;
            
            private global::System.Data.DataColumn columnfechadePago;
            
            private global::System.Data.DataColumn columntotaldias;
            
            private global::System.Data.DataColumn columnintereses;
            
            private global::System.Data.DataColumn columndebe;
            
            private global::System.Data.DataColumn columnabonado;
            
            private global::System.Data.DataColumn columntotaldebe;
            
            private global::System.Data.DataColumn columnmes;
            
            private global::System.Data.DataColumn columnconcepto;
            
            private global::System.Data.DataColumn columndescpago;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEstadodeCuentaDataTable() {
                this.TableName = "dtEstadodeCuenta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtEstadodeCuentaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtEstadodeCuentaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn montocreditoColumn {
                get {
                    return this.columnmontocredito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechadePagoColumn {
                get {
                    return this.columnfechadePago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totaldiasColumn {
                get {
                    return this.columntotaldias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn interesesColumn {
                get {
                    return this.columnintereses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn debeColumn {
                get {
                    return this.columndebe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn abonadoColumn {
                get {
                    return this.columnabonado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totaldebeColumn {
                get {
                    return this.columntotaldebe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mesColumn {
                get {
                    return this.columnmes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conceptoColumn {
                get {
                    return this.columnconcepto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descpagoColumn {
                get {
                    return this.columndescpago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEstadodeCuentaRow this[int index] {
                get {
                    return ((dtEstadodeCuentaRow)(this.Rows[index]));
                }
            }
            
            public event dtEstadodeCuentaRowChangeEventHandler dtEstadodeCuentaRowChanging;
            
            public event dtEstadodeCuentaRowChangeEventHandler dtEstadodeCuentaRowChanged;
            
            public event dtEstadodeCuentaRowChangeEventHandler dtEstadodeCuentaRowDeleting;
            
            public event dtEstadodeCuentaRowChangeEventHandler dtEstadodeCuentaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtEstadodeCuentaRow(dtEstadodeCuentaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEstadodeCuentaRow AdddtEstadodeCuentaRow(System.DateTime fecha, double montocredito, System.DateTime fechadePago, int totaldias, double intereses, double debe, double abonado, double totaldebe, string mes, string concepto, string descpago) {
                dtEstadodeCuentaRow rowdtEstadodeCuentaRow = ((dtEstadodeCuentaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        fecha,
                        montocredito,
                        fechadePago,
                        totaldias,
                        intereses,
                        debe,
                        abonado,
                        totaldebe,
                        mes,
                        concepto,
                        descpago};
                rowdtEstadodeCuentaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtEstadodeCuentaRow);
                return rowdtEstadodeCuentaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtEstadodeCuentaDataTable cln = ((dtEstadodeCuentaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtEstadodeCuentaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnfecha = base.Columns["fecha"];
                this.columnmontocredito = base.Columns["montocredito"];
                this.columnfechadePago = base.Columns["fechadePago"];
                this.columntotaldias = base.Columns["totaldias"];
                this.columnintereses = base.Columns["intereses"];
                this.columndebe = base.Columns["debe"];
                this.columnabonado = base.Columns["abonado"];
                this.columntotaldebe = base.Columns["totaldebe"];
                this.columnmes = base.Columns["mes"];
                this.columnconcepto = base.Columns["concepto"];
                this.columndescpago = base.Columns["descpago"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnmontocredito = new global::System.Data.DataColumn("montocredito", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmontocredito);
                this.columnfechadePago = new global::System.Data.DataColumn("fechadePago", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechadePago);
                this.columntotaldias = new global::System.Data.DataColumn("totaldias", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotaldias);
                this.columnintereses = new global::System.Data.DataColumn("intereses", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintereses);
                this.columndebe = new global::System.Data.DataColumn("debe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndebe);
                this.columnabonado = new global::System.Data.DataColumn("abonado", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabonado);
                this.columntotaldebe = new global::System.Data.DataColumn("totaldebe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotaldebe);
                this.columnmes = new global::System.Data.DataColumn("mes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmes);
                this.columnconcepto = new global::System.Data.DataColumn("concepto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconcepto);
                this.columndescpago = new global::System.Data.DataColumn("descpago", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescpago);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEstadodeCuentaRow NewdtEstadodeCuentaRow() {
                return ((dtEstadodeCuentaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtEstadodeCuentaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtEstadodeCuentaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtEstadodeCuentaRowChanged != null)) {
                    this.dtEstadodeCuentaRowChanged(this, new dtEstadodeCuentaRowChangeEvent(((dtEstadodeCuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtEstadodeCuentaRowChanging != null)) {
                    this.dtEstadodeCuentaRowChanging(this, new dtEstadodeCuentaRowChangeEvent(((dtEstadodeCuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtEstadodeCuentaRowDeleted != null)) {
                    this.dtEstadodeCuentaRowDeleted(this, new dtEstadodeCuentaRowChangeEvent(((dtEstadodeCuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtEstadodeCuentaRowDeleting != null)) {
                    this.dtEstadodeCuentaRowDeleting(this, new dtEstadodeCuentaRowChangeEvent(((dtEstadodeCuentaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtEstadodeCuentaRow(dtEstadodeCuentaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEstadodeCuenta ds = new dsEstadodeCuenta();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtEstadodeCuentaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtEstadodeCuentaRow : global::System.Data.DataRow {
            
            private dtEstadodeCuentaDataTable tabledtEstadodeCuenta;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtEstadodeCuentaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtEstadodeCuenta = ((dtEstadodeCuentaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtEstadodeCuenta.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double montocredito {
                get {
                    try {
                        return ((double)(this[this.tabledtEstadodeCuenta.montocreditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'montocredito\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.montocreditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechadePago {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtEstadodeCuenta.fechadePagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechadePago\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.fechadePagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int totaldias {
                get {
                    try {
                        return ((int)(this[this.tabledtEstadodeCuenta.totaldiasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totaldias\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.totaldiasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double intereses {
                get {
                    try {
                        return ((double)(this[this.tabledtEstadodeCuenta.interesesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intereses\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.interesesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double debe {
                get {
                    try {
                        return ((double)(this[this.tabledtEstadodeCuenta.debeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'debe\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.debeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double abonado {
                get {
                    try {
                        return ((double)(this[this.tabledtEstadodeCuenta.abonadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'abonado\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.abonadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totaldebe {
                get {
                    try {
                        return ((double)(this[this.tabledtEstadodeCuenta.totaldebeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totaldebe\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.totaldebeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mes {
                get {
                    try {
                        return ((string)(this[this.tabledtEstadodeCuenta.mesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mes\' in table \'dtEstadodeCuenta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.mesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string concepto {
                get {
                    if (this.IsconceptoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabledtEstadodeCuenta.conceptoColumn]));
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.conceptoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descpago {
                get {
                    if (this.IsdescpagoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabledtEstadodeCuenta.descpagoColumn]));
                    }
                }
                set {
                    this[this.tabledtEstadodeCuenta.descpagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledtEstadodeCuenta.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmontocreditoNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.montocreditoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmontocreditoNull() {
                this[this.tabledtEstadodeCuenta.montocreditoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechadePagoNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.fechadePagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechadePagoNull() {
                this[this.tabledtEstadodeCuenta.fechadePagoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotaldiasNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.totaldiasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotaldiasNull() {
                this[this.tabledtEstadodeCuenta.totaldiasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinteresesNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.interesesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinteresesNull() {
                this[this.tabledtEstadodeCuenta.interesesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdebeNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.debeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdebeNull() {
                this[this.tabledtEstadodeCuenta.debeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsabonadoNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.abonadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetabonadoNull() {
                this[this.tabledtEstadodeCuenta.abonadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotaldebeNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.totaldebeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotaldebeNull() {
                this[this.tabledtEstadodeCuenta.totaldebeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmesNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.mesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmesNull() {
                this[this.tabledtEstadodeCuenta.mesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconceptoNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.conceptoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconceptoNull() {
                this[this.tabledtEstadodeCuenta.conceptoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescpagoNull() {
                return this.IsNull(this.tabledtEstadodeCuenta.descpagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescpagoNull() {
                this[this.tabledtEstadodeCuenta.descpagoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtEstadodeCuentaRowChangeEvent : global::System.EventArgs {
            
            private dtEstadodeCuentaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEstadodeCuentaRowChangeEvent(dtEstadodeCuentaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtEstadodeCuentaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591