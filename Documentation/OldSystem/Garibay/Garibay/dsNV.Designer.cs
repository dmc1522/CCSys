//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Garibay {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsNV")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsNV : global::System.Data.DataSet {
        
        private dtNVdetalleDataTable tabledtNVdetalle;
        
        private dtNVdatosDataTable tabledtNVdatos;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsNV() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsNV(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtNVdetalle"] != null)) {
                    base.Tables.Add(new dtNVdetalleDataTable(ds.Tables["dtNVdetalle"]));
                }
                if ((ds.Tables["dtNVdatos"] != null)) {
                    base.Tables.Add(new dtNVdatosDataTable(ds.Tables["dtNVdatos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtNVdetalleDataTable dtNVdetalle {
            get {
                return this.tabledtNVdetalle;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtNVdatosDataTable dtNVdatos {
            get {
                return this.tabledtNVdatos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsNV cln = ((dsNV)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtNVdetalle"] != null)) {
                    base.Tables.Add(new dtNVdetalleDataTable(ds.Tables["dtNVdetalle"]));
                }
                if ((ds.Tables["dtNVdatos"] != null)) {
                    base.Tables.Add(new dtNVdatosDataTable(ds.Tables["dtNVdatos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtNVdetalle = ((dtNVdetalleDataTable)(base.Tables["dtNVdetalle"]));
            if ((initTable == true)) {
                if ((this.tabledtNVdetalle != null)) {
                    this.tabledtNVdetalle.InitVars();
                }
            }
            this.tabledtNVdatos = ((dtNVdatosDataTable)(base.Tables["dtNVdatos"]));
            if ((initTable == true)) {
                if ((this.tabledtNVdatos != null)) {
                    this.tabledtNVdatos.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsNV";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsNV.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtNVdetalle = new dtNVdetalleDataTable();
            base.Tables.Add(this.tabledtNVdetalle);
            this.tabledtNVdatos = new dtNVdatosDataTable();
            base.Tables.Add(this.tabledtNVdatos);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtNVdetalle() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtNVdatos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsNV ds = new dsNV();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtNVdetalleRowChangeEventHandler(object sender, dtNVdetalleRowChangeEvent e);
        
        public delegate void dtNVdatosRowChangeEventHandler(object sender, dtNVdatosRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtNVdetalleDataTable : global::System.Data.TypedTableBase<dtNVdetalleRow> {
            
            private global::System.Data.DataColumn columnNDVdetalleID;
            
            private global::System.Data.DataColumn columnnotadeventaID;
            
            private global::System.Data.DataColumn columnproductoID;
            
            private global::System.Data.DataColumn columnbodegaID;
            
            private global::System.Data.DataColumn columncantidad;
            
            private global::System.Data.DataColumn columnprecio;
            
            private global::System.Data.DataColumn columnImporte;
            
            private global::System.Data.DataColumn columnsalidaprodID;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnBodega;
            
            private global::System.Data.DataColumn columnGrupo;
            
            private global::System.Data.DataColumn columngrupoID;
            
            private global::System.Data.DataColumn columnPresentacion;
            
            private global::System.Data.DataColumn columnpresentacionID;
            
            private global::System.Data.DataColumn columnTipo;
            
            private global::System.Data.DataColumn columntipoID;
            
            private global::System.Data.DataColumn columnsacos;
            
            private global::System.Data.DataColumn columnUnidad;
            
            private global::System.Data.DataColumn columnunidadID;
            
            private global::System.Data.DataColumn columnExistencia;
            
            private global::System.Data.DataColumn columnuserID;
            
            private global::System.Data.DataColumn columncicloID;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnpeso;
            
            private global::System.Data.DataColumn columntieneBoletas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdetalleDataTable() {
                this.TableName = "dtNVdetalle";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtNVdetalleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtNVdetalleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NDVdetalleIDColumn {
                get {
                    return this.columnNDVdetalleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notadeventaIDColumn {
                get {
                    return this.columnnotadeventaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productoIDColumn {
                get {
                    return this.columnproductoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bodegaIDColumn {
                get {
                    return this.columnbodegaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cantidadColumn {
                get {
                    return this.columncantidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn precioColumn {
                get {
                    return this.columnprecio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salidaprodIDColumn {
                get {
                    return this.columnsalidaprodID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BodegaColumn {
                get {
                    return this.columnBodega;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrupoColumn {
                get {
                    return this.columnGrupo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grupoIDColumn {
                get {
                    return this.columngrupoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PresentacionColumn {
                get {
                    return this.columnPresentacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn presentacionIDColumn {
                get {
                    return this.columnpresentacionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoIDColumn {
                get {
                    return this.columntipoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sacosColumn {
                get {
                    return this.columnsacos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnidadColumn {
                get {
                    return this.columnUnidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unidadIDColumn {
                get {
                    return this.columnunidadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExistenciaColumn {
                get {
                    return this.columnExistencia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cicloIDColumn {
                get {
                    return this.columncicloID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pesoColumn {
                get {
                    return this.columnpeso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tieneBoletasColumn {
                get {
                    return this.columntieneBoletas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdetalleRow this[int index] {
                get {
                    return ((dtNVdetalleRow)(this.Rows[index]));
                }
            }
            
            public event dtNVdetalleRowChangeEventHandler dtNVdetalleRowChanging;
            
            public event dtNVdetalleRowChangeEventHandler dtNVdetalleRowChanged;
            
            public event dtNVdetalleRowChangeEventHandler dtNVdetalleRowDeleting;
            
            public event dtNVdetalleRowChangeEventHandler dtNVdetalleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtNVdetalleRow(dtNVdetalleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdetalleRow AdddtNVdetalleRow(
                        int NDVdetalleID, 
                        int notadeventaID, 
                        int productoID, 
                        int bodegaID, 
                        double cantidad, 
                        double precio, 
                        double Importe, 
                        int salidaprodID, 
                        string Nombre, 
                        string Bodega, 
                        string Grupo, 
                        int grupoID, 
                        string Presentacion, 
                        int presentacionID, 
                        string Tipo, 
                        int tipoID, 
                        double sacos, 
                        string Unidad, 
                        int unidadID, 
                        double Existencia, 
                        int userID, 
                        int cicloID, 
                        System.DateTime fecha, 
                        double peso, 
                        bool tieneBoletas) {
                dtNVdetalleRow rowdtNVdetalleRow = ((dtNVdetalleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NDVdetalleID,
                        notadeventaID,
                        productoID,
                        bodegaID,
                        cantidad,
                        precio,
                        Importe,
                        salidaprodID,
                        Nombre,
                        Bodega,
                        Grupo,
                        grupoID,
                        Presentacion,
                        presentacionID,
                        Tipo,
                        tipoID,
                        sacos,
                        Unidad,
                        unidadID,
                        Existencia,
                        userID,
                        cicloID,
                        fecha,
                        peso,
                        tieneBoletas};
                rowdtNVdetalleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtNVdetalleRow);
                return rowdtNVdetalleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtNVdetalleDataTable cln = ((dtNVdetalleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtNVdetalleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNDVdetalleID = base.Columns["NDVdetalleID"];
                this.columnnotadeventaID = base.Columns["notadeventaID"];
                this.columnproductoID = base.Columns["productoID"];
                this.columnbodegaID = base.Columns["bodegaID"];
                this.columncantidad = base.Columns["cantidad"];
                this.columnprecio = base.Columns["precio"];
                this.columnImporte = base.Columns["Importe"];
                this.columnsalidaprodID = base.Columns["salidaprodID"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnBodega = base.Columns["Bodega"];
                this.columnGrupo = base.Columns["Grupo"];
                this.columngrupoID = base.Columns["grupoID"];
                this.columnPresentacion = base.Columns["Presentacion"];
                this.columnpresentacionID = base.Columns["presentacionID"];
                this.columnTipo = base.Columns["Tipo"];
                this.columntipoID = base.Columns["tipoID"];
                this.columnsacos = base.Columns["sacos"];
                this.columnUnidad = base.Columns["Unidad"];
                this.columnunidadID = base.Columns["unidadID"];
                this.columnExistencia = base.Columns["Existencia"];
                this.columnuserID = base.Columns["userID"];
                this.columncicloID = base.Columns["cicloID"];
                this.columnfecha = base.Columns["fecha"];
                this.columnpeso = base.Columns["peso"];
                this.columntieneBoletas = base.Columns["tieneBoletas"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNDVdetalleID = new global::System.Data.DataColumn("NDVdetalleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNDVdetalleID);
                this.columnnotadeventaID = new global::System.Data.DataColumn("notadeventaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotadeventaID);
                this.columnproductoID = new global::System.Data.DataColumn("productoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductoID);
                this.columnbodegaID = new global::System.Data.DataColumn("bodegaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbodegaID);
                this.columncantidad = new global::System.Data.DataColumn("cantidad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncantidad);
                this.columnprecio = new global::System.Data.DataColumn("precio", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprecio);
                this.columnImporte = new global::System.Data.DataColumn("Importe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporte);
                this.columnsalidaprodID = new global::System.Data.DataColumn("salidaprodID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalidaprodID);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnBodega = new global::System.Data.DataColumn("Bodega", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBodega);
                this.columnGrupo = new global::System.Data.DataColumn("Grupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrupo);
                this.columngrupoID = new global::System.Data.DataColumn("grupoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrupoID);
                this.columnPresentacion = new global::System.Data.DataColumn("Presentacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentacion);
                this.columnpresentacionID = new global::System.Data.DataColumn("presentacionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpresentacionID);
                this.columnTipo = new global::System.Data.DataColumn("Tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo);
                this.columntipoID = new global::System.Data.DataColumn("tipoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipoID);
                this.columnsacos = new global::System.Data.DataColumn("sacos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsacos);
                this.columnUnidad = new global::System.Data.DataColumn("Unidad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnidad);
                this.columnunidadID = new global::System.Data.DataColumn("unidadID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunidadID);
                this.columnExistencia = new global::System.Data.DataColumn("Existencia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExistencia);
                this.columnuserID = new global::System.Data.DataColumn("userID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columncicloID = new global::System.Data.DataColumn("cicloID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncicloID);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnpeso = new global::System.Data.DataColumn("peso", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeso);
                this.columntieneBoletas = new global::System.Data.DataColumn("tieneBoletas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntieneBoletas);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdetalleRow NewdtNVdetalleRow() {
                return ((dtNVdetalleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtNVdetalleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtNVdetalleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtNVdetalleRowChanged != null)) {
                    this.dtNVdetalleRowChanged(this, new dtNVdetalleRowChangeEvent(((dtNVdetalleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtNVdetalleRowChanging != null)) {
                    this.dtNVdetalleRowChanging(this, new dtNVdetalleRowChangeEvent(((dtNVdetalleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtNVdetalleRowDeleted != null)) {
                    this.dtNVdetalleRowDeleted(this, new dtNVdetalleRowChangeEvent(((dtNVdetalleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtNVdetalleRowDeleting != null)) {
                    this.dtNVdetalleRowDeleting(this, new dtNVdetalleRowChangeEvent(((dtNVdetalleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtNVdetalleRow(dtNVdetalleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsNV ds = new dsNV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtNVdetalleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtNVdatosDataTable : global::System.Data.TypedTableBase<dtNVdatosRow> {
            
            private global::System.Data.DataColumn columnnotadeventaID;
            
            private global::System.Data.DataColumn columnproductorID;
            
            private global::System.Data.DataColumn columncicloID;
            
            private global::System.Data.DataColumn columnfecha;
            
            private global::System.Data.DataColumn columnfolio;
            
            private global::System.Data.DataColumn columnsubtotal;
            
            private global::System.Data.DataColumn columntotal;
            
            private global::System.Data.DataColumn columniva;
            
            private global::System.Data.DataColumn columnobservaciones;
            
            private global::System.Data.DataColumn columnuserID;
            
            private global::System.Data.DataColumn columntipodePagoID;
            
            private global::System.Data.DataColumn columnstoreTS;
            
            private global::System.Data.DataColumn columnupdateTS;
            
            private global::System.Data.DataColumn columnfechapago;
            
            private global::System.Data.DataColumn columncreditoID;
            
            private global::System.Data.DataColumn columninteres;
            
            private global::System.Data.DataColumn columnpagada;
            
            private global::System.Data.DataColumn columnfechainicobrointereses;
            
            private global::System.Data.DataColumn columnnumeropermiso;
            
            private global::System.Data.DataColumn columntransportista;
            
            private global::System.Data.DataColumn columnnombrechofer;
            
            private global::System.Data.DataColumn columntractorcamion;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columnplacas;
            
            private global::System.Data.DataColumn columnorigen;
            
            private global::System.Data.DataColumn columnremitente;
            
            private global::System.Data.DataColumn columndomicilio;
            
            private global::System.Data.DataColumn columntelefono;
            
            private global::System.Data.DataColumn columndestino;
            
            private global::System.Data.DataColumn columnacredito;
            
            private global::System.Data.DataColumn columntipocalculodeinteresID;
            
            private global::System.Data.DataColumn columnCicloName;
            
            private global::System.Data.DataColumn columnnotaDeFertilizante;
            
            private global::System.Data.DataColumn columnbloqueada;
            
            private global::System.Data.DataColumn columnpersonaautorizada;
            
            private global::System.Data.DataColumn columnfechaPagare;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdatosDataTable() {
                this.TableName = "dtNVdatos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtNVdatosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtNVdatosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notadeventaIDColumn {
                get {
                    return this.columnnotadeventaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productorIDColumn {
                get {
                    return this.columnproductorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cicloIDColumn {
                get {
                    return this.columncicloID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaColumn {
                get {
                    return this.columnfecha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn folioColumn {
                get {
                    return this.columnfolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subtotalColumn {
                get {
                    return this.columnsubtotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalColumn {
                get {
                    return this.columntotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ivaColumn {
                get {
                    return this.columniva;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn observacionesColumn {
                get {
                    return this.columnobservaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipodePagoIDColumn {
                get {
                    return this.columntipodePagoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn storeTSColumn {
                get {
                    return this.columnstoreTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updateTSColumn {
                get {
                    return this.columnupdateTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechapagoColumn {
                get {
                    return this.columnfechapago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn creditoIDColumn {
                get {
                    return this.columncreditoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn interesColumn {
                get {
                    return this.columninteres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pagadaColumn {
                get {
                    return this.columnpagada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechainicobrointeresesColumn {
                get {
                    return this.columnfechainicobrointereses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numeropermisoColumn {
                get {
                    return this.columnnumeropermiso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transportistaColumn {
                get {
                    return this.columntransportista;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombrechoferColumn {
                get {
                    return this.columnnombrechofer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tractorcamionColumn {
                get {
                    return this.columntractorcamion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn placasColumn {
                get {
                    return this.columnplacas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn origenColumn {
                get {
                    return this.columnorigen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remitenteColumn {
                get {
                    return this.columnremitente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn domicilioColumn {
                get {
                    return this.columndomicilio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn telefonoColumn {
                get {
                    return this.columntelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn destinoColumn {
                get {
                    return this.columndestino;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn acreditoColumn {
                get {
                    return this.columnacredito;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipocalculodeinteresIDColumn {
                get {
                    return this.columntipocalculodeinteresID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CicloNameColumn {
                get {
                    return this.columnCicloName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notaDeFertilizanteColumn {
                get {
                    return this.columnnotaDeFertilizante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bloqueadaColumn {
                get {
                    return this.columnbloqueada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn personaautorizadaColumn {
                get {
                    return this.columnpersonaautorizada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechaPagareColumn {
                get {
                    return this.columnfechaPagare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdatosRow this[int index] {
                get {
                    return ((dtNVdatosRow)(this.Rows[index]));
                }
            }
            
            public event dtNVdatosRowChangeEventHandler dtNVdatosRowChanging;
            
            public event dtNVdatosRowChangeEventHandler dtNVdatosRowChanged;
            
            public event dtNVdatosRowChangeEventHandler dtNVdatosRowDeleting;
            
            public event dtNVdatosRowChangeEventHandler dtNVdatosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtNVdatosRow(dtNVdatosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdatosRow AdddtNVdatosRow(
                        int notadeventaID, 
                        int productorID, 
                        int cicloID, 
                        System.DateTime fecha, 
                        string folio, 
                        double subtotal, 
                        double total, 
                        double iva, 
                        string observaciones, 
                        int userID, 
                        int tipodePagoID, 
                        System.DateTime storeTS, 
                        System.DateTime updateTS, 
                        System.DateTime fechapago, 
                        int creditoID, 
                        double interes, 
                        bool pagada, 
                        System.DateTime fechainicobrointereses, 
                        string numeropermiso, 
                        string transportista, 
                        string nombrechofer, 
                        string tractorcamion, 
                        string color, 
                        string placas, 
                        string origen, 
                        string remitente, 
                        string domicilio, 
                        string telefono, 
                        string destino, 
                        bool acredito, 
                        int tipocalculodeinteresID, 
                        string CicloName, 
                        bool notaDeFertilizante, 
                        bool bloqueada, 
                        string personaautorizada, 
                        System.DateTime fechaPagare) {
                dtNVdatosRow rowdtNVdatosRow = ((dtNVdatosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        notadeventaID,
                        productorID,
                        cicloID,
                        fecha,
                        folio,
                        subtotal,
                        total,
                        iva,
                        observaciones,
                        userID,
                        tipodePagoID,
                        storeTS,
                        updateTS,
                        fechapago,
                        creditoID,
                        interes,
                        pagada,
                        fechainicobrointereses,
                        numeropermiso,
                        transportista,
                        nombrechofer,
                        tractorcamion,
                        color,
                        placas,
                        origen,
                        remitente,
                        domicilio,
                        telefono,
                        destino,
                        acredito,
                        tipocalculodeinteresID,
                        CicloName,
                        notaDeFertilizante,
                        bloqueada,
                        personaautorizada,
                        fechaPagare};
                rowdtNVdatosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtNVdatosRow);
                return rowdtNVdatosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtNVdatosDataTable cln = ((dtNVdatosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtNVdatosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnotadeventaID = base.Columns["notadeventaID"];
                this.columnproductorID = base.Columns["productorID"];
                this.columncicloID = base.Columns["cicloID"];
                this.columnfecha = base.Columns["fecha"];
                this.columnfolio = base.Columns["folio"];
                this.columnsubtotal = base.Columns["subtotal"];
                this.columntotal = base.Columns["total"];
                this.columniva = base.Columns["iva"];
                this.columnobservaciones = base.Columns["observaciones"];
                this.columnuserID = base.Columns["userID"];
                this.columntipodePagoID = base.Columns["tipodePagoID"];
                this.columnstoreTS = base.Columns["storeTS"];
                this.columnupdateTS = base.Columns["updateTS"];
                this.columnfechapago = base.Columns["fechapago"];
                this.columncreditoID = base.Columns["creditoID"];
                this.columninteres = base.Columns["interes"];
                this.columnpagada = base.Columns["pagada"];
                this.columnfechainicobrointereses = base.Columns["fechainicobrointereses"];
                this.columnnumeropermiso = base.Columns["numeropermiso"];
                this.columntransportista = base.Columns["transportista"];
                this.columnnombrechofer = base.Columns["nombrechofer"];
                this.columntractorcamion = base.Columns["tractorcamion"];
                this.columncolor = base.Columns["color"];
                this.columnplacas = base.Columns["placas"];
                this.columnorigen = base.Columns["origen"];
                this.columnremitente = base.Columns["remitente"];
                this.columndomicilio = base.Columns["domicilio"];
                this.columntelefono = base.Columns["telefono"];
                this.columndestino = base.Columns["destino"];
                this.columnacredito = base.Columns["acredito"];
                this.columntipocalculodeinteresID = base.Columns["tipocalculodeinteresID"];
                this.columnCicloName = base.Columns["CicloName"];
                this.columnnotaDeFertilizante = base.Columns["notaDeFertilizante"];
                this.columnbloqueada = base.Columns["bloqueada"];
                this.columnpersonaautorizada = base.Columns["personaautorizada"];
                this.columnfechaPagare = base.Columns["fechaPagare"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnotadeventaID = new global::System.Data.DataColumn("notadeventaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotadeventaID);
                this.columnproductorID = new global::System.Data.DataColumn("productorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductorID);
                this.columncicloID = new global::System.Data.DataColumn("cicloID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncicloID);
                this.columnfecha = new global::System.Data.DataColumn("fecha", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfecha);
                this.columnfolio = new global::System.Data.DataColumn("folio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfolio);
                this.columnsubtotal = new global::System.Data.DataColumn("subtotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubtotal);
                this.columntotal = new global::System.Data.DataColumn("total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal);
                this.columniva = new global::System.Data.DataColumn("iva", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniva);
                this.columnobservaciones = new global::System.Data.DataColumn("observaciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobservaciones);
                this.columnuserID = new global::System.Data.DataColumn("userID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columntipodePagoID = new global::System.Data.DataColumn("tipodePagoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipodePagoID);
                this.columnstoreTS = new global::System.Data.DataColumn("storeTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstoreTS);
                this.columnupdateTS = new global::System.Data.DataColumn("updateTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdateTS);
                this.columnfechapago = new global::System.Data.DataColumn("fechapago", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechapago);
                this.columncreditoID = new global::System.Data.DataColumn("creditoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreditoID);
                this.columninteres = new global::System.Data.DataColumn("interes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninteres);
                this.columnpagada = new global::System.Data.DataColumn("pagada", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpagada);
                this.columnfechainicobrointereses = new global::System.Data.DataColumn("fechainicobrointereses", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechainicobrointereses);
                this.columnnumeropermiso = new global::System.Data.DataColumn("numeropermiso", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumeropermiso);
                this.columntransportista = new global::System.Data.DataColumn("transportista", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransportista);
                this.columnnombrechofer = new global::System.Data.DataColumn("nombrechofer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombrechofer);
                this.columntractorcamion = new global::System.Data.DataColumn("tractorcamion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntractorcamion);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columnplacas = new global::System.Data.DataColumn("placas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplacas);
                this.columnorigen = new global::System.Data.DataColumn("origen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorigen);
                this.columnremitente = new global::System.Data.DataColumn("remitente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremitente);
                this.columndomicilio = new global::System.Data.DataColumn("domicilio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndomicilio);
                this.columntelefono = new global::System.Data.DataColumn("telefono", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelefono);
                this.columndestino = new global::System.Data.DataColumn("destino", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndestino);
                this.columnacredito = new global::System.Data.DataColumn("acredito", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacredito);
                this.columntipocalculodeinteresID = new global::System.Data.DataColumn("tipocalculodeinteresID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipocalculodeinteresID);
                this.columnCicloName = new global::System.Data.DataColumn("CicloName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCicloName);
                this.columnnotaDeFertilizante = new global::System.Data.DataColumn("notaDeFertilizante", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotaDeFertilizante);
                this.columnbloqueada = new global::System.Data.DataColumn("bloqueada", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbloqueada);
                this.columnpersonaautorizada = new global::System.Data.DataColumn("personaautorizada", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersonaautorizada);
                this.columnfechaPagare = new global::System.Data.DataColumn("fechaPagare", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechaPagare);
                this.columnnotadeventaID.Caption = "notadecompraID";
                this.columnproductorID.Caption = "proveedorID";
                this.columnbloqueada.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdatosRow NewdtNVdatosRow() {
                return ((dtNVdatosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtNVdatosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtNVdatosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtNVdatosRowChanged != null)) {
                    this.dtNVdatosRowChanged(this, new dtNVdatosRowChangeEvent(((dtNVdatosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtNVdatosRowChanging != null)) {
                    this.dtNVdatosRowChanging(this, new dtNVdatosRowChangeEvent(((dtNVdatosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtNVdatosRowDeleted != null)) {
                    this.dtNVdatosRowDeleted(this, new dtNVdatosRowChangeEvent(((dtNVdatosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtNVdatosRowDeleting != null)) {
                    this.dtNVdatosRowDeleting(this, new dtNVdatosRowChangeEvent(((dtNVdatosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtNVdatosRow(dtNVdatosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsNV ds = new dsNV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtNVdatosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtNVdetalleRow : global::System.Data.DataRow {
            
            private dtNVdetalleDataTable tabledtNVdetalle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtNVdetalleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtNVdetalle = ((dtNVdetalleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NDVdetalleID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.NDVdetalleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NDVdetalleID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.NDVdetalleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int notadeventaID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.notadeventaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notadeventaID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.notadeventaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int productoID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.productoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'productoID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.productoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int bodegaID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.bodegaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bodegaID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.bodegaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cantidad {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdetalle.cantidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cantidad\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.cantidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double precio {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdetalle.precioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'precio\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.precioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Importe {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdetalle.ImporteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Importe\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.ImporteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int salidaprodID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.salidaprodIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salidaprodID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.salidaprodIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdetalle.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bodega {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdetalle.BodegaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bodega\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.BodegaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Grupo {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdetalle.GrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grupo\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.GrupoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int grupoID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.grupoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grupoID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.grupoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Presentacion {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdetalle.PresentacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Presentacion\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.PresentacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int presentacionID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.presentacionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'presentacionID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.presentacionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tipo {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdetalle.TipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tipo\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.TipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int tipoID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.tipoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipoID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.tipoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double sacos {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdetalle.sacosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sacos\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.sacosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unidad {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdetalle.UnidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unidad\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.UnidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int unidadID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.unidadIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unidadID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.unidadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Existencia {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdetalle.ExistenciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Existencia\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.ExistenciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.userIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.userIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cicloID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdetalle.cicloIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cicloID\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.cicloIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtNVdetalle.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double peso {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdetalle.pesoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'peso\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.pesoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool tieneBoletas {
                get {
                    try {
                        return ((bool)(this[this.tabledtNVdetalle.tieneBoletasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tieneBoletas\' in table \'dtNVdetalle\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdetalle.tieneBoletasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNDVdetalleIDNull() {
                return this.IsNull(this.tabledtNVdetalle.NDVdetalleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNDVdetalleIDNull() {
                this[this.tabledtNVdetalle.NDVdetalleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotadeventaIDNull() {
                return this.IsNull(this.tabledtNVdetalle.notadeventaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotadeventaIDNull() {
                this[this.tabledtNVdetalle.notadeventaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsproductoIDNull() {
                return this.IsNull(this.tabledtNVdetalle.productoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetproductoIDNull() {
                this[this.tabledtNVdetalle.productoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbodegaIDNull() {
                return this.IsNull(this.tabledtNVdetalle.bodegaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbodegaIDNull() {
                this[this.tabledtNVdetalle.bodegaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscantidadNull() {
                return this.IsNull(this.tabledtNVdetalle.cantidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcantidadNull() {
                this[this.tabledtNVdetalle.cantidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprecioNull() {
                return this.IsNull(this.tabledtNVdetalle.precioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprecioNull() {
                this[this.tabledtNVdetalle.precioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteNull() {
                return this.IsNull(this.tabledtNVdetalle.ImporteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteNull() {
                this[this.tabledtNVdetalle.ImporteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalidaprodIDNull() {
                return this.IsNull(this.tabledtNVdetalle.salidaprodIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalidaprodIDNull() {
                this[this.tabledtNVdetalle.salidaprodIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tabledtNVdetalle.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tabledtNVdetalle.NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBodegaNull() {
                return this.IsNull(this.tabledtNVdetalle.BodegaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBodegaNull() {
                this[this.tabledtNVdetalle.BodegaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrupoNull() {
                return this.IsNull(this.tabledtNVdetalle.GrupoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrupoNull() {
                this[this.tabledtNVdetalle.GrupoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrupoIDNull() {
                return this.IsNull(this.tabledtNVdetalle.grupoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrupoIDNull() {
                this[this.tabledtNVdetalle.grupoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPresentacionNull() {
                return this.IsNull(this.tabledtNVdetalle.PresentacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPresentacionNull() {
                this[this.tabledtNVdetalle.PresentacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspresentacionIDNull() {
                return this.IsNull(this.tabledtNVdetalle.presentacionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpresentacionIDNull() {
                this[this.tabledtNVdetalle.presentacionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTipoNull() {
                return this.IsNull(this.tabledtNVdetalle.TipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTipoNull() {
                this[this.tabledtNVdetalle.TipoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoIDNull() {
                return this.IsNull(this.tabledtNVdetalle.tipoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoIDNull() {
                this[this.tabledtNVdetalle.tipoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssacosNull() {
                return this.IsNull(this.tabledtNVdetalle.sacosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsacosNull() {
                this[this.tabledtNVdetalle.sacosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnidadNull() {
                return this.IsNull(this.tabledtNVdetalle.UnidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnidadNull() {
                this[this.tabledtNVdetalle.UnidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunidadIDNull() {
                return this.IsNull(this.tabledtNVdetalle.unidadIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunidadIDNull() {
                this[this.tabledtNVdetalle.unidadIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExistenciaNull() {
                return this.IsNull(this.tabledtNVdetalle.ExistenciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExistenciaNull() {
                this[this.tabledtNVdetalle.ExistenciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserIDNull() {
                return this.IsNull(this.tabledtNVdetalle.userIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserIDNull() {
                this[this.tabledtNVdetalle.userIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscicloIDNull() {
                return this.IsNull(this.tabledtNVdetalle.cicloIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcicloIDNull() {
                this[this.tabledtNVdetalle.cicloIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledtNVdetalle.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledtNVdetalle.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspesoNull() {
                return this.IsNull(this.tabledtNVdetalle.pesoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpesoNull() {
                this[this.tabledtNVdetalle.pesoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstieneBoletasNull() {
                return this.IsNull(this.tabledtNVdetalle.tieneBoletasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettieneBoletasNull() {
                this[this.tabledtNVdetalle.tieneBoletasColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtNVdatosRow : global::System.Data.DataRow {
            
            private dtNVdatosDataTable tabledtNVdatos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtNVdatosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtNVdatos = ((dtNVdatosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int notadeventaID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdatos.notadeventaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notadeventaID\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.notadeventaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int productorID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdatos.productorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'productorID\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.productorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cicloID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdatos.cicloIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cicloID\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.cicloIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fecha {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtNVdatos.fechaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fecha\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.fechaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string folio {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.folioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'folio\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.folioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double subtotal {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdatos.subtotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subtotal\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.subtotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdatos.totalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.totalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double iva {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdatos.ivaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iva\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.ivaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string observaciones {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.observacionesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'observaciones\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.observacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdatos.userIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userID\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.userIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int tipodePagoID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdatos.tipodePagoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipodePagoID\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.tipodePagoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime storeTS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtNVdatos.storeTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'storeTS\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.storeTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updateTS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtNVdatos.updateTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updateTS\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.updateTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechapago {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtNVdatos.fechapagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechapago\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.fechapagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int creditoID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdatos.creditoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'creditoID\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.creditoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double interes {
                get {
                    try {
                        return ((double)(this[this.tabledtNVdatos.interesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'interes\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.interesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool pagada {
                get {
                    try {
                        return ((bool)(this[this.tabledtNVdatos.pagadaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pagada\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.pagadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechainicobrointereses {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtNVdatos.fechainicobrointeresesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechainicobrointereses\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.fechainicobrointeresesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string numeropermiso {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.numeropermisoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numeropermiso\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.numeropermisoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string transportista {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.transportistaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transportista\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.transportistaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombrechofer {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.nombrechoferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nombrechofer\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.nombrechoferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tractorcamion {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.tractorcamionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tractorcamion\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.tractorcamionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.colorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string placas {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.placasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'placas\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.placasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string origen {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.origenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'origen\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.origenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remitente {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.remitenteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remitente\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.remitenteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string domicilio {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.domicilioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'domicilio\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.domicilioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string telefono {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.telefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'telefono\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.telefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string destino {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.destinoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'destino\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.destinoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool acredito {
                get {
                    try {
                        return ((bool)(this[this.tabledtNVdatos.acreditoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'acredito\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.acreditoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int tipocalculodeinteresID {
                get {
                    try {
                        return ((int)(this[this.tabledtNVdatos.tipocalculodeinteresIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipocalculodeinteresID\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.tipocalculodeinteresIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CicloName {
                get {
                    try {
                        return ((string)(this[this.tabledtNVdatos.CicloNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CicloName\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.CicloNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool notaDeFertilizante {
                get {
                    try {
                        return ((bool)(this[this.tabledtNVdatos.notaDeFertilizanteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notaDeFertilizante\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.notaDeFertilizanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool bloqueada {
                get {
                    try {
                        return ((bool)(this[this.tabledtNVdatos.bloqueadaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bloqueada\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.bloqueadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string personaautorizada {
                get {
                    if (this.IspersonaautorizadaNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabledtNVdatos.personaautorizadaColumn]));
                    }
                }
                set {
                    this[this.tabledtNVdatos.personaautorizadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechaPagare {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtNVdatos.fechaPagareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechaPagare\' in table \'dtNVdatos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtNVdatos.fechaPagareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotadeventaIDNull() {
                return this.IsNull(this.tabledtNVdatos.notadeventaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotadeventaIDNull() {
                this[this.tabledtNVdatos.notadeventaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsproductorIDNull() {
                return this.IsNull(this.tabledtNVdatos.productorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetproductorIDNull() {
                this[this.tabledtNVdatos.productorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscicloIDNull() {
                return this.IsNull(this.tabledtNVdatos.cicloIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcicloIDNull() {
                this[this.tabledtNVdatos.cicloIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaNull() {
                return this.IsNull(this.tabledtNVdatos.fechaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaNull() {
                this[this.tabledtNVdatos.fechaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfolioNull() {
                return this.IsNull(this.tabledtNVdatos.folioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfolioNull() {
                this[this.tabledtNVdatos.folioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubtotalNull() {
                return this.IsNull(this.tabledtNVdatos.subtotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubtotalNull() {
                this[this.tabledtNVdatos.subtotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalNull() {
                return this.IsNull(this.tabledtNVdatos.totalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalNull() {
                this[this.tabledtNVdatos.totalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsivaNull() {
                return this.IsNull(this.tabledtNVdatos.ivaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetivaNull() {
                this[this.tabledtNVdatos.ivaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobservacionesNull() {
                return this.IsNull(this.tabledtNVdatos.observacionesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobservacionesNull() {
                this[this.tabledtNVdatos.observacionesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserIDNull() {
                return this.IsNull(this.tabledtNVdatos.userIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserIDNull() {
                this[this.tabledtNVdatos.userIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipodePagoIDNull() {
                return this.IsNull(this.tabledtNVdatos.tipodePagoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipodePagoIDNull() {
                this[this.tabledtNVdatos.tipodePagoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstoreTSNull() {
                return this.IsNull(this.tabledtNVdatos.storeTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstoreTSNull() {
                this[this.tabledtNVdatos.storeTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdateTSNull() {
                return this.IsNull(this.tabledtNVdatos.updateTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdateTSNull() {
                this[this.tabledtNVdatos.updateTSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechapagoNull() {
                return this.IsNull(this.tabledtNVdatos.fechapagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechapagoNull() {
                this[this.tabledtNVdatos.fechapagoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreditoIDNull() {
                return this.IsNull(this.tabledtNVdatos.creditoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreditoIDNull() {
                this[this.tabledtNVdatos.creditoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinteresNull() {
                return this.IsNull(this.tabledtNVdatos.interesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinteresNull() {
                this[this.tabledtNVdatos.interesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspagadaNull() {
                return this.IsNull(this.tabledtNVdatos.pagadaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpagadaNull() {
                this[this.tabledtNVdatos.pagadaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechainicobrointeresesNull() {
                return this.IsNull(this.tabledtNVdatos.fechainicobrointeresesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechainicobrointeresesNull() {
                this[this.tabledtNVdatos.fechainicobrointeresesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumeropermisoNull() {
                return this.IsNull(this.tabledtNVdatos.numeropermisoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumeropermisoNull() {
                this[this.tabledtNVdatos.numeropermisoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransportistaNull() {
                return this.IsNull(this.tabledtNVdatos.transportistaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransportistaNull() {
                this[this.tabledtNVdatos.transportistaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnombrechoferNull() {
                return this.IsNull(this.tabledtNVdatos.nombrechoferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnombrechoferNull() {
                this[this.tabledtNVdatos.nombrechoferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstractorcamionNull() {
                return this.IsNull(this.tabledtNVdatos.tractorcamionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettractorcamionNull() {
                this[this.tabledtNVdatos.tractorcamionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscolorNull() {
                return this.IsNull(this.tabledtNVdatos.colorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcolorNull() {
                this[this.tabledtNVdatos.colorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplacasNull() {
                return this.IsNull(this.tabledtNVdatos.placasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplacasNull() {
                this[this.tabledtNVdatos.placasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorigenNull() {
                return this.IsNull(this.tabledtNVdatos.origenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorigenNull() {
                this[this.tabledtNVdatos.origenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremitenteNull() {
                return this.IsNull(this.tabledtNVdatos.remitenteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremitenteNull() {
                this[this.tabledtNVdatos.remitenteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdomicilioNull() {
                return this.IsNull(this.tabledtNVdatos.domicilioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdomicilioNull() {
                this[this.tabledtNVdatos.domicilioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstelefonoNull() {
                return this.IsNull(this.tabledtNVdatos.telefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettelefonoNull() {
                this[this.tabledtNVdatos.telefonoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdestinoNull() {
                return this.IsNull(this.tabledtNVdatos.destinoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdestinoNull() {
                this[this.tabledtNVdatos.destinoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsacreditoNull() {
                return this.IsNull(this.tabledtNVdatos.acreditoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetacreditoNull() {
                this[this.tabledtNVdatos.acreditoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipocalculodeinteresIDNull() {
                return this.IsNull(this.tabledtNVdatos.tipocalculodeinteresIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipocalculodeinteresIDNull() {
                this[this.tabledtNVdatos.tipocalculodeinteresIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCicloNameNull() {
                return this.IsNull(this.tabledtNVdatos.CicloNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCicloNameNull() {
                this[this.tabledtNVdatos.CicloNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotaDeFertilizanteNull() {
                return this.IsNull(this.tabledtNVdatos.notaDeFertilizanteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotaDeFertilizanteNull() {
                this[this.tabledtNVdatos.notaDeFertilizanteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbloqueadaNull() {
                return this.IsNull(this.tabledtNVdatos.bloqueadaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbloqueadaNull() {
                this[this.tabledtNVdatos.bloqueadaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspersonaautorizadaNull() {
                return this.IsNull(this.tabledtNVdatos.personaautorizadaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpersonaautorizadaNull() {
                this[this.tabledtNVdatos.personaautorizadaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechaPagareNull() {
                return this.IsNull(this.tabledtNVdatos.fechaPagareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechaPagareNull() {
                this[this.tabledtNVdatos.fechaPagareColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtNVdetalleRowChangeEvent : global::System.EventArgs {
            
            private dtNVdetalleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdetalleRowChangeEvent(dtNVdetalleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdetalleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtNVdatosRowChangeEvent : global::System.EventArgs {
            
            private dtNVdatosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdatosRowChangeEvent(dtNVdatosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtNVdatosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591