//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BasculaGaribay {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("WSGaribayDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class WSGaribayDataSet : global::System.Data.DataSet {
        
        private dbo_BoletasDataTable tabledbo_Boletas;
        
        private dbo_gan_ProveedoresDataTable tabledbo_gan_Proveedores;
        
        private dbo_gan_Proveedores_BoletasDataTable tabledbo_gan_Proveedores_Boletas;
        
        private dbo_ProductoresDataTable tabledbo_Productores;
        
        private dbo_ProductosDataTable tabledbo_Productos;
        
        private dbo_SecurityLevelsDataTable tabledbo_SecurityLevels;
        
        private dbo_UsersDataTable tabledbo_Users;
        
        private dbo_ClienteVenta_BoletasDataTable tabledbo_ClienteVenta_Boletas;
        
        private dbo_ClientesVentasDataTable tabledbo_ClientesVentas;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WSGaribayDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected WSGaribayDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dbo_Boletas"] != null)) {
                    base.Tables.Add(new dbo_BoletasDataTable(ds.Tables["dbo_Boletas"]));
                }
                if ((ds.Tables["dbo_gan_Proveedores"] != null)) {
                    base.Tables.Add(new dbo_gan_ProveedoresDataTable(ds.Tables["dbo_gan_Proveedores"]));
                }
                if ((ds.Tables["dbo_gan_Proveedores_Boletas"] != null)) {
                    base.Tables.Add(new dbo_gan_Proveedores_BoletasDataTable(ds.Tables["dbo_gan_Proveedores_Boletas"]));
                }
                if ((ds.Tables["dbo_Productores"] != null)) {
                    base.Tables.Add(new dbo_ProductoresDataTable(ds.Tables["dbo_Productores"]));
                }
                if ((ds.Tables["dbo_Productos"] != null)) {
                    base.Tables.Add(new dbo_ProductosDataTable(ds.Tables["dbo_Productos"]));
                }
                if ((ds.Tables["dbo_SecurityLevels"] != null)) {
                    base.Tables.Add(new dbo_SecurityLevelsDataTable(ds.Tables["dbo_SecurityLevels"]));
                }
                if ((ds.Tables["dbo_Users"] != null)) {
                    base.Tables.Add(new dbo_UsersDataTable(ds.Tables["dbo_Users"]));
                }
                if ((ds.Tables["dbo_ClienteVenta_Boletas"] != null)) {
                    base.Tables.Add(new dbo_ClienteVenta_BoletasDataTable(ds.Tables["dbo_ClienteVenta_Boletas"]));
                }
                if ((ds.Tables["dbo_ClientesVentas"] != null)) {
                    base.Tables.Add(new dbo_ClientesVentasDataTable(ds.Tables["dbo_ClientesVentas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_BoletasDataTable dbo_Boletas {
            get {
                return this.tabledbo_Boletas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_gan_ProveedoresDataTable dbo_gan_Proveedores {
            get {
                return this.tabledbo_gan_Proveedores;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_gan_Proveedores_BoletasDataTable dbo_gan_Proveedores_Boletas {
            get {
                return this.tabledbo_gan_Proveedores_Boletas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_ProductoresDataTable dbo_Productores {
            get {
                return this.tabledbo_Productores;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_ProductosDataTable dbo_Productos {
            get {
                return this.tabledbo_Productos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_SecurityLevelsDataTable dbo_SecurityLevels {
            get {
                return this.tabledbo_SecurityLevels;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_UsersDataTable dbo_Users {
            get {
                return this.tabledbo_Users;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_ClienteVenta_BoletasDataTable dbo_ClienteVenta_Boletas {
            get {
                return this.tabledbo_ClienteVenta_Boletas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dbo_ClientesVentasDataTable dbo_ClientesVentas {
            get {
                return this.tabledbo_ClientesVentas;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            WSGaribayDataSet cln = ((WSGaribayDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dbo_Boletas"] != null)) {
                    base.Tables.Add(new dbo_BoletasDataTable(ds.Tables["dbo_Boletas"]));
                }
                if ((ds.Tables["dbo_gan_Proveedores"] != null)) {
                    base.Tables.Add(new dbo_gan_ProveedoresDataTable(ds.Tables["dbo_gan_Proveedores"]));
                }
                if ((ds.Tables["dbo_gan_Proveedores_Boletas"] != null)) {
                    base.Tables.Add(new dbo_gan_Proveedores_BoletasDataTable(ds.Tables["dbo_gan_Proveedores_Boletas"]));
                }
                if ((ds.Tables["dbo_Productores"] != null)) {
                    base.Tables.Add(new dbo_ProductoresDataTable(ds.Tables["dbo_Productores"]));
                }
                if ((ds.Tables["dbo_Productos"] != null)) {
                    base.Tables.Add(new dbo_ProductosDataTable(ds.Tables["dbo_Productos"]));
                }
                if ((ds.Tables["dbo_SecurityLevels"] != null)) {
                    base.Tables.Add(new dbo_SecurityLevelsDataTable(ds.Tables["dbo_SecurityLevels"]));
                }
                if ((ds.Tables["dbo_Users"] != null)) {
                    base.Tables.Add(new dbo_UsersDataTable(ds.Tables["dbo_Users"]));
                }
                if ((ds.Tables["dbo_ClienteVenta_Boletas"] != null)) {
                    base.Tables.Add(new dbo_ClienteVenta_BoletasDataTable(ds.Tables["dbo_ClienteVenta_Boletas"]));
                }
                if ((ds.Tables["dbo_ClientesVentas"] != null)) {
                    base.Tables.Add(new dbo_ClientesVentasDataTable(ds.Tables["dbo_ClientesVentas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledbo_Boletas = ((dbo_BoletasDataTable)(base.Tables["dbo_Boletas"]));
            if ((initTable == true)) {
                if ((this.tabledbo_Boletas != null)) {
                    this.tabledbo_Boletas.InitVars();
                }
            }
            this.tabledbo_gan_Proveedores = ((dbo_gan_ProveedoresDataTable)(base.Tables["dbo_gan_Proveedores"]));
            if ((initTable == true)) {
                if ((this.tabledbo_gan_Proveedores != null)) {
                    this.tabledbo_gan_Proveedores.InitVars();
                }
            }
            this.tabledbo_gan_Proveedores_Boletas = ((dbo_gan_Proveedores_BoletasDataTable)(base.Tables["dbo_gan_Proveedores_Boletas"]));
            if ((initTable == true)) {
                if ((this.tabledbo_gan_Proveedores_Boletas != null)) {
                    this.tabledbo_gan_Proveedores_Boletas.InitVars();
                }
            }
            this.tabledbo_Productores = ((dbo_ProductoresDataTable)(base.Tables["dbo_Productores"]));
            if ((initTable == true)) {
                if ((this.tabledbo_Productores != null)) {
                    this.tabledbo_Productores.InitVars();
                }
            }
            this.tabledbo_Productos = ((dbo_ProductosDataTable)(base.Tables["dbo_Productos"]));
            if ((initTable == true)) {
                if ((this.tabledbo_Productos != null)) {
                    this.tabledbo_Productos.InitVars();
                }
            }
            this.tabledbo_SecurityLevels = ((dbo_SecurityLevelsDataTable)(base.Tables["dbo_SecurityLevels"]));
            if ((initTable == true)) {
                if ((this.tabledbo_SecurityLevels != null)) {
                    this.tabledbo_SecurityLevels.InitVars();
                }
            }
            this.tabledbo_Users = ((dbo_UsersDataTable)(base.Tables["dbo_Users"]));
            if ((initTable == true)) {
                if ((this.tabledbo_Users != null)) {
                    this.tabledbo_Users.InitVars();
                }
            }
            this.tabledbo_ClienteVenta_Boletas = ((dbo_ClienteVenta_BoletasDataTable)(base.Tables["dbo_ClienteVenta_Boletas"]));
            if ((initTable == true)) {
                if ((this.tabledbo_ClienteVenta_Boletas != null)) {
                    this.tabledbo_ClienteVenta_Boletas.InitVars();
                }
            }
            this.tabledbo_ClientesVentas = ((dbo_ClientesVentasDataTable)(base.Tables["dbo_ClientesVentas"]));
            if ((initTable == true)) {
                if ((this.tabledbo_ClientesVentas != null)) {
                    this.tabledbo_ClientesVentas.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "WSGaribayDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/WSGaribayDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledbo_Boletas = new dbo_BoletasDataTable();
            base.Tables.Add(this.tabledbo_Boletas);
            this.tabledbo_gan_Proveedores = new dbo_gan_ProveedoresDataTable();
            base.Tables.Add(this.tabledbo_gan_Proveedores);
            this.tabledbo_gan_Proveedores_Boletas = new dbo_gan_Proveedores_BoletasDataTable();
            base.Tables.Add(this.tabledbo_gan_Proveedores_Boletas);
            this.tabledbo_Productores = new dbo_ProductoresDataTable();
            base.Tables.Add(this.tabledbo_Productores);
            this.tabledbo_Productos = new dbo_ProductosDataTable();
            base.Tables.Add(this.tabledbo_Productos);
            this.tabledbo_SecurityLevels = new dbo_SecurityLevelsDataTable();
            base.Tables.Add(this.tabledbo_SecurityLevels);
            this.tabledbo_Users = new dbo_UsersDataTable();
            base.Tables.Add(this.tabledbo_Users);
            this.tabledbo_ClienteVenta_Boletas = new dbo_ClienteVenta_BoletasDataTable();
            base.Tables.Add(this.tabledbo_ClienteVenta_Boletas);
            this.tabledbo_ClientesVentas = new dbo_ClientesVentasDataTable();
            base.Tables.Add(this.tabledbo_ClientesVentas);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_Boletas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_gan_Proveedores() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_gan_Proveedores_Boletas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_Productores() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_Productos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_SecurityLevels() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_Users() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_ClienteVenta_Boletas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedbo_ClientesVentas() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            WSGaribayDataSet ds = new WSGaribayDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dbo_BoletasRowChangeEventHandler(object sender, dbo_BoletasRowChangeEvent e);
        
        public delegate void dbo_gan_ProveedoresRowChangeEventHandler(object sender, dbo_gan_ProveedoresRowChangeEvent e);
        
        public delegate void dbo_gan_Proveedores_BoletasRowChangeEventHandler(object sender, dbo_gan_Proveedores_BoletasRowChangeEvent e);
        
        public delegate void dbo_ProductoresRowChangeEventHandler(object sender, dbo_ProductoresRowChangeEvent e);
        
        public delegate void dbo_ProductosRowChangeEventHandler(object sender, dbo_ProductosRowChangeEvent e);
        
        public delegate void dbo_SecurityLevelsRowChangeEventHandler(object sender, dbo_SecurityLevelsRowChangeEvent e);
        
        public delegate void dbo_UsersRowChangeEventHandler(object sender, dbo_UsersRowChangeEvent e);
        
        public delegate void dbo_ClienteVenta_BoletasRowChangeEventHandler(object sender, dbo_ClienteVenta_BoletasRowChangeEvent e);
        
        public delegate void dbo_ClientesVentasRowChangeEventHandler(object sender, dbo_ClientesVentasRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_BoletasDataTable : global::System.Data.TypedTableBase<dbo_BoletasRow> {
            
            private global::System.Data.DataColumn columnboletaID;
            
            private global::System.Data.DataColumn columncicloID;
            
            private global::System.Data.DataColumn columnuserID;
            
            private global::System.Data.DataColumn columnproductorID;
            
            private global::System.Data.DataColumn columnhumedad;
            
            private global::System.Data.DataColumn columndctoHumedad;
            
            private global::System.Data.DataColumn columnimpurezas;
            
            private global::System.Data.DataColumn columntotaldescuentos;
            
            private global::System.Data.DataColumn columnpesonetoapagar;
            
            private global::System.Data.DataColumn columnprecioapagar;
            
            private global::System.Data.DataColumn columnimporte;
            
            private global::System.Data.DataColumn columnplacas;
            
            private global::System.Data.DataColumn columnchofer;
            
            private global::System.Data.DataColumn columnpagada;
            
            private global::System.Data.DataColumn columnstoreTS;
            
            private global::System.Data.DataColumn columnupdateTS;
            
            private global::System.Data.DataColumn columnproductoID;
            
            private global::System.Data.DataColumn columnNumeroBoleta;
            
            private global::System.Data.DataColumn columnTicket;
            
            private global::System.Data.DataColumn columncodigoClienteProvArchivo;
            
            private global::System.Data.DataColumn columnNombreProductor;
            
            private global::System.Data.DataColumn columnFechaEntrada;
            
            private global::System.Data.DataColumn columnPesadorEntrada;
            
            private global::System.Data.DataColumn columnPesoDeEntrada;
            
            private global::System.Data.DataColumn columnBasculaEntrada;
            
            private global::System.Data.DataColumn columnFechaSalida;
            
            private global::System.Data.DataColumn columnPesoDeSalida;
            
            private global::System.Data.DataColumn columnPesadorSalida;
            
            private global::System.Data.DataColumn columnBasculaSalida;
            
            private global::System.Data.DataColumn columnpesonetoentrada;
            
            private global::System.Data.DataColumn columnpesonetosalida;
            
            private global::System.Data.DataColumn columndctoImpurezas;
            
            private global::System.Data.DataColumn columndctoSecado;
            
            private global::System.Data.DataColumn columntotalapagar;
            
            private global::System.Data.DataColumn columnbodegaID;
            
            private global::System.Data.DataColumn columnapplyHumedad;
            
            private global::System.Data.DataColumn columnapplyImpurezas;
            
            private global::System.Data.DataColumn columnapplySecado;
            
            private global::System.Data.DataColumn columnFolioDestino;
            
            private global::System.Data.DataColumn columnPesoDestino;
            
            private global::System.Data.DataColumn columnMerma;
            
            private global::System.Data.DataColumn columnFlete;
            
            private global::System.Data.DataColumn columnImporteFlete;
            
            private global::System.Data.DataColumn columnPrecioNetoDestino;
            
            private global::System.Data.DataColumn columndctoGranoChico;
            
            private global::System.Data.DataColumn columndctoGranoDanado;
            
            private global::System.Data.DataColumn columndctoGranoQuebrado;
            
            private global::System.Data.DataColumn columndctoGranoEstrellado;
            
            private global::System.Data.DataColumn columntransportistaID;
            
            private global::System.Data.DataColumn columncabezasDeGanado;
            
            private global::System.Data.DataColumn columnllevaFlete;
            
            private global::System.Data.DataColumn columndeGranjaACorrales;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_BoletasDataTable() {
                this.TableName = "dbo_Boletas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_BoletasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_BoletasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn boletaIDColumn {
                get {
                    return this.columnboletaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cicloIDColumn {
                get {
                    return this.columncicloID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productorIDColumn {
                get {
                    return this.columnproductorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn humedadColumn {
                get {
                    return this.columnhumedad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dctoHumedadColumn {
                get {
                    return this.columndctoHumedad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn impurezasColumn {
                get {
                    return this.columnimpurezas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totaldescuentosColumn {
                get {
                    return this.columntotaldescuentos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pesonetoapagarColumn {
                get {
                    return this.columnpesonetoapagar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn precioapagarColumn {
                get {
                    return this.columnprecioapagar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn importeColumn {
                get {
                    return this.columnimporte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn placasColumn {
                get {
                    return this.columnplacas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn choferColumn {
                get {
                    return this.columnchofer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pagadaColumn {
                get {
                    return this.columnpagada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn storeTSColumn {
                get {
                    return this.columnstoreTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updateTSColumn {
                get {
                    return this.columnupdateTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productoIDColumn {
                get {
                    return this.columnproductoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroBoletaColumn {
                get {
                    return this.columnNumeroBoleta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TicketColumn {
                get {
                    return this.columnTicket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codigoClienteProvArchivoColumn {
                get {
                    return this.columncodigoClienteProvArchivo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreProductorColumn {
                get {
                    return this.columnNombreProductor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaEntradaColumn {
                get {
                    return this.columnFechaEntrada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesadorEntradaColumn {
                get {
                    return this.columnPesadorEntrada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoDeEntradaColumn {
                get {
                    return this.columnPesoDeEntrada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasculaEntradaColumn {
                get {
                    return this.columnBasculaEntrada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FechaSalidaColumn {
                get {
                    return this.columnFechaSalida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoDeSalidaColumn {
                get {
                    return this.columnPesoDeSalida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesadorSalidaColumn {
                get {
                    return this.columnPesadorSalida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BasculaSalidaColumn {
                get {
                    return this.columnBasculaSalida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pesonetoentradaColumn {
                get {
                    return this.columnpesonetoentrada;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pesonetosalidaColumn {
                get {
                    return this.columnpesonetosalida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dctoImpurezasColumn {
                get {
                    return this.columndctoImpurezas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dctoSecadoColumn {
                get {
                    return this.columndctoSecado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalapagarColumn {
                get {
                    return this.columntotalapagar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bodegaIDColumn {
                get {
                    return this.columnbodegaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn applyHumedadColumn {
                get {
                    return this.columnapplyHumedad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn applyImpurezasColumn {
                get {
                    return this.columnapplyImpurezas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn applySecadoColumn {
                get {
                    return this.columnapplySecado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FolioDestinoColumn {
                get {
                    return this.columnFolioDestino;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PesoDestinoColumn {
                get {
                    return this.columnPesoDestino;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MermaColumn {
                get {
                    return this.columnMerma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FleteColumn {
                get {
                    return this.columnFlete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImporteFleteColumn {
                get {
                    return this.columnImporteFlete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecioNetoDestinoColumn {
                get {
                    return this.columnPrecioNetoDestino;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dctoGranoChicoColumn {
                get {
                    return this.columndctoGranoChico;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dctoGranoDanadoColumn {
                get {
                    return this.columndctoGranoDanado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dctoGranoQuebradoColumn {
                get {
                    return this.columndctoGranoQuebrado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dctoGranoEstrelladoColumn {
                get {
                    return this.columndctoGranoEstrellado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn transportistaIDColumn {
                get {
                    return this.columntransportistaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cabezasDeGanadoColumn {
                get {
                    return this.columncabezasDeGanado;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn llevaFleteColumn {
                get {
                    return this.columnllevaFlete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deGranjaACorralesColumn {
                get {
                    return this.columndeGranjaACorrales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_BoletasRow this[int index] {
                get {
                    return ((dbo_BoletasRow)(this.Rows[index]));
                }
            }
            
            public event dbo_BoletasRowChangeEventHandler dbo_BoletasRowChanging;
            
            public event dbo_BoletasRowChangeEventHandler dbo_BoletasRowChanged;
            
            public event dbo_BoletasRowChangeEventHandler dbo_BoletasRowDeleting;
            
            public event dbo_BoletasRowChangeEventHandler dbo_BoletasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_BoletasRow(dbo_BoletasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_BoletasRow Adddbo_BoletasRow(
                        int cicloID, 
                        int userID, 
                        int productorID, 
                        double humedad, 
                        double dctoHumedad, 
                        double impurezas, 
                        decimal totaldescuentos, 
                        double pesonetoapagar, 
                        decimal precioapagar, 
                        decimal importe, 
                        string placas, 
                        string chofer, 
                        bool pagada, 
                        System.DateTime storeTS, 
                        System.DateTime updateTS, 
                        int productoID, 
                        string NumeroBoleta, 
                        string Ticket, 
                        string codigoClienteProvArchivo, 
                        string NombreProductor, 
                        System.DateTime FechaEntrada, 
                        string PesadorEntrada, 
                        double PesoDeEntrada, 
                        string BasculaEntrada, 
                        System.DateTime FechaSalida, 
                        double PesoDeSalida, 
                        string PesadorSalida, 
                        string BasculaSalida, 
                        double pesonetoentrada, 
                        double pesonetosalida, 
                        decimal dctoImpurezas, 
                        decimal dctoSecado, 
                        decimal totalapagar, 
                        int bodegaID, 
                        bool applyHumedad, 
                        bool applyImpurezas, 
                        bool applySecado, 
                        string FolioDestino, 
                        double PesoDestino, 
                        double Merma, 
                        double Flete, 
                        double ImporteFlete, 
                        double PrecioNetoDestino, 
                        double dctoGranoChico, 
                        double dctoGranoDanado, 
                        double dctoGranoQuebrado, 
                        double dctoGranoEstrellado, 
                        int transportistaID, 
                        int cabezasDeGanado, 
                        bool llevaFlete, 
                        bool deGranjaACorrales, 
                        System.DateTime LastEditDate, 
                        System.DateTime CreationDate) {
                dbo_BoletasRow rowdbo_BoletasRow = ((dbo_BoletasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        cicloID,
                        userID,
                        productorID,
                        humedad,
                        dctoHumedad,
                        impurezas,
                        totaldescuentos,
                        pesonetoapagar,
                        precioapagar,
                        importe,
                        placas,
                        chofer,
                        pagada,
                        storeTS,
                        updateTS,
                        productoID,
                        NumeroBoleta,
                        Ticket,
                        codigoClienteProvArchivo,
                        NombreProductor,
                        FechaEntrada,
                        PesadorEntrada,
                        PesoDeEntrada,
                        BasculaEntrada,
                        FechaSalida,
                        PesoDeSalida,
                        PesadorSalida,
                        BasculaSalida,
                        pesonetoentrada,
                        pesonetosalida,
                        dctoImpurezas,
                        dctoSecado,
                        totalapagar,
                        bodegaID,
                        applyHumedad,
                        applyImpurezas,
                        applySecado,
                        FolioDestino,
                        PesoDestino,
                        Merma,
                        Flete,
                        ImporteFlete,
                        PrecioNetoDestino,
                        dctoGranoChico,
                        dctoGranoDanado,
                        dctoGranoQuebrado,
                        dctoGranoEstrellado,
                        transportistaID,
                        cabezasDeGanado,
                        llevaFlete,
                        deGranjaACorrales,
                        LastEditDate,
                        CreationDate};
                rowdbo_BoletasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_BoletasRow);
                return rowdbo_BoletasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_BoletasRow FindByboletaID(int boletaID) {
                return ((dbo_BoletasRow)(this.Rows.Find(new object[] {
                            boletaID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_BoletasDataTable cln = ((dbo_BoletasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_BoletasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnboletaID = base.Columns["boletaID"];
                this.columncicloID = base.Columns["cicloID"];
                this.columnuserID = base.Columns["userID"];
                this.columnproductorID = base.Columns["productorID"];
                this.columnhumedad = base.Columns["humedad"];
                this.columndctoHumedad = base.Columns["dctoHumedad"];
                this.columnimpurezas = base.Columns["impurezas"];
                this.columntotaldescuentos = base.Columns["totaldescuentos"];
                this.columnpesonetoapagar = base.Columns["pesonetoapagar"];
                this.columnprecioapagar = base.Columns["precioapagar"];
                this.columnimporte = base.Columns["importe"];
                this.columnplacas = base.Columns["placas"];
                this.columnchofer = base.Columns["chofer"];
                this.columnpagada = base.Columns["pagada"];
                this.columnstoreTS = base.Columns["storeTS"];
                this.columnupdateTS = base.Columns["updateTS"];
                this.columnproductoID = base.Columns["productoID"];
                this.columnNumeroBoleta = base.Columns["NumeroBoleta"];
                this.columnTicket = base.Columns["Ticket"];
                this.columncodigoClienteProvArchivo = base.Columns["codigoClienteProvArchivo"];
                this.columnNombreProductor = base.Columns["NombreProductor"];
                this.columnFechaEntrada = base.Columns["FechaEntrada"];
                this.columnPesadorEntrada = base.Columns["PesadorEntrada"];
                this.columnPesoDeEntrada = base.Columns["PesoDeEntrada"];
                this.columnBasculaEntrada = base.Columns["BasculaEntrada"];
                this.columnFechaSalida = base.Columns["FechaSalida"];
                this.columnPesoDeSalida = base.Columns["PesoDeSalida"];
                this.columnPesadorSalida = base.Columns["PesadorSalida"];
                this.columnBasculaSalida = base.Columns["BasculaSalida"];
                this.columnpesonetoentrada = base.Columns["pesonetoentrada"];
                this.columnpesonetosalida = base.Columns["pesonetosalida"];
                this.columndctoImpurezas = base.Columns["dctoImpurezas"];
                this.columndctoSecado = base.Columns["dctoSecado"];
                this.columntotalapagar = base.Columns["totalapagar"];
                this.columnbodegaID = base.Columns["bodegaID"];
                this.columnapplyHumedad = base.Columns["applyHumedad"];
                this.columnapplyImpurezas = base.Columns["applyImpurezas"];
                this.columnapplySecado = base.Columns["applySecado"];
                this.columnFolioDestino = base.Columns["FolioDestino"];
                this.columnPesoDestino = base.Columns["PesoDestino"];
                this.columnMerma = base.Columns["Merma"];
                this.columnFlete = base.Columns["Flete"];
                this.columnImporteFlete = base.Columns["ImporteFlete"];
                this.columnPrecioNetoDestino = base.Columns["PrecioNetoDestino"];
                this.columndctoGranoChico = base.Columns["dctoGranoChico"];
                this.columndctoGranoDanado = base.Columns["dctoGranoDanado"];
                this.columndctoGranoQuebrado = base.Columns["dctoGranoQuebrado"];
                this.columndctoGranoEstrellado = base.Columns["dctoGranoEstrellado"];
                this.columntransportistaID = base.Columns["transportistaID"];
                this.columncabezasDeGanado = base.Columns["cabezasDeGanado"];
                this.columnllevaFlete = base.Columns["llevaFlete"];
                this.columndeGranjaACorrales = base.Columns["deGranjaACorrales"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnboletaID = new global::System.Data.DataColumn("boletaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnboletaID);
                this.columncicloID = new global::System.Data.DataColumn("cicloID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncicloID);
                this.columnuserID = new global::System.Data.DataColumn("userID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columnproductorID = new global::System.Data.DataColumn("productorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductorID);
                this.columnhumedad = new global::System.Data.DataColumn("humedad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhumedad);
                this.columndctoHumedad = new global::System.Data.DataColumn("dctoHumedad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndctoHumedad);
                this.columnimpurezas = new global::System.Data.DataColumn("impurezas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimpurezas);
                this.columntotaldescuentos = new global::System.Data.DataColumn("totaldescuentos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotaldescuentos);
                this.columnpesonetoapagar = new global::System.Data.DataColumn("pesonetoapagar", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpesonetoapagar);
                this.columnprecioapagar = new global::System.Data.DataColumn("precioapagar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprecioapagar);
                this.columnimporte = new global::System.Data.DataColumn("importe", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimporte);
                this.columnplacas = new global::System.Data.DataColumn("placas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplacas);
                this.columnchofer = new global::System.Data.DataColumn("chofer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchofer);
                this.columnpagada = new global::System.Data.DataColumn("pagada", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpagada);
                this.columnstoreTS = new global::System.Data.DataColumn("storeTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstoreTS);
                this.columnupdateTS = new global::System.Data.DataColumn("updateTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdateTS);
                this.columnproductoID = new global::System.Data.DataColumn("productoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductoID);
                this.columnNumeroBoleta = new global::System.Data.DataColumn("NumeroBoleta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumeroBoleta);
                this.columnTicket = new global::System.Data.DataColumn("Ticket", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTicket);
                this.columncodigoClienteProvArchivo = new global::System.Data.DataColumn("codigoClienteProvArchivo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodigoClienteProvArchivo);
                this.columnNombreProductor = new global::System.Data.DataColumn("NombreProductor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombreProductor);
                this.columnFechaEntrada = new global::System.Data.DataColumn("FechaEntrada", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaEntrada);
                this.columnPesadorEntrada = new global::System.Data.DataColumn("PesadorEntrada", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesadorEntrada);
                this.columnPesoDeEntrada = new global::System.Data.DataColumn("PesoDeEntrada", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoDeEntrada);
                this.columnBasculaEntrada = new global::System.Data.DataColumn("BasculaEntrada", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasculaEntrada);
                this.columnFechaSalida = new global::System.Data.DataColumn("FechaSalida", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFechaSalida);
                this.columnPesoDeSalida = new global::System.Data.DataColumn("PesoDeSalida", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoDeSalida);
                this.columnPesadorSalida = new global::System.Data.DataColumn("PesadorSalida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesadorSalida);
                this.columnBasculaSalida = new global::System.Data.DataColumn("BasculaSalida", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasculaSalida);
                this.columnpesonetoentrada = new global::System.Data.DataColumn("pesonetoentrada", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpesonetoentrada);
                this.columnpesonetosalida = new global::System.Data.DataColumn("pesonetosalida", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpesonetosalida);
                this.columndctoImpurezas = new global::System.Data.DataColumn("dctoImpurezas", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndctoImpurezas);
                this.columndctoSecado = new global::System.Data.DataColumn("dctoSecado", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndctoSecado);
                this.columntotalapagar = new global::System.Data.DataColumn("totalapagar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalapagar);
                this.columnbodegaID = new global::System.Data.DataColumn("bodegaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbodegaID);
                this.columnapplyHumedad = new global::System.Data.DataColumn("applyHumedad", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplyHumedad);
                this.columnapplyImpurezas = new global::System.Data.DataColumn("applyImpurezas", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplyImpurezas);
                this.columnapplySecado = new global::System.Data.DataColumn("applySecado", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplySecado);
                this.columnFolioDestino = new global::System.Data.DataColumn("FolioDestino", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolioDestino);
                this.columnPesoDestino = new global::System.Data.DataColumn("PesoDestino", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPesoDestino);
                this.columnMerma = new global::System.Data.DataColumn("Merma", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMerma);
                this.columnFlete = new global::System.Data.DataColumn("Flete", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlete);
                this.columnImporteFlete = new global::System.Data.DataColumn("ImporteFlete", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImporteFlete);
                this.columnPrecioNetoDestino = new global::System.Data.DataColumn("PrecioNetoDestino", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecioNetoDestino);
                this.columndctoGranoChico = new global::System.Data.DataColumn("dctoGranoChico", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndctoGranoChico);
                this.columndctoGranoDanado = new global::System.Data.DataColumn("dctoGranoDanado", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndctoGranoDanado);
                this.columndctoGranoQuebrado = new global::System.Data.DataColumn("dctoGranoQuebrado", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndctoGranoQuebrado);
                this.columndctoGranoEstrellado = new global::System.Data.DataColumn("dctoGranoEstrellado", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndctoGranoEstrellado);
                this.columntransportistaID = new global::System.Data.DataColumn("transportistaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntransportistaID);
                this.columncabezasDeGanado = new global::System.Data.DataColumn("cabezasDeGanado", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncabezasDeGanado);
                this.columnllevaFlete = new global::System.Data.DataColumn("llevaFlete", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnllevaFlete);
                this.columndeGranjaACorrales = new global::System.Data.DataColumn("deGranjaACorrales", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeGranjaACorrales);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnboletaID}, true));
                this.columnboletaID.AutoIncrement = true;
                this.columnboletaID.AutoIncrementSeed = -1;
                this.columnboletaID.AutoIncrementStep = -1;
                this.columnboletaID.AllowDBNull = false;
                this.columnboletaID.ReadOnly = true;
                this.columnboletaID.Unique = true;
                this.columncicloID.AllowDBNull = false;
                this.columnuserID.AllowDBNull = false;
                this.columnproductorID.AllowDBNull = false;
                this.columnhumedad.AllowDBNull = false;
                this.columndctoHumedad.AllowDBNull = false;
                this.columnimpurezas.AllowDBNull = false;
                this.columntotaldescuentos.AllowDBNull = false;
                this.columnpesonetoapagar.AllowDBNull = false;
                this.columnprecioapagar.AllowDBNull = false;
                this.columnimporte.AllowDBNull = false;
                this.columnplacas.MaxLength = 50;
                this.columnchofer.MaxLength = 250;
                this.columnpagada.AllowDBNull = false;
                this.columnstoreTS.AllowDBNull = false;
                this.columnupdateTS.AllowDBNull = false;
                this.columnproductoID.AllowDBNull = false;
                this.columnNumeroBoleta.MaxLength = 15;
                this.columnTicket.MaxLength = 15;
                this.columncodigoClienteProvArchivo.MaxLength = 10;
                this.columnNombreProductor.MaxLength = 50;
                this.columnPesadorEntrada.MaxLength = 50;
                this.columnPesoDeEntrada.AllowDBNull = false;
                this.columnBasculaEntrada.MaxLength = 50;
                this.columnPesoDeSalida.AllowDBNull = false;
                this.columnPesadorSalida.MaxLength = 50;
                this.columnBasculaSalida.MaxLength = 50;
                this.columnpesonetoentrada.AllowDBNull = false;
                this.columnpesonetosalida.AllowDBNull = false;
                this.columndctoImpurezas.AllowDBNull = false;
                this.columndctoSecado.AllowDBNull = false;
                this.columntotalapagar.AllowDBNull = false;
                this.columnbodegaID.AllowDBNull = false;
                this.columnapplyHumedad.AllowDBNull = false;
                this.columnapplyImpurezas.AllowDBNull = false;
                this.columnapplySecado.AllowDBNull = false;
                this.columnFolioDestino.MaxLength = 15;
                this.columncabezasDeGanado.AllowDBNull = false;
                this.columnllevaFlete.AllowDBNull = false;
                this.columndeGranjaACorrales.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_BoletasRow Newdbo_BoletasRow() {
                return ((dbo_BoletasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_BoletasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_BoletasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_BoletasRowChanged != null)) {
                    this.dbo_BoletasRowChanged(this, new dbo_BoletasRowChangeEvent(((dbo_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_BoletasRowChanging != null)) {
                    this.dbo_BoletasRowChanging(this, new dbo_BoletasRowChangeEvent(((dbo_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_BoletasRowDeleted != null)) {
                    this.dbo_BoletasRowDeleted(this, new dbo_BoletasRowChangeEvent(((dbo_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_BoletasRowDeleting != null)) {
                    this.dbo_BoletasRowDeleting(this, new dbo_BoletasRowChangeEvent(((dbo_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_BoletasRow(dbo_BoletasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_BoletasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_gan_ProveedoresDataTable : global::System.Data.TypedTableBase<dbo_gan_ProveedoresRow> {
            
            private global::System.Data.DataColumn columnganProveedorID;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columndireccion;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columnestadoID;
            
            private global::System.Data.DataColumn columnuserID;
            
            private global::System.Data.DataColumn columnRFC;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_ProveedoresDataTable() {
                this.TableName = "dbo_gan_Proveedores";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_gan_ProveedoresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_gan_ProveedoresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ganProveedorIDColumn {
                get {
                    return this.columnganProveedorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn direccionColumn {
                get {
                    return this.columndireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estadoIDColumn {
                get {
                    return this.columnestadoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFCColumn {
                get {
                    return this.columnRFC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_ProveedoresRow this[int index] {
                get {
                    return ((dbo_gan_ProveedoresRow)(this.Rows[index]));
                }
            }
            
            public event dbo_gan_ProveedoresRowChangeEventHandler dbo_gan_ProveedoresRowChanging;
            
            public event dbo_gan_ProveedoresRowChangeEventHandler dbo_gan_ProveedoresRowChanged;
            
            public event dbo_gan_ProveedoresRowChangeEventHandler dbo_gan_ProveedoresRowDeleting;
            
            public event dbo_gan_ProveedoresRowChangeEventHandler dbo_gan_ProveedoresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_gan_ProveedoresRow(dbo_gan_ProveedoresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_ProveedoresRow Adddbo_gan_ProveedoresRow(string Nombre, string direccion, string ciudad, int estadoID, int userID, string RFC, System.DateTime LastEditDate, System.DateTime CreationDate) {
                dbo_gan_ProveedoresRow rowdbo_gan_ProveedoresRow = ((dbo_gan_ProveedoresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Nombre,
                        direccion,
                        ciudad,
                        estadoID,
                        userID,
                        RFC,
                        LastEditDate,
                        CreationDate};
                rowdbo_gan_ProveedoresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_gan_ProveedoresRow);
                return rowdbo_gan_ProveedoresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_ProveedoresRow FindByganProveedorID(int ganProveedorID) {
                return ((dbo_gan_ProveedoresRow)(this.Rows.Find(new object[] {
                            ganProveedorID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_gan_ProveedoresDataTable cln = ((dbo_gan_ProveedoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_gan_ProveedoresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnganProveedorID = base.Columns["ganProveedorID"];
                this.columnNombre = base.Columns["Nombre"];
                this.columndireccion = base.Columns["direccion"];
                this.columnciudad = base.Columns["ciudad"];
                this.columnestadoID = base.Columns["estadoID"];
                this.columnuserID = base.Columns["userID"];
                this.columnRFC = base.Columns["RFC"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnganProveedorID = new global::System.Data.DataColumn("ganProveedorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnganProveedorID);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columndireccion = new global::System.Data.DataColumn("direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndireccion);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columnestadoID = new global::System.Data.DataColumn("estadoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestadoID);
                this.columnuserID = new global::System.Data.DataColumn("userID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columnRFC = new global::System.Data.DataColumn("RFC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFC);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnganProveedorID}, true));
                this.columnganProveedorID.AutoIncrement = true;
                this.columnganProveedorID.AutoIncrementSeed = -1;
                this.columnganProveedorID.AutoIncrementStep = -1;
                this.columnganProveedorID.AllowDBNull = false;
                this.columnganProveedorID.ReadOnly = true;
                this.columnganProveedorID.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 50;
                this.columndireccion.MaxLength = 50;
                this.columnciudad.MaxLength = 50;
                this.columnestadoID.AllowDBNull = false;
                this.columnuserID.AllowDBNull = false;
                this.columnRFC.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_ProveedoresRow Newdbo_gan_ProveedoresRow() {
                return ((dbo_gan_ProveedoresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_gan_ProveedoresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_gan_ProveedoresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_gan_ProveedoresRowChanged != null)) {
                    this.dbo_gan_ProveedoresRowChanged(this, new dbo_gan_ProveedoresRowChangeEvent(((dbo_gan_ProveedoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_gan_ProveedoresRowChanging != null)) {
                    this.dbo_gan_ProveedoresRowChanging(this, new dbo_gan_ProveedoresRowChangeEvent(((dbo_gan_ProveedoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_gan_ProveedoresRowDeleted != null)) {
                    this.dbo_gan_ProveedoresRowDeleted(this, new dbo_gan_ProveedoresRowChangeEvent(((dbo_gan_ProveedoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_gan_ProveedoresRowDeleting != null)) {
                    this.dbo_gan_ProveedoresRowDeleting(this, new dbo_gan_ProveedoresRowChangeEvent(((dbo_gan_ProveedoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_gan_ProveedoresRow(dbo_gan_ProveedoresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_gan_ProveedoresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_gan_Proveedores_BoletasDataTable : global::System.Data.TypedTableBase<dbo_gan_Proveedores_BoletasRow> {
            
            private global::System.Data.DataColumn columnganProveedorID;
            
            private global::System.Data.DataColumn columnboletaID;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_Proveedores_BoletasDataTable() {
                this.TableName = "dbo_gan_Proveedores_Boletas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_gan_Proveedores_BoletasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_gan_Proveedores_BoletasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ganProveedorIDColumn {
                get {
                    return this.columnganProveedorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn boletaIDColumn {
                get {
                    return this.columnboletaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_Proveedores_BoletasRow this[int index] {
                get {
                    return ((dbo_gan_Proveedores_BoletasRow)(this.Rows[index]));
                }
            }
            
            public event dbo_gan_Proveedores_BoletasRowChangeEventHandler dbo_gan_Proveedores_BoletasRowChanging;
            
            public event dbo_gan_Proveedores_BoletasRowChangeEventHandler dbo_gan_Proveedores_BoletasRowChanged;
            
            public event dbo_gan_Proveedores_BoletasRowChangeEventHandler dbo_gan_Proveedores_BoletasRowDeleting;
            
            public event dbo_gan_Proveedores_BoletasRowChangeEventHandler dbo_gan_Proveedores_BoletasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_gan_Proveedores_BoletasRow(dbo_gan_Proveedores_BoletasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_Proveedores_BoletasRow Adddbo_gan_Proveedores_BoletasRow(int ganProveedorID, int boletaID, System.DateTime LastEditDate, System.DateTime CreationDate) {
                dbo_gan_Proveedores_BoletasRow rowdbo_gan_Proveedores_BoletasRow = ((dbo_gan_Proveedores_BoletasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ganProveedorID,
                        boletaID,
                        LastEditDate,
                        CreationDate};
                rowdbo_gan_Proveedores_BoletasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_gan_Proveedores_BoletasRow);
                return rowdbo_gan_Proveedores_BoletasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_Proveedores_BoletasRow FindByganProveedorIDboletaID(int ganProveedorID, int boletaID) {
                return ((dbo_gan_Proveedores_BoletasRow)(this.Rows.Find(new object[] {
                            ganProveedorID,
                            boletaID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_gan_Proveedores_BoletasDataTable cln = ((dbo_gan_Proveedores_BoletasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_gan_Proveedores_BoletasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnganProveedorID = base.Columns["ganProveedorID"];
                this.columnboletaID = base.Columns["boletaID"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnganProveedorID = new global::System.Data.DataColumn("ganProveedorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnganProveedorID);
                this.columnboletaID = new global::System.Data.DataColumn("boletaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnboletaID);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnganProveedorID,
                                this.columnboletaID}, true));
                this.columnganProveedorID.AllowDBNull = false;
                this.columnboletaID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_Proveedores_BoletasRow Newdbo_gan_Proveedores_BoletasRow() {
                return ((dbo_gan_Proveedores_BoletasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_gan_Proveedores_BoletasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_gan_Proveedores_BoletasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_gan_Proveedores_BoletasRowChanged != null)) {
                    this.dbo_gan_Proveedores_BoletasRowChanged(this, new dbo_gan_Proveedores_BoletasRowChangeEvent(((dbo_gan_Proveedores_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_gan_Proveedores_BoletasRowChanging != null)) {
                    this.dbo_gan_Proveedores_BoletasRowChanging(this, new dbo_gan_Proveedores_BoletasRowChangeEvent(((dbo_gan_Proveedores_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_gan_Proveedores_BoletasRowDeleted != null)) {
                    this.dbo_gan_Proveedores_BoletasRowDeleted(this, new dbo_gan_Proveedores_BoletasRowChangeEvent(((dbo_gan_Proveedores_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_gan_Proveedores_BoletasRowDeleting != null)) {
                    this.dbo_gan_Proveedores_BoletasRowDeleting(this, new dbo_gan_Proveedores_BoletasRowChangeEvent(((dbo_gan_Proveedores_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_gan_Proveedores_BoletasRow(dbo_gan_Proveedores_BoletasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_gan_Proveedores_BoletasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_ProductoresDataTable : global::System.Data.TypedTableBase<dbo_ProductoresRow> {
            
            private global::System.Data.DataColumn columnproductorID;
            
            private global::System.Data.DataColumn columnapaterno;
            
            private global::System.Data.DataColumn columnamaterno;
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columnfechanacimiento;
            
            private global::System.Data.DataColumn columnIFE;
            
            private global::System.Data.DataColumn columnCURP;
            
            private global::System.Data.DataColumn columndomicilio;
            
            private global::System.Data.DataColumn columnpoblacion;
            
            private global::System.Data.DataColumn columnmunicipio;
            
            private global::System.Data.DataColumn columnestadoID;
            
            private global::System.Data.DataColumn columnCP;
            
            private global::System.Data.DataColumn columnRFC;
            
            private global::System.Data.DataColumn columnsexoID;
            
            private global::System.Data.DataColumn columntelefono;
            
            private global::System.Data.DataColumn columntelefonotrabajo;
            
            private global::System.Data.DataColumn columncelular;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnestadocivilID;
            
            private global::System.Data.DataColumn columnregimenID;
            
            private global::System.Data.DataColumn columncodigoBoletasFile;
            
            private global::System.Data.DataColumn columnstoreTS;
            
            private global::System.Data.DataColumn columnupdateTS;
            
            private global::System.Data.DataColumn columncolonia;
            
            private global::System.Data.DataColumn columnconyugue;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductoresDataTable() {
                this.TableName = "dbo_Productores";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_ProductoresDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_ProductoresDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productorIDColumn {
                get {
                    return this.columnproductorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apaternoColumn {
                get {
                    return this.columnapaterno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amaternoColumn {
                get {
                    return this.columnamaterno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fechanacimientoColumn {
                get {
                    return this.columnfechanacimiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IFEColumn {
                get {
                    return this.columnIFE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CURPColumn {
                get {
                    return this.columnCURP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn domicilioColumn {
                get {
                    return this.columndomicilio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn poblacionColumn {
                get {
                    return this.columnpoblacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn municipioColumn {
                get {
                    return this.columnmunicipio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estadoIDColumn {
                get {
                    return this.columnestadoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPColumn {
                get {
                    return this.columnCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFCColumn {
                get {
                    return this.columnRFC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sexoIDColumn {
                get {
                    return this.columnsexoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn telefonoColumn {
                get {
                    return this.columntelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn telefonotrabajoColumn {
                get {
                    return this.columntelefonotrabajo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn celularColumn {
                get {
                    return this.columncelular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estadocivilIDColumn {
                get {
                    return this.columnestadocivilID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn regimenIDColumn {
                get {
                    return this.columnregimenID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codigoBoletasFileColumn {
                get {
                    return this.columncodigoBoletasFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn storeTSColumn {
                get {
                    return this.columnstoreTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updateTSColumn {
                get {
                    return this.columnupdateTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coloniaColumn {
                get {
                    return this.columncolonia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn conyugueColumn {
                get {
                    return this.columnconyugue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductoresRow this[int index] {
                get {
                    return ((dbo_ProductoresRow)(this.Rows[index]));
                }
            }
            
            public event dbo_ProductoresRowChangeEventHandler dbo_ProductoresRowChanging;
            
            public event dbo_ProductoresRowChangeEventHandler dbo_ProductoresRowChanged;
            
            public event dbo_ProductoresRowChangeEventHandler dbo_ProductoresRowDeleting;
            
            public event dbo_ProductoresRowChangeEventHandler dbo_ProductoresRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_ProductoresRow(dbo_ProductoresRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductoresRow Adddbo_ProductoresRow(
                        string apaterno, 
                        string amaterno, 
                        string nombre, 
                        System.DateTime fechanacimiento, 
                        string IFE, 
                        string CURP, 
                        string domicilio, 
                        string poblacion, 
                        string municipio, 
                        int estadoID, 
                        string CP, 
                        string RFC, 
                        int sexoID, 
                        string telefono, 
                        string telefonotrabajo, 
                        string celular, 
                        string fax, 
                        string email, 
                        int estadocivilID, 
                        int regimenID, 
                        string codigoBoletasFile, 
                        System.DateTime storeTS, 
                        System.DateTime updateTS, 
                        string colonia, 
                        string conyugue, 
                        System.DateTime LastEditDate, 
                        System.DateTime CreationDate) {
                dbo_ProductoresRow rowdbo_ProductoresRow = ((dbo_ProductoresRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        apaterno,
                        amaterno,
                        nombre,
                        fechanacimiento,
                        IFE,
                        CURP,
                        domicilio,
                        poblacion,
                        municipio,
                        estadoID,
                        CP,
                        RFC,
                        sexoID,
                        telefono,
                        telefonotrabajo,
                        celular,
                        fax,
                        email,
                        estadocivilID,
                        regimenID,
                        codigoBoletasFile,
                        storeTS,
                        updateTS,
                        colonia,
                        conyugue,
                        LastEditDate,
                        CreationDate};
                rowdbo_ProductoresRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_ProductoresRow);
                return rowdbo_ProductoresRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductoresRow FindByproductorID(int productorID) {
                return ((dbo_ProductoresRow)(this.Rows.Find(new object[] {
                            productorID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_ProductoresDataTable cln = ((dbo_ProductoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_ProductoresDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnproductorID = base.Columns["productorID"];
                this.columnapaterno = base.Columns["apaterno"];
                this.columnamaterno = base.Columns["amaterno"];
                this.columnnombre = base.Columns["nombre"];
                this.columnfechanacimiento = base.Columns["fechanacimiento"];
                this.columnIFE = base.Columns["IFE"];
                this.columnCURP = base.Columns["CURP"];
                this.columndomicilio = base.Columns["domicilio"];
                this.columnpoblacion = base.Columns["poblacion"];
                this.columnmunicipio = base.Columns["municipio"];
                this.columnestadoID = base.Columns["estadoID"];
                this.columnCP = base.Columns["CP"];
                this.columnRFC = base.Columns["RFC"];
                this.columnsexoID = base.Columns["sexoID"];
                this.columntelefono = base.Columns["telefono"];
                this.columntelefonotrabajo = base.Columns["telefonotrabajo"];
                this.columncelular = base.Columns["celular"];
                this.columnfax = base.Columns["fax"];
                this.columnemail = base.Columns["email"];
                this.columnestadocivilID = base.Columns["estadocivilID"];
                this.columnregimenID = base.Columns["regimenID"];
                this.columncodigoBoletasFile = base.Columns["codigoBoletasFile"];
                this.columnstoreTS = base.Columns["storeTS"];
                this.columnupdateTS = base.Columns["updateTS"];
                this.columncolonia = base.Columns["colonia"];
                this.columnconyugue = base.Columns["conyugue"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnproductorID = new global::System.Data.DataColumn("productorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductorID);
                this.columnapaterno = new global::System.Data.DataColumn("apaterno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapaterno);
                this.columnamaterno = new global::System.Data.DataColumn("amaterno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamaterno);
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columnfechanacimiento = new global::System.Data.DataColumn("fechanacimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfechanacimiento);
                this.columnIFE = new global::System.Data.DataColumn("IFE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIFE);
                this.columnCURP = new global::System.Data.DataColumn("CURP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURP);
                this.columndomicilio = new global::System.Data.DataColumn("domicilio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndomicilio);
                this.columnpoblacion = new global::System.Data.DataColumn("poblacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpoblacion);
                this.columnmunicipio = new global::System.Data.DataColumn("municipio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmunicipio);
                this.columnestadoID = new global::System.Data.DataColumn("estadoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestadoID);
                this.columnCP = new global::System.Data.DataColumn("CP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP);
                this.columnRFC = new global::System.Data.DataColumn("RFC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFC);
                this.columnsexoID = new global::System.Data.DataColumn("sexoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsexoID);
                this.columntelefono = new global::System.Data.DataColumn("telefono", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelefono);
                this.columntelefonotrabajo = new global::System.Data.DataColumn("telefonotrabajo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelefonotrabajo);
                this.columncelular = new global::System.Data.DataColumn("celular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncelular);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnestadocivilID = new global::System.Data.DataColumn("estadocivilID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestadocivilID);
                this.columnregimenID = new global::System.Data.DataColumn("regimenID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregimenID);
                this.columncodigoBoletasFile = new global::System.Data.DataColumn("codigoBoletasFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodigoBoletasFile);
                this.columnstoreTS = new global::System.Data.DataColumn("storeTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstoreTS);
                this.columnupdateTS = new global::System.Data.DataColumn("updateTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdateTS);
                this.columncolonia = new global::System.Data.DataColumn("colonia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolonia);
                this.columnconyugue = new global::System.Data.DataColumn("conyugue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconyugue);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnproductorID}, true));
                this.columnproductorID.AutoIncrement = true;
                this.columnproductorID.AutoIncrementSeed = -1;
                this.columnproductorID.AutoIncrementStep = -1;
                this.columnproductorID.AllowDBNull = false;
                this.columnproductorID.ReadOnly = true;
                this.columnproductorID.Unique = true;
                this.columnapaterno.MaxLength = 50;
                this.columnamaterno.MaxLength = 50;
                this.columnnombre.AllowDBNull = false;
                this.columnnombre.MaxLength = 50;
                this.columnIFE.MaxLength = 50;
                this.columnCURP.MaxLength = 50;
                this.columndomicilio.MaxLength = 536870911;
                this.columnpoblacion.MaxLength = 50;
                this.columnmunicipio.MaxLength = 50;
                this.columnestadoID.AllowDBNull = false;
                this.columnCP.MaxLength = 50;
                this.columnRFC.MaxLength = 50;
                this.columnsexoID.AllowDBNull = false;
                this.columntelefono.MaxLength = 50;
                this.columntelefonotrabajo.MaxLength = 50;
                this.columncelular.MaxLength = 50;
                this.columnfax.MaxLength = 50;
                this.columnemail.MaxLength = 50;
                this.columnestadocivilID.AllowDBNull = false;
                this.columncodigoBoletasFile.MaxLength = 10;
                this.columnstoreTS.AllowDBNull = false;
                this.columnupdateTS.AllowDBNull = false;
                this.columncolonia.MaxLength = 255;
                this.columnconyugue.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductoresRow Newdbo_ProductoresRow() {
                return ((dbo_ProductoresRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_ProductoresRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_ProductoresRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_ProductoresRowChanged != null)) {
                    this.dbo_ProductoresRowChanged(this, new dbo_ProductoresRowChangeEvent(((dbo_ProductoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_ProductoresRowChanging != null)) {
                    this.dbo_ProductoresRowChanging(this, new dbo_ProductoresRowChangeEvent(((dbo_ProductoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_ProductoresRowDeleted != null)) {
                    this.dbo_ProductoresRowDeleted(this, new dbo_ProductoresRowChangeEvent(((dbo_ProductoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_ProductoresRowDeleting != null)) {
                    this.dbo_ProductoresRowDeleting(this, new dbo_ProductoresRowChangeEvent(((dbo_ProductoresRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_ProductoresRow(dbo_ProductoresRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_ProductoresDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_ProductosDataTable : global::System.Data.TypedTableBase<dbo_ProductosRow> {
            
            private global::System.Data.DataColumn columnproductoID;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columncodigo;
            
            private global::System.Data.DataColumn columndescripcion;
            
            private global::System.Data.DataColumn columnprecio1;
            
            private global::System.Data.DataColumn columnprecio2;
            
            private global::System.Data.DataColumn columnprecio3;
            
            private global::System.Data.DataColumn columnprecio4;
            
            private global::System.Data.DataColumn columnstoreTS;
            
            private global::System.Data.DataColumn columnupdateTS;
            
            private global::System.Data.DataColumn columnunidadID;
            
            private global::System.Data.DataColumn columnpresentacionID;
            
            private global::System.Data.DataColumn columncodigoBascula;
            
            private global::System.Data.DataColumn columnproductoGrupoID;
            
            private global::System.Data.DataColumn columncasaagricolaID;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductosDataTable() {
                this.TableName = "dbo_Productos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_ProductosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_ProductosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productoIDColumn {
                get {
                    return this.columnproductoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codigoColumn {
                get {
                    return this.columncodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descripcionColumn {
                get {
                    return this.columndescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn precio1Column {
                get {
                    return this.columnprecio1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn precio2Column {
                get {
                    return this.columnprecio2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn precio3Column {
                get {
                    return this.columnprecio3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn precio4Column {
                get {
                    return this.columnprecio4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn storeTSColumn {
                get {
                    return this.columnstoreTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updateTSColumn {
                get {
                    return this.columnupdateTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unidadIDColumn {
                get {
                    return this.columnunidadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn presentacionIDColumn {
                get {
                    return this.columnpresentacionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codigoBasculaColumn {
                get {
                    return this.columncodigoBascula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productoGrupoIDColumn {
                get {
                    return this.columnproductoGrupoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn casaagricolaIDColumn {
                get {
                    return this.columncasaagricolaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductosRow this[int index] {
                get {
                    return ((dbo_ProductosRow)(this.Rows[index]));
                }
            }
            
            public event dbo_ProductosRowChangeEventHandler dbo_ProductosRowChanging;
            
            public event dbo_ProductosRowChangeEventHandler dbo_ProductosRowChanged;
            
            public event dbo_ProductosRowChangeEventHandler dbo_ProductosRowDeleting;
            
            public event dbo_ProductosRowChangeEventHandler dbo_ProductosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_ProductosRow(dbo_ProductosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductosRow Adddbo_ProductosRow(
                        string Nombre, 
                        string codigo, 
                        string descripcion, 
                        double precio1, 
                        double precio2, 
                        double precio3, 
                        double precio4, 
                        System.DateTime storeTS, 
                        System.DateTime updateTS, 
                        int unidadID, 
                        int presentacionID, 
                        string codigoBascula, 
                        int productoGrupoID, 
                        int casaagricolaID, 
                        System.DateTime LastEditDate, 
                        System.DateTime CreationDate) {
                dbo_ProductosRow rowdbo_ProductosRow = ((dbo_ProductosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Nombre,
                        codigo,
                        descripcion,
                        precio1,
                        precio2,
                        precio3,
                        precio4,
                        storeTS,
                        updateTS,
                        unidadID,
                        presentacionID,
                        codigoBascula,
                        productoGrupoID,
                        casaagricolaID,
                        LastEditDate,
                        CreationDate};
                rowdbo_ProductosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_ProductosRow);
                return rowdbo_ProductosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductosRow FindByproductoID(int productoID) {
                return ((dbo_ProductosRow)(this.Rows.Find(new object[] {
                            productoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_ProductosDataTable cln = ((dbo_ProductosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_ProductosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnproductoID = base.Columns["productoID"];
                this.columnNombre = base.Columns["Nombre"];
                this.columncodigo = base.Columns["codigo"];
                this.columndescripcion = base.Columns["descripcion"];
                this.columnprecio1 = base.Columns["precio1"];
                this.columnprecio2 = base.Columns["precio2"];
                this.columnprecio3 = base.Columns["precio3"];
                this.columnprecio4 = base.Columns["precio4"];
                this.columnstoreTS = base.Columns["storeTS"];
                this.columnupdateTS = base.Columns["updateTS"];
                this.columnunidadID = base.Columns["unidadID"];
                this.columnpresentacionID = base.Columns["presentacionID"];
                this.columncodigoBascula = base.Columns["codigoBascula"];
                this.columnproductoGrupoID = base.Columns["productoGrupoID"];
                this.columncasaagricolaID = base.Columns["casaagricolaID"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnproductoID = new global::System.Data.DataColumn("productoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductoID);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columncodigo = new global::System.Data.DataColumn("codigo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodigo);
                this.columndescripcion = new global::System.Data.DataColumn("descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescripcion);
                this.columnprecio1 = new global::System.Data.DataColumn("precio1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprecio1);
                this.columnprecio2 = new global::System.Data.DataColumn("precio2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprecio2);
                this.columnprecio3 = new global::System.Data.DataColumn("precio3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprecio3);
                this.columnprecio4 = new global::System.Data.DataColumn("precio4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprecio4);
                this.columnstoreTS = new global::System.Data.DataColumn("storeTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstoreTS);
                this.columnupdateTS = new global::System.Data.DataColumn("updateTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdateTS);
                this.columnunidadID = new global::System.Data.DataColumn("unidadID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunidadID);
                this.columnpresentacionID = new global::System.Data.DataColumn("presentacionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpresentacionID);
                this.columncodigoBascula = new global::System.Data.DataColumn("codigoBascula", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodigoBascula);
                this.columnproductoGrupoID = new global::System.Data.DataColumn("productoGrupoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductoGrupoID);
                this.columncasaagricolaID = new global::System.Data.DataColumn("casaagricolaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncasaagricolaID);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnproductoID}, true));
                this.columnproductoID.AutoIncrement = true;
                this.columnproductoID.AutoIncrementSeed = -1;
                this.columnproductoID.AutoIncrementStep = -1;
                this.columnproductoID.AllowDBNull = false;
                this.columnproductoID.ReadOnly = true;
                this.columnproductoID.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 50;
                this.columncodigo.MaxLength = 10;
                this.columndescripcion.MaxLength = 536870911;
                this.columnprecio1.AllowDBNull = false;
                this.columnprecio2.AllowDBNull = false;
                this.columnprecio3.AllowDBNull = false;
                this.columnprecio4.AllowDBNull = false;
                this.columnstoreTS.AllowDBNull = false;
                this.columnupdateTS.AllowDBNull = false;
                this.columnunidadID.AllowDBNull = false;
                this.columnpresentacionID.AllowDBNull = false;
                this.columncodigoBascula.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductosRow Newdbo_ProductosRow() {
                return ((dbo_ProductosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_ProductosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_ProductosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_ProductosRowChanged != null)) {
                    this.dbo_ProductosRowChanged(this, new dbo_ProductosRowChangeEvent(((dbo_ProductosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_ProductosRowChanging != null)) {
                    this.dbo_ProductosRowChanging(this, new dbo_ProductosRowChangeEvent(((dbo_ProductosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_ProductosRowDeleted != null)) {
                    this.dbo_ProductosRowDeleted(this, new dbo_ProductosRowChangeEvent(((dbo_ProductosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_ProductosRowDeleting != null)) {
                    this.dbo_ProductosRowDeleting(this, new dbo_ProductosRowChangeEvent(((dbo_ProductosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_ProductosRow(dbo_ProductosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_ProductosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_SecurityLevelsDataTable : global::System.Data.TypedTableBase<dbo_SecurityLevelsRow> {
            
            private global::System.Data.DataColumn columnsecuritylevelID;
            
            private global::System.Data.DataColumn columnsecuritylevel;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_SecurityLevelsDataTable() {
                this.TableName = "dbo_SecurityLevels";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_SecurityLevelsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_SecurityLevelsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn securitylevelIDColumn {
                get {
                    return this.columnsecuritylevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn securitylevelColumn {
                get {
                    return this.columnsecuritylevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_SecurityLevelsRow this[int index] {
                get {
                    return ((dbo_SecurityLevelsRow)(this.Rows[index]));
                }
            }
            
            public event dbo_SecurityLevelsRowChangeEventHandler dbo_SecurityLevelsRowChanging;
            
            public event dbo_SecurityLevelsRowChangeEventHandler dbo_SecurityLevelsRowChanged;
            
            public event dbo_SecurityLevelsRowChangeEventHandler dbo_SecurityLevelsRowDeleting;
            
            public event dbo_SecurityLevelsRowChangeEventHandler dbo_SecurityLevelsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_SecurityLevelsRow(dbo_SecurityLevelsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_SecurityLevelsRow Adddbo_SecurityLevelsRow(int securitylevelID, string securitylevel, System.DateTime LastEditDate, System.DateTime CreationDate) {
                dbo_SecurityLevelsRow rowdbo_SecurityLevelsRow = ((dbo_SecurityLevelsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        securitylevelID,
                        securitylevel,
                        LastEditDate,
                        CreationDate};
                rowdbo_SecurityLevelsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_SecurityLevelsRow);
                return rowdbo_SecurityLevelsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_SecurityLevelsRow FindBysecuritylevelID(int securitylevelID) {
                return ((dbo_SecurityLevelsRow)(this.Rows.Find(new object[] {
                            securitylevelID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_SecurityLevelsDataTable cln = ((dbo_SecurityLevelsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_SecurityLevelsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsecuritylevelID = base.Columns["securitylevelID"];
                this.columnsecuritylevel = base.Columns["securitylevel"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsecuritylevelID = new global::System.Data.DataColumn("securitylevelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsecuritylevelID);
                this.columnsecuritylevel = new global::System.Data.DataColumn("securitylevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsecuritylevel);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnsecuritylevelID}, true));
                this.columnsecuritylevelID.AllowDBNull = false;
                this.columnsecuritylevelID.Unique = true;
                this.columnsecuritylevel.AllowDBNull = false;
                this.columnsecuritylevel.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_SecurityLevelsRow Newdbo_SecurityLevelsRow() {
                return ((dbo_SecurityLevelsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_SecurityLevelsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_SecurityLevelsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_SecurityLevelsRowChanged != null)) {
                    this.dbo_SecurityLevelsRowChanged(this, new dbo_SecurityLevelsRowChangeEvent(((dbo_SecurityLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_SecurityLevelsRowChanging != null)) {
                    this.dbo_SecurityLevelsRowChanging(this, new dbo_SecurityLevelsRowChangeEvent(((dbo_SecurityLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_SecurityLevelsRowDeleted != null)) {
                    this.dbo_SecurityLevelsRowDeleted(this, new dbo_SecurityLevelsRowChangeEvent(((dbo_SecurityLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_SecurityLevelsRowDeleting != null)) {
                    this.dbo_SecurityLevelsRowDeleting(this, new dbo_SecurityLevelsRowChangeEvent(((dbo_SecurityLevelsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_SecurityLevelsRow(dbo_SecurityLevelsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_SecurityLevelsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_UsersDataTable : global::System.Data.TypedTableBase<dbo_UsersRow> {
            
            private global::System.Data.DataColumn columnuserID;
            
            private global::System.Data.DataColumn columnusername;
            
            private global::System.Data.DataColumn columnpassword;
            
            private global::System.Data.DataColumn columnsecuritylevelID;
            
            private global::System.Data.DataColumn columnenabled;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_UsersDataTable() {
                this.TableName = "dbo_Users";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_UsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_UsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn passwordColumn {
                get {
                    return this.columnpassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn securitylevelIDColumn {
                get {
                    return this.columnsecuritylevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn enabledColumn {
                get {
                    return this.columnenabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_UsersRow this[int index] {
                get {
                    return ((dbo_UsersRow)(this.Rows[index]));
                }
            }
            
            public event dbo_UsersRowChangeEventHandler dbo_UsersRowChanging;
            
            public event dbo_UsersRowChangeEventHandler dbo_UsersRowChanged;
            
            public event dbo_UsersRowChangeEventHandler dbo_UsersRowDeleting;
            
            public event dbo_UsersRowChangeEventHandler dbo_UsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_UsersRow(dbo_UsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_UsersRow Adddbo_UsersRow(string username, string password, int securitylevelID, bool enabled, string Nombre, string email, System.DateTime LastEditDate, System.DateTime CreationDate) {
                dbo_UsersRow rowdbo_UsersRow = ((dbo_UsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        username,
                        password,
                        securitylevelID,
                        enabled,
                        Nombre,
                        email,
                        LastEditDate,
                        CreationDate};
                rowdbo_UsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_UsersRow);
                return rowdbo_UsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_UsersRow FindByuserID(int userID) {
                return ((dbo_UsersRow)(this.Rows.Find(new object[] {
                            userID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_UsersDataTable cln = ((dbo_UsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_UsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuserID = base.Columns["userID"];
                this.columnusername = base.Columns["username"];
                this.columnpassword = base.Columns["password"];
                this.columnsecuritylevelID = base.Columns["securitylevelID"];
                this.columnenabled = base.Columns["enabled"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnemail = base.Columns["email"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuserID = new global::System.Data.DataColumn("userID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columnusername = new global::System.Data.DataColumn("username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnpassword = new global::System.Data.DataColumn("password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassword);
                this.columnsecuritylevelID = new global::System.Data.DataColumn("securitylevelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsecuritylevelID);
                this.columnenabled = new global::System.Data.DataColumn("enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnenabled);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuserID}, true));
                this.columnuserID.AutoIncrement = true;
                this.columnuserID.AutoIncrementSeed = -1;
                this.columnuserID.AutoIncrementStep = -1;
                this.columnuserID.AllowDBNull = false;
                this.columnuserID.ReadOnly = true;
                this.columnuserID.Unique = true;
                this.columnusername.AllowDBNull = false;
                this.columnusername.MaxLength = 10;
                this.columnpassword.AllowDBNull = false;
                this.columnpassword.MaxLength = 50;
                this.columnNombre.MaxLength = 50;
                this.columnemail.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_UsersRow Newdbo_UsersRow() {
                return ((dbo_UsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_UsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_UsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_UsersRowChanged != null)) {
                    this.dbo_UsersRowChanged(this, new dbo_UsersRowChangeEvent(((dbo_UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_UsersRowChanging != null)) {
                    this.dbo_UsersRowChanging(this, new dbo_UsersRowChangeEvent(((dbo_UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_UsersRowDeleted != null)) {
                    this.dbo_UsersRowDeleted(this, new dbo_UsersRowChangeEvent(((dbo_UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_UsersRowDeleting != null)) {
                    this.dbo_UsersRowDeleting(this, new dbo_UsersRowChangeEvent(((dbo_UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_UsersRow(dbo_UsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_UsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_ClienteVenta_BoletasDataTable : global::System.Data.TypedTableBase<dbo_ClienteVenta_BoletasRow> {
            
            private global::System.Data.DataColumn columnclienteBoletaID;
            
            private global::System.Data.DataColumn columnclienteventaID;
            
            private global::System.Data.DataColumn columnBoletaID;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClienteVenta_BoletasDataTable() {
                this.TableName = "dbo_ClienteVenta_Boletas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_ClienteVenta_BoletasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_ClienteVenta_BoletasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clienteBoletaIDColumn {
                get {
                    return this.columnclienteBoletaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clienteventaIDColumn {
                get {
                    return this.columnclienteventaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoletaIDColumn {
                get {
                    return this.columnBoletaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClienteVenta_BoletasRow this[int index] {
                get {
                    return ((dbo_ClienteVenta_BoletasRow)(this.Rows[index]));
                }
            }
            
            public event dbo_ClienteVenta_BoletasRowChangeEventHandler dbo_ClienteVenta_BoletasRowChanging;
            
            public event dbo_ClienteVenta_BoletasRowChangeEventHandler dbo_ClienteVenta_BoletasRowChanged;
            
            public event dbo_ClienteVenta_BoletasRowChangeEventHandler dbo_ClienteVenta_BoletasRowDeleting;
            
            public event dbo_ClienteVenta_BoletasRowChangeEventHandler dbo_ClienteVenta_BoletasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_ClienteVenta_BoletasRow(dbo_ClienteVenta_BoletasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClienteVenta_BoletasRow Adddbo_ClienteVenta_BoletasRow(int clienteventaID, int BoletaID, System.DateTime LastEditDate, System.DateTime CreationDate) {
                dbo_ClienteVenta_BoletasRow rowdbo_ClienteVenta_BoletasRow = ((dbo_ClienteVenta_BoletasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        clienteventaID,
                        BoletaID,
                        LastEditDate,
                        CreationDate};
                rowdbo_ClienteVenta_BoletasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_ClienteVenta_BoletasRow);
                return rowdbo_ClienteVenta_BoletasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClienteVenta_BoletasRow FindByclienteBoletaID(int clienteBoletaID) {
                return ((dbo_ClienteVenta_BoletasRow)(this.Rows.Find(new object[] {
                            clienteBoletaID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_ClienteVenta_BoletasDataTable cln = ((dbo_ClienteVenta_BoletasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_ClienteVenta_BoletasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnclienteBoletaID = base.Columns["clienteBoletaID"];
                this.columnclienteventaID = base.Columns["clienteventaID"];
                this.columnBoletaID = base.Columns["BoletaID"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnclienteBoletaID = new global::System.Data.DataColumn("clienteBoletaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclienteBoletaID);
                this.columnclienteventaID = new global::System.Data.DataColumn("clienteventaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclienteventaID);
                this.columnBoletaID = new global::System.Data.DataColumn("BoletaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoletaID);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnclienteBoletaID}, true));
                this.columnclienteBoletaID.AutoIncrement = true;
                this.columnclienteBoletaID.AutoIncrementSeed = -1;
                this.columnclienteBoletaID.AutoIncrementStep = -1;
                this.columnclienteBoletaID.AllowDBNull = false;
                this.columnclienteBoletaID.ReadOnly = true;
                this.columnclienteBoletaID.Unique = true;
                this.columnclienteventaID.AllowDBNull = false;
                this.columnBoletaID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClienteVenta_BoletasRow Newdbo_ClienteVenta_BoletasRow() {
                return ((dbo_ClienteVenta_BoletasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_ClienteVenta_BoletasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_ClienteVenta_BoletasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_ClienteVenta_BoletasRowChanged != null)) {
                    this.dbo_ClienteVenta_BoletasRowChanged(this, new dbo_ClienteVenta_BoletasRowChangeEvent(((dbo_ClienteVenta_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_ClienteVenta_BoletasRowChanging != null)) {
                    this.dbo_ClienteVenta_BoletasRowChanging(this, new dbo_ClienteVenta_BoletasRowChangeEvent(((dbo_ClienteVenta_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_ClienteVenta_BoletasRowDeleted != null)) {
                    this.dbo_ClienteVenta_BoletasRowDeleted(this, new dbo_ClienteVenta_BoletasRowChangeEvent(((dbo_ClienteVenta_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_ClienteVenta_BoletasRowDeleting != null)) {
                    this.dbo_ClienteVenta_BoletasRowDeleting(this, new dbo_ClienteVenta_BoletasRowChangeEvent(((dbo_ClienteVenta_BoletasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_ClienteVenta_BoletasRow(dbo_ClienteVenta_BoletasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_ClienteVenta_BoletasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dbo_ClientesVentasDataTable : global::System.Data.TypedTableBase<dbo_ClientesVentasRow> {
            
            private global::System.Data.DataColumn columnclienteventaID;
            
            private global::System.Data.DataColumn columnnombre;
            
            private global::System.Data.DataColumn columndomicilio;
            
            private global::System.Data.DataColumn columnciudad;
            
            private global::System.Data.DataColumn columntelefono;
            
            private global::System.Data.DataColumn columnestadoID;
            
            private global::System.Data.DataColumn columnRFC;
            
            private global::System.Data.DataColumn columnuserID;
            
            private global::System.Data.DataColumn columnstoreTS;
            
            private global::System.Data.DataColumn columncolonia;
            
            private global::System.Data.DataColumn columnCP;
            
            private global::System.Data.DataColumn columnLastEditDate;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClientesVentasDataTable() {
                this.TableName = "dbo_ClientesVentas";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_ClientesVentasDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dbo_ClientesVentasDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clienteventaIDColumn {
                get {
                    return this.columnclienteventaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nombreColumn {
                get {
                    return this.columnnombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn domicilioColumn {
                get {
                    return this.columndomicilio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ciudadColumn {
                get {
                    return this.columnciudad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn telefonoColumn {
                get {
                    return this.columntelefono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estadoIDColumn {
                get {
                    return this.columnestadoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFCColumn {
                get {
                    return this.columnRFC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userIDColumn {
                get {
                    return this.columnuserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn storeTSColumn {
                get {
                    return this.columnstoreTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn coloniaColumn {
                get {
                    return this.columncolonia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPColumn {
                get {
                    return this.columnCP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastEditDateColumn {
                get {
                    return this.columnLastEditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClientesVentasRow this[int index] {
                get {
                    return ((dbo_ClientesVentasRow)(this.Rows[index]));
                }
            }
            
            public event dbo_ClientesVentasRowChangeEventHandler dbo_ClientesVentasRowChanging;
            
            public event dbo_ClientesVentasRowChangeEventHandler dbo_ClientesVentasRowChanged;
            
            public event dbo_ClientesVentasRowChangeEventHandler dbo_ClientesVentasRowDeleting;
            
            public event dbo_ClientesVentasRowChangeEventHandler dbo_ClientesVentasRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddbo_ClientesVentasRow(dbo_ClientesVentasRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClientesVentasRow Adddbo_ClientesVentasRow(string nombre, string domicilio, string ciudad, string telefono, int estadoID, string RFC, int userID, System.DateTime storeTS, string colonia, string CP, System.DateTime LastEditDate, System.DateTime CreationDate) {
                dbo_ClientesVentasRow rowdbo_ClientesVentasRow = ((dbo_ClientesVentasRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        nombre,
                        domicilio,
                        ciudad,
                        telefono,
                        estadoID,
                        RFC,
                        userID,
                        storeTS,
                        colonia,
                        CP,
                        LastEditDate,
                        CreationDate};
                rowdbo_ClientesVentasRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdbo_ClientesVentasRow);
                return rowdbo_ClientesVentasRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClientesVentasRow FindByclienteventaID(int clienteventaID) {
                return ((dbo_ClientesVentasRow)(this.Rows.Find(new object[] {
                            clienteventaID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dbo_ClientesVentasDataTable cln = ((dbo_ClientesVentasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dbo_ClientesVentasDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnclienteventaID = base.Columns["clienteventaID"];
                this.columnnombre = base.Columns["nombre"];
                this.columndomicilio = base.Columns["domicilio"];
                this.columnciudad = base.Columns["ciudad"];
                this.columntelefono = base.Columns["telefono"];
                this.columnestadoID = base.Columns["estadoID"];
                this.columnRFC = base.Columns["RFC"];
                this.columnuserID = base.Columns["userID"];
                this.columnstoreTS = base.Columns["storeTS"];
                this.columncolonia = base.Columns["colonia"];
                this.columnCP = base.Columns["CP"];
                this.columnLastEditDate = base.Columns["LastEditDate"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnclienteventaID = new global::System.Data.DataColumn("clienteventaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclienteventaID);
                this.columnnombre = new global::System.Data.DataColumn("nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnombre);
                this.columndomicilio = new global::System.Data.DataColumn("domicilio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndomicilio);
                this.columnciudad = new global::System.Data.DataColumn("ciudad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnciudad);
                this.columntelefono = new global::System.Data.DataColumn("telefono", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelefono);
                this.columnestadoID = new global::System.Data.DataColumn("estadoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestadoID);
                this.columnRFC = new global::System.Data.DataColumn("RFC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFC);
                this.columnuserID = new global::System.Data.DataColumn("userID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserID);
                this.columnstoreTS = new global::System.Data.DataColumn("storeTS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstoreTS);
                this.columncolonia = new global::System.Data.DataColumn("colonia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolonia);
                this.columnCP = new global::System.Data.DataColumn("CP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCP);
                this.columnLastEditDate = new global::System.Data.DataColumn("LastEditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastEditDate);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnclienteventaID}, true));
                this.columnclienteventaID.AutoIncrement = true;
                this.columnclienteventaID.AutoIncrementSeed = -1;
                this.columnclienteventaID.AutoIncrementStep = -1;
                this.columnclienteventaID.AllowDBNull = false;
                this.columnclienteventaID.ReadOnly = true;
                this.columnclienteventaID.Unique = true;
                this.columnnombre.AllowDBNull = false;
                this.columnnombre.MaxLength = 536870911;
                this.columndomicilio.MaxLength = 536870911;
                this.columnciudad.MaxLength = 536870911;
                this.columntelefono.MaxLength = 50;
                this.columnestadoID.AllowDBNull = false;
                this.columnRFC.MaxLength = 50;
                this.columnuserID.AllowDBNull = false;
                this.columnstoreTS.AllowDBNull = false;
                this.columncolonia.MaxLength = 536870911;
                this.columnCP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClientesVentasRow Newdbo_ClientesVentasRow() {
                return ((dbo_ClientesVentasRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dbo_ClientesVentasRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dbo_ClientesVentasRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dbo_ClientesVentasRowChanged != null)) {
                    this.dbo_ClientesVentasRowChanged(this, new dbo_ClientesVentasRowChangeEvent(((dbo_ClientesVentasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dbo_ClientesVentasRowChanging != null)) {
                    this.dbo_ClientesVentasRowChanging(this, new dbo_ClientesVentasRowChangeEvent(((dbo_ClientesVentasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dbo_ClientesVentasRowDeleted != null)) {
                    this.dbo_ClientesVentasRowDeleted(this, new dbo_ClientesVentasRowChangeEvent(((dbo_ClientesVentasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dbo_ClientesVentasRowDeleting != null)) {
                    this.dbo_ClientesVentasRowDeleting(this, new dbo_ClientesVentasRowChangeEvent(((dbo_ClientesVentasRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedbo_ClientesVentasRow(dbo_ClientesVentasRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WSGaribayDataSet ds = new WSGaribayDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dbo_ClientesVentasDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_BoletasRow : global::System.Data.DataRow {
            
            private dbo_BoletasDataTable tabledbo_Boletas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_BoletasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_Boletas = ((dbo_BoletasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int boletaID {
                get {
                    return ((int)(this[this.tabledbo_Boletas.boletaIDColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.boletaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cicloID {
                get {
                    return ((int)(this[this.tabledbo_Boletas.cicloIDColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.cicloIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userID {
                get {
                    return ((int)(this[this.tabledbo_Boletas.userIDColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.userIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int productorID {
                get {
                    return ((int)(this[this.tabledbo_Boletas.productorIDColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.productorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double humedad {
                get {
                    return ((double)(this[this.tabledbo_Boletas.humedadColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.humedadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double dctoHumedad {
                get {
                    return ((double)(this[this.tabledbo_Boletas.dctoHumedadColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.dctoHumedadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double impurezas {
                get {
                    return ((double)(this[this.tabledbo_Boletas.impurezasColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.impurezasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totaldescuentos {
                get {
                    return ((decimal)(this[this.tabledbo_Boletas.totaldescuentosColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.totaldescuentosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pesonetoapagar {
                get {
                    return ((double)(this[this.tabledbo_Boletas.pesonetoapagarColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.pesonetoapagarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal precioapagar {
                get {
                    return ((decimal)(this[this.tabledbo_Boletas.precioapagarColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.precioapagarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal importe {
                get {
                    return ((decimal)(this[this.tabledbo_Boletas.importeColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.importeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string placas {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.placasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'placas\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.placasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string chofer {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.choferColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'chofer\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.choferColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool pagada {
                get {
                    return ((bool)(this[this.tabledbo_Boletas.pagadaColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.pagadaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime storeTS {
                get {
                    return ((global::System.DateTime)(this[this.tabledbo_Boletas.storeTSColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.storeTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updateTS {
                get {
                    return ((global::System.DateTime)(this[this.tabledbo_Boletas.updateTSColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.updateTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int productoID {
                get {
                    return ((int)(this[this.tabledbo_Boletas.productoIDColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.productoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NumeroBoleta {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.NumeroBoletaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumeroBoleta\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.NumeroBoletaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ticket {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.TicketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ticket\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.TicketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codigoClienteProvArchivo {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.codigoClienteProvArchivoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codigoClienteProvArchivo\' in table \'dbo_Boletas\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.codigoClienteProvArchivoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NombreProductor {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.NombreProductorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NombreProductor\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.NombreProductorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaEntrada {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Boletas.FechaEntradaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaEntrada\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.FechaEntradaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PesadorEntrada {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.PesadorEntradaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesadorEntrada\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.PesadorEntradaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PesoDeEntrada {
                get {
                    return ((double)(this[this.tabledbo_Boletas.PesoDeEntradaColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.PesoDeEntradaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BasculaEntrada {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.BasculaEntradaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BasculaEntrada\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.BasculaEntradaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FechaSalida {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Boletas.FechaSalidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FechaSalida\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.FechaSalidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PesoDeSalida {
                get {
                    return ((double)(this[this.tabledbo_Boletas.PesoDeSalidaColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.PesoDeSalidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PesadorSalida {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.PesadorSalidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesadorSalida\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.PesadorSalidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BasculaSalida {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.BasculaSalidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BasculaSalida\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.BasculaSalidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pesonetoentrada {
                get {
                    return ((double)(this[this.tabledbo_Boletas.pesonetoentradaColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.pesonetoentradaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pesonetosalida {
                get {
                    return ((double)(this[this.tabledbo_Boletas.pesonetosalidaColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.pesonetosalidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dctoImpurezas {
                get {
                    return ((decimal)(this[this.tabledbo_Boletas.dctoImpurezasColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.dctoImpurezasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal dctoSecado {
                get {
                    return ((decimal)(this[this.tabledbo_Boletas.dctoSecadoColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.dctoSecadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalapagar {
                get {
                    return ((decimal)(this[this.tabledbo_Boletas.totalapagarColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.totalapagarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int bodegaID {
                get {
                    return ((int)(this[this.tabledbo_Boletas.bodegaIDColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.bodegaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool applyHumedad {
                get {
                    return ((bool)(this[this.tabledbo_Boletas.applyHumedadColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.applyHumedadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool applyImpurezas {
                get {
                    return ((bool)(this[this.tabledbo_Boletas.applyImpurezasColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.applyImpurezasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool applySecado {
                get {
                    return ((bool)(this[this.tabledbo_Boletas.applySecadoColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.applySecadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FolioDestino {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Boletas.FolioDestinoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FolioDestino\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.FolioDestinoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PesoDestino {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.PesoDestinoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PesoDestino\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.PesoDestinoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Merma {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.MermaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Merma\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.MermaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Flete {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.FleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flete\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.FleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ImporteFlete {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.ImporteFleteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImporteFlete\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.ImporteFleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PrecioNetoDestino {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.PrecioNetoDestinoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrecioNetoDestino\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.PrecioNetoDestinoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double dctoGranoChico {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.dctoGranoChicoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dctoGranoChico\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.dctoGranoChicoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double dctoGranoDanado {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.dctoGranoDanadoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dctoGranoDanado\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.dctoGranoDanadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double dctoGranoQuebrado {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.dctoGranoQuebradoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dctoGranoQuebrado\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.dctoGranoQuebradoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double dctoGranoEstrellado {
                get {
                    try {
                        return ((double)(this[this.tabledbo_Boletas.dctoGranoEstrelladoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dctoGranoEstrellado\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.dctoGranoEstrelladoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int transportistaID {
                get {
                    try {
                        return ((int)(this[this.tabledbo_Boletas.transportistaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'transportistaID\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.transportistaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cabezasDeGanado {
                get {
                    return ((int)(this[this.tabledbo_Boletas.cabezasDeGanadoColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.cabezasDeGanadoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool llevaFlete {
                get {
                    return ((bool)(this[this.tabledbo_Boletas.llevaFleteColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.llevaFleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool deGranjaACorrales {
                get {
                    return ((bool)(this[this.tabledbo_Boletas.deGranjaACorralesColumn]));
                }
                set {
                    this[this.tabledbo_Boletas.deGranjaACorralesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Boletas.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Boletas.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_Boletas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Boletas.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsplacasNull() {
                return this.IsNull(this.tabledbo_Boletas.placasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetplacasNull() {
                this[this.tabledbo_Boletas.placasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IschoferNull() {
                return this.IsNull(this.tabledbo_Boletas.choferColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetchoferNull() {
                this[this.tabledbo_Boletas.choferColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroBoletaNull() {
                return this.IsNull(this.tabledbo_Boletas.NumeroBoletaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroBoletaNull() {
                this[this.tabledbo_Boletas.NumeroBoletaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTicketNull() {
                return this.IsNull(this.tabledbo_Boletas.TicketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTicketNull() {
                this[this.tabledbo_Boletas.TicketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodigoClienteProvArchivoNull() {
                return this.IsNull(this.tabledbo_Boletas.codigoClienteProvArchivoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodigoClienteProvArchivoNull() {
                this[this.tabledbo_Boletas.codigoClienteProvArchivoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreProductorNull() {
                return this.IsNull(this.tabledbo_Boletas.NombreProductorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreProductorNull() {
                this[this.tabledbo_Boletas.NombreProductorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaEntradaNull() {
                return this.IsNull(this.tabledbo_Boletas.FechaEntradaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaEntradaNull() {
                this[this.tabledbo_Boletas.FechaEntradaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesadorEntradaNull() {
                return this.IsNull(this.tabledbo_Boletas.PesadorEntradaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesadorEntradaNull() {
                this[this.tabledbo_Boletas.PesadorEntradaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBasculaEntradaNull() {
                return this.IsNull(this.tabledbo_Boletas.BasculaEntradaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBasculaEntradaNull() {
                this[this.tabledbo_Boletas.BasculaEntradaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFechaSalidaNull() {
                return this.IsNull(this.tabledbo_Boletas.FechaSalidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFechaSalidaNull() {
                this[this.tabledbo_Boletas.FechaSalidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesadorSalidaNull() {
                return this.IsNull(this.tabledbo_Boletas.PesadorSalidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesadorSalidaNull() {
                this[this.tabledbo_Boletas.PesadorSalidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBasculaSalidaNull() {
                return this.IsNull(this.tabledbo_Boletas.BasculaSalidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBasculaSalidaNull() {
                this[this.tabledbo_Boletas.BasculaSalidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFolioDestinoNull() {
                return this.IsNull(this.tabledbo_Boletas.FolioDestinoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFolioDestinoNull() {
                this[this.tabledbo_Boletas.FolioDestinoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPesoDestinoNull() {
                return this.IsNull(this.tabledbo_Boletas.PesoDestinoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPesoDestinoNull() {
                this[this.tabledbo_Boletas.PesoDestinoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMermaNull() {
                return this.IsNull(this.tabledbo_Boletas.MermaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMermaNull() {
                this[this.tabledbo_Boletas.MermaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFleteNull() {
                return this.IsNull(this.tabledbo_Boletas.FleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFleteNull() {
                this[this.tabledbo_Boletas.FleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImporteFleteNull() {
                return this.IsNull(this.tabledbo_Boletas.ImporteFleteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImporteFleteNull() {
                this[this.tabledbo_Boletas.ImporteFleteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecioNetoDestinoNull() {
                return this.IsNull(this.tabledbo_Boletas.PrecioNetoDestinoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecioNetoDestinoNull() {
                this[this.tabledbo_Boletas.PrecioNetoDestinoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdctoGranoChicoNull() {
                return this.IsNull(this.tabledbo_Boletas.dctoGranoChicoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdctoGranoChicoNull() {
                this[this.tabledbo_Boletas.dctoGranoChicoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdctoGranoDanadoNull() {
                return this.IsNull(this.tabledbo_Boletas.dctoGranoDanadoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdctoGranoDanadoNull() {
                this[this.tabledbo_Boletas.dctoGranoDanadoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdctoGranoQuebradoNull() {
                return this.IsNull(this.tabledbo_Boletas.dctoGranoQuebradoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdctoGranoQuebradoNull() {
                this[this.tabledbo_Boletas.dctoGranoQuebradoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdctoGranoEstrelladoNull() {
                return this.IsNull(this.tabledbo_Boletas.dctoGranoEstrelladoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdctoGranoEstrelladoNull() {
                this[this.tabledbo_Boletas.dctoGranoEstrelladoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstransportistaIDNull() {
                return this.IsNull(this.tabledbo_Boletas.transportistaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettransportistaIDNull() {
                this[this.tabledbo_Boletas.transportistaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_Boletas.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_Boletas.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_Boletas.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_Boletas.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_gan_ProveedoresRow : global::System.Data.DataRow {
            
            private dbo_gan_ProveedoresDataTable tabledbo_gan_Proveedores;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_gan_ProveedoresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_gan_Proveedores = ((dbo_gan_ProveedoresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ganProveedorID {
                get {
                    return ((int)(this[this.tabledbo_gan_Proveedores.ganProveedorIDColumn]));
                }
                set {
                    this[this.tabledbo_gan_Proveedores.ganProveedorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tabledbo_gan_Proveedores.NombreColumn]));
                }
                set {
                    this[this.tabledbo_gan_Proveedores.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string direccion {
                get {
                    try {
                        return ((string)(this[this.tabledbo_gan_Proveedores.direccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'direccion\' in table \'dbo_gan_Proveedores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_gan_Proveedores.direccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledbo_gan_Proveedores.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'dbo_gan_Proveedores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_gan_Proveedores.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int estadoID {
                get {
                    return ((int)(this[this.tabledbo_gan_Proveedores.estadoIDColumn]));
                }
                set {
                    this[this.tabledbo_gan_Proveedores.estadoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userID {
                get {
                    return ((int)(this[this.tabledbo_gan_Proveedores.userIDColumn]));
                }
                set {
                    this[this.tabledbo_gan_Proveedores.userIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RFC {
                get {
                    try {
                        return ((string)(this[this.tabledbo_gan_Proveedores.RFCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFC\' in table \'dbo_gan_Proveedores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_gan_Proveedores.RFCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_gan_Proveedores.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_gan_Proveedores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_gan_Proveedores.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_gan_Proveedores.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_gan_Proveedores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_gan_Proveedores.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdireccionNull() {
                return this.IsNull(this.tabledbo_gan_Proveedores.direccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdireccionNull() {
                this[this.tabledbo_gan_Proveedores.direccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledbo_gan_Proveedores.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledbo_gan_Proveedores.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFCNull() {
                return this.IsNull(this.tabledbo_gan_Proveedores.RFCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFCNull() {
                this[this.tabledbo_gan_Proveedores.RFCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_gan_Proveedores.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_gan_Proveedores.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_gan_Proveedores.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_gan_Proveedores.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_gan_Proveedores_BoletasRow : global::System.Data.DataRow {
            
            private dbo_gan_Proveedores_BoletasDataTable tabledbo_gan_Proveedores_Boletas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_gan_Proveedores_BoletasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_gan_Proveedores_Boletas = ((dbo_gan_Proveedores_BoletasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ganProveedorID {
                get {
                    return ((int)(this[this.tabledbo_gan_Proveedores_Boletas.ganProveedorIDColumn]));
                }
                set {
                    this[this.tabledbo_gan_Proveedores_Boletas.ganProveedorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int boletaID {
                get {
                    return ((int)(this[this.tabledbo_gan_Proveedores_Boletas.boletaIDColumn]));
                }
                set {
                    this[this.tabledbo_gan_Proveedores_Boletas.boletaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_gan_Proveedores_Boletas.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_gan_Proveedores_Boletas\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledbo_gan_Proveedores_Boletas.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_gan_Proveedores_Boletas.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_gan_Proveedores_Boletas\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabledbo_gan_Proveedores_Boletas.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_gan_Proveedores_Boletas.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_gan_Proveedores_Boletas.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_gan_Proveedores_Boletas.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_gan_Proveedores_Boletas.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_ProductoresRow : global::System.Data.DataRow {
            
            private dbo_ProductoresDataTable tabledbo_Productores;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_ProductoresRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_Productores = ((dbo_ProductoresDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int productorID {
                get {
                    return ((int)(this[this.tabledbo_Productores.productorIDColumn]));
                }
                set {
                    this[this.tabledbo_Productores.productorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apaterno {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.apaternoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'apaterno\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.apaternoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string amaterno {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.amaternoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amaterno\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.amaternoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    return ((string)(this[this.tabledbo_Productores.nombreColumn]));
                }
                set {
                    this[this.tabledbo_Productores.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime fechanacimiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Productores.fechanacimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fechanacimiento\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.fechanacimientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IFE {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.IFEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IFE\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.IFEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURP {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.CURPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CURP\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.CURPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string domicilio {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.domicilioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'domicilio\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.domicilioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string poblacion {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.poblacionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'poblacion\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.poblacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string municipio {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.municipioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'municipio\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.municipioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int estadoID {
                get {
                    return ((int)(this[this.tabledbo_Productores.estadoIDColumn]));
                }
                set {
                    this[this.tabledbo_Productores.estadoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CP {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.CPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CP\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.CPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RFC {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.RFCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFC\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.RFCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sexoID {
                get {
                    return ((int)(this[this.tabledbo_Productores.sexoIDColumn]));
                }
                set {
                    this[this.tabledbo_Productores.sexoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string telefono {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.telefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'telefono\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.telefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string telefonotrabajo {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.telefonotrabajoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'telefonotrabajo\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.telefonotrabajoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string celular {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.celularColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'celular\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.celularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fax\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int estadocivilID {
                get {
                    return ((int)(this[this.tabledbo_Productores.estadocivilIDColumn]));
                }
                set {
                    this[this.tabledbo_Productores.estadocivilIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int regimenID {
                get {
                    try {
                        return ((int)(this[this.tabledbo_Productores.regimenIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regimenID\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.regimenIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codigoBoletasFile {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.codigoBoletasFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codigoBoletasFile\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.codigoBoletasFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime storeTS {
                get {
                    return ((global::System.DateTime)(this[this.tabledbo_Productores.storeTSColumn]));
                }
                set {
                    this[this.tabledbo_Productores.storeTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updateTS {
                get {
                    return ((global::System.DateTime)(this[this.tabledbo_Productores.updateTSColumn]));
                }
                set {
                    this[this.tabledbo_Productores.updateTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string colonia {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.coloniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'colonia\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.coloniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string conyugue {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productores.conyugueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conyugue\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.conyugueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Productores.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Productores.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_Productores\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productores.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapaternoNull() {
                return this.IsNull(this.tabledbo_Productores.apaternoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapaternoNull() {
                this[this.tabledbo_Productores.apaternoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamaternoNull() {
                return this.IsNull(this.tabledbo_Productores.amaternoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamaternoNull() {
                this[this.tabledbo_Productores.amaternoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfechanacimientoNull() {
                return this.IsNull(this.tabledbo_Productores.fechanacimientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfechanacimientoNull() {
                this[this.tabledbo_Productores.fechanacimientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIFENull() {
                return this.IsNull(this.tabledbo_Productores.IFEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIFENull() {
                this[this.tabledbo_Productores.IFEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCURPNull() {
                return this.IsNull(this.tabledbo_Productores.CURPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCURPNull() {
                this[this.tabledbo_Productores.CURPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdomicilioNull() {
                return this.IsNull(this.tabledbo_Productores.domicilioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdomicilioNull() {
                this[this.tabledbo_Productores.domicilioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspoblacionNull() {
                return this.IsNull(this.tabledbo_Productores.poblacionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpoblacionNull() {
                this[this.tabledbo_Productores.poblacionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmunicipioNull() {
                return this.IsNull(this.tabledbo_Productores.municipioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmunicipioNull() {
                this[this.tabledbo_Productores.municipioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPNull() {
                return this.IsNull(this.tabledbo_Productores.CPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPNull() {
                this[this.tabledbo_Productores.CPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFCNull() {
                return this.IsNull(this.tabledbo_Productores.RFCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFCNull() {
                this[this.tabledbo_Productores.RFCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstelefonoNull() {
                return this.IsNull(this.tabledbo_Productores.telefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettelefonoNull() {
                this[this.tabledbo_Productores.telefonoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstelefonotrabajoNull() {
                return this.IsNull(this.tabledbo_Productores.telefonotrabajoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettelefonotrabajoNull() {
                this[this.tabledbo_Productores.telefonotrabajoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscelularNull() {
                return this.IsNull(this.tabledbo_Productores.celularColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcelularNull() {
                this[this.tabledbo_Productores.celularColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxNull() {
                return this.IsNull(this.tabledbo_Productores.faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxNull() {
                this[this.tabledbo_Productores.faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tabledbo_Productores.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tabledbo_Productores.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsregimenIDNull() {
                return this.IsNull(this.tabledbo_Productores.regimenIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetregimenIDNull() {
                this[this.tabledbo_Productores.regimenIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodigoBoletasFileNull() {
                return this.IsNull(this.tabledbo_Productores.codigoBoletasFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodigoBoletasFileNull() {
                this[this.tabledbo_Productores.codigoBoletasFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoloniaNull() {
                return this.IsNull(this.tabledbo_Productores.coloniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoloniaNull() {
                this[this.tabledbo_Productores.coloniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsconyugueNull() {
                return this.IsNull(this.tabledbo_Productores.conyugueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetconyugueNull() {
                this[this.tabledbo_Productores.conyugueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_Productores.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_Productores.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_Productores.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_Productores.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_ProductosRow : global::System.Data.DataRow {
            
            private dbo_ProductosDataTable tabledbo_Productos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_ProductosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_Productos = ((dbo_ProductosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int productoID {
                get {
                    return ((int)(this[this.tabledbo_Productos.productoIDColumn]));
                }
                set {
                    this[this.tabledbo_Productos.productoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tabledbo_Productos.NombreColumn]));
                }
                set {
                    this[this.tabledbo_Productos.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codigo {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productos.codigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codigo\' in table \'dbo_Productos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productos.codigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descripcion {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productos.descripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descripcion\' in table \'dbo_Productos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productos.descripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double precio1 {
                get {
                    return ((double)(this[this.tabledbo_Productos.precio1Column]));
                }
                set {
                    this[this.tabledbo_Productos.precio1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double precio2 {
                get {
                    return ((double)(this[this.tabledbo_Productos.precio2Column]));
                }
                set {
                    this[this.tabledbo_Productos.precio2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double precio3 {
                get {
                    return ((double)(this[this.tabledbo_Productos.precio3Column]));
                }
                set {
                    this[this.tabledbo_Productos.precio3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double precio4 {
                get {
                    return ((double)(this[this.tabledbo_Productos.precio4Column]));
                }
                set {
                    this[this.tabledbo_Productos.precio4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime storeTS {
                get {
                    return ((global::System.DateTime)(this[this.tabledbo_Productos.storeTSColumn]));
                }
                set {
                    this[this.tabledbo_Productos.storeTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updateTS {
                get {
                    return ((global::System.DateTime)(this[this.tabledbo_Productos.updateTSColumn]));
                }
                set {
                    this[this.tabledbo_Productos.updateTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int unidadID {
                get {
                    return ((int)(this[this.tabledbo_Productos.unidadIDColumn]));
                }
                set {
                    this[this.tabledbo_Productos.unidadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int presentacionID {
                get {
                    return ((int)(this[this.tabledbo_Productos.presentacionIDColumn]));
                }
                set {
                    this[this.tabledbo_Productos.presentacionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codigoBascula {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Productos.codigoBasculaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codigoBascula\' in table \'dbo_Productos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productos.codigoBasculaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int productoGrupoID {
                get {
                    try {
                        return ((int)(this[this.tabledbo_Productos.productoGrupoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'productoGrupoID\' in table \'dbo_Productos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productos.productoGrupoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int casaagricolaID {
                get {
                    try {
                        return ((int)(this[this.tabledbo_Productos.casaagricolaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'casaagricolaID\' in table \'dbo_Productos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productos.casaagricolaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Productos.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_Productos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productos.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Productos.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_Productos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Productos.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodigoNull() {
                return this.IsNull(this.tabledbo_Productos.codigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodigoNull() {
                this[this.tabledbo_Productos.codigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescripcionNull() {
                return this.IsNull(this.tabledbo_Productos.descripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescripcionNull() {
                this[this.tabledbo_Productos.descripcionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodigoBasculaNull() {
                return this.IsNull(this.tabledbo_Productos.codigoBasculaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodigoBasculaNull() {
                this[this.tabledbo_Productos.codigoBasculaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsproductoGrupoIDNull() {
                return this.IsNull(this.tabledbo_Productos.productoGrupoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetproductoGrupoIDNull() {
                this[this.tabledbo_Productos.productoGrupoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscasaagricolaIDNull() {
                return this.IsNull(this.tabledbo_Productos.casaagricolaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcasaagricolaIDNull() {
                this[this.tabledbo_Productos.casaagricolaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_Productos.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_Productos.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_Productos.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_Productos.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_SecurityLevelsRow : global::System.Data.DataRow {
            
            private dbo_SecurityLevelsDataTable tabledbo_SecurityLevels;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_SecurityLevelsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_SecurityLevels = ((dbo_SecurityLevelsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int securitylevelID {
                get {
                    return ((int)(this[this.tabledbo_SecurityLevels.securitylevelIDColumn]));
                }
                set {
                    this[this.tabledbo_SecurityLevels.securitylevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string securitylevel {
                get {
                    return ((string)(this[this.tabledbo_SecurityLevels.securitylevelColumn]));
                }
                set {
                    this[this.tabledbo_SecurityLevels.securitylevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_SecurityLevels.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_SecurityLevels\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_SecurityLevels.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_SecurityLevels.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_SecurityLevels\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_SecurityLevels.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_SecurityLevels.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_SecurityLevels.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_SecurityLevels.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_SecurityLevels.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_UsersRow : global::System.Data.DataRow {
            
            private dbo_UsersDataTable tabledbo_Users;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_UsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_Users = ((dbo_UsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userID {
                get {
                    return ((int)(this[this.tabledbo_Users.userIDColumn]));
                }
                set {
                    this[this.tabledbo_Users.userIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    return ((string)(this[this.tabledbo_Users.usernameColumn]));
                }
                set {
                    this[this.tabledbo_Users.usernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string password {
                get {
                    return ((string)(this[this.tabledbo_Users.passwordColumn]));
                }
                set {
                    this[this.tabledbo_Users.passwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int securitylevelID {
                get {
                    try {
                        return ((int)(this[this.tabledbo_Users.securitylevelIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'securitylevelID\' in table \'dbo_Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Users.securitylevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool enabled {
                get {
                    try {
                        return ((bool)(this[this.tabledbo_Users.enabledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'enabled\' in table \'dbo_Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Users.enabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Users.NombreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nombre\' in table \'dbo_Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Users.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tabledbo_Users.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'dbo_Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Users.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Users.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Users.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_Users.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_Users\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_Users.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssecuritylevelIDNull() {
                return this.IsNull(this.tabledbo_Users.securitylevelIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsecuritylevelIDNull() {
                this[this.tabledbo_Users.securitylevelIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsenabledNull() {
                return this.IsNull(this.tabledbo_Users.enabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetenabledNull() {
                this[this.tabledbo_Users.enabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tabledbo_Users.NombreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tabledbo_Users.NombreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tabledbo_Users.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tabledbo_Users.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_Users.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_Users.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_Users.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_Users.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_ClienteVenta_BoletasRow : global::System.Data.DataRow {
            
            private dbo_ClienteVenta_BoletasDataTable tabledbo_ClienteVenta_Boletas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_ClienteVenta_BoletasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_ClienteVenta_Boletas = ((dbo_ClienteVenta_BoletasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int clienteBoletaID {
                get {
                    return ((int)(this[this.tabledbo_ClienteVenta_Boletas.clienteBoletaIDColumn]));
                }
                set {
                    this[this.tabledbo_ClienteVenta_Boletas.clienteBoletaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int clienteventaID {
                get {
                    return ((int)(this[this.tabledbo_ClienteVenta_Boletas.clienteventaIDColumn]));
                }
                set {
                    this[this.tabledbo_ClienteVenta_Boletas.clienteventaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BoletaID {
                get {
                    return ((int)(this[this.tabledbo_ClienteVenta_Boletas.BoletaIDColumn]));
                }
                set {
                    this[this.tabledbo_ClienteVenta_Boletas.BoletaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_ClienteVenta_Boletas.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_ClienteVenta_Boletas\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledbo_ClienteVenta_Boletas.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_ClienteVenta_Boletas.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_ClienteVenta_Boletas\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledbo_ClienteVenta_Boletas.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_ClienteVenta_Boletas.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_ClienteVenta_Boletas.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_ClienteVenta_Boletas.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_ClienteVenta_Boletas.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dbo_ClientesVentasRow : global::System.Data.DataRow {
            
            private dbo_ClientesVentasDataTable tabledbo_ClientesVentas;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dbo_ClientesVentasRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledbo_ClientesVentas = ((dbo_ClientesVentasDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int clienteventaID {
                get {
                    return ((int)(this[this.tabledbo_ClientesVentas.clienteventaIDColumn]));
                }
                set {
                    this[this.tabledbo_ClientesVentas.clienteventaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nombre {
                get {
                    return ((string)(this[this.tabledbo_ClientesVentas.nombreColumn]));
                }
                set {
                    this[this.tabledbo_ClientesVentas.nombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string domicilio {
                get {
                    try {
                        return ((string)(this[this.tabledbo_ClientesVentas.domicilioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'domicilio\' in table \'dbo_ClientesVentas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_ClientesVentas.domicilioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ciudad {
                get {
                    try {
                        return ((string)(this[this.tabledbo_ClientesVentas.ciudadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ciudad\' in table \'dbo_ClientesVentas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_ClientesVentas.ciudadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string telefono {
                get {
                    try {
                        return ((string)(this[this.tabledbo_ClientesVentas.telefonoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'telefono\' in table \'dbo_ClientesVentas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_ClientesVentas.telefonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int estadoID {
                get {
                    return ((int)(this[this.tabledbo_ClientesVentas.estadoIDColumn]));
                }
                set {
                    this[this.tabledbo_ClientesVentas.estadoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RFC {
                get {
                    try {
                        return ((string)(this[this.tabledbo_ClientesVentas.RFCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFC\' in table \'dbo_ClientesVentas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_ClientesVentas.RFCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userID {
                get {
                    return ((int)(this[this.tabledbo_ClientesVentas.userIDColumn]));
                }
                set {
                    this[this.tabledbo_ClientesVentas.userIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime storeTS {
                get {
                    return ((global::System.DateTime)(this[this.tabledbo_ClientesVentas.storeTSColumn]));
                }
                set {
                    this[this.tabledbo_ClientesVentas.storeTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string colonia {
                get {
                    try {
                        return ((string)(this[this.tabledbo_ClientesVentas.coloniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'colonia\' in table \'dbo_ClientesVentas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_ClientesVentas.coloniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CP {
                get {
                    try {
                        return ((string)(this[this.tabledbo_ClientesVentas.CPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CP\' in table \'dbo_ClientesVentas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_ClientesVentas.CPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastEditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_ClientesVentas.LastEditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastEditDate\' in table \'dbo_ClientesVentas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_ClientesVentas.LastEditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledbo_ClientesVentas.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'dbo_ClientesVentas\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledbo_ClientesVentas.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdomicilioNull() {
                return this.IsNull(this.tabledbo_ClientesVentas.domicilioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdomicilioNull() {
                this[this.tabledbo_ClientesVentas.domicilioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsciudadNull() {
                return this.IsNull(this.tabledbo_ClientesVentas.ciudadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetciudadNull() {
                this[this.tabledbo_ClientesVentas.ciudadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstelefonoNull() {
                return this.IsNull(this.tabledbo_ClientesVentas.telefonoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettelefonoNull() {
                this[this.tabledbo_ClientesVentas.telefonoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFCNull() {
                return this.IsNull(this.tabledbo_ClientesVentas.RFCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFCNull() {
                this[this.tabledbo_ClientesVentas.RFCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscoloniaNull() {
                return this.IsNull(this.tabledbo_ClientesVentas.coloniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcoloniaNull() {
                this[this.tabledbo_ClientesVentas.coloniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPNull() {
                return this.IsNull(this.tabledbo_ClientesVentas.CPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPNull() {
                this[this.tabledbo_ClientesVentas.CPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastEditDateNull() {
                return this.IsNull(this.tabledbo_ClientesVentas.LastEditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastEditDateNull() {
                this[this.tabledbo_ClientesVentas.LastEditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabledbo_ClientesVentas.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabledbo_ClientesVentas.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_BoletasRowChangeEvent : global::System.EventArgs {
            
            private dbo_BoletasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_BoletasRowChangeEvent(dbo_BoletasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_BoletasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_gan_ProveedoresRowChangeEvent : global::System.EventArgs {
            
            private dbo_gan_ProveedoresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_ProveedoresRowChangeEvent(dbo_gan_ProveedoresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_ProveedoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_gan_Proveedores_BoletasRowChangeEvent : global::System.EventArgs {
            
            private dbo_gan_Proveedores_BoletasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_Proveedores_BoletasRowChangeEvent(dbo_gan_Proveedores_BoletasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_gan_Proveedores_BoletasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_ProductoresRowChangeEvent : global::System.EventArgs {
            
            private dbo_ProductoresRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductoresRowChangeEvent(dbo_ProductoresRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_ProductosRowChangeEvent : global::System.EventArgs {
            
            private dbo_ProductosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductosRowChangeEvent(dbo_ProductosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ProductosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_SecurityLevelsRowChangeEvent : global::System.EventArgs {
            
            private dbo_SecurityLevelsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_SecurityLevelsRowChangeEvent(dbo_SecurityLevelsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_SecurityLevelsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_UsersRowChangeEvent : global::System.EventArgs {
            
            private dbo_UsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_UsersRowChangeEvent(dbo_UsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_UsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_ClienteVenta_BoletasRowChangeEvent : global::System.EventArgs {
            
            private dbo_ClienteVenta_BoletasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClienteVenta_BoletasRowChangeEvent(dbo_ClienteVenta_BoletasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClienteVenta_BoletasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dbo_ClientesVentasRowChangeEvent : global::System.EventArgs {
            
            private dbo_ClientesVentasRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClientesVentasRowChangeEvent(dbo_ClientesVentasRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dbo_ClientesVentasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace BasculaGaribay.WSGaribayDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_BoletasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_BoletasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_Boletas";
            tableMapping.ColumnMappings.Add("boletaID", "boletaID");
            tableMapping.ColumnMappings.Add("cicloID", "cicloID");
            tableMapping.ColumnMappings.Add("userID", "userID");
            tableMapping.ColumnMappings.Add("productorID", "productorID");
            tableMapping.ColumnMappings.Add("humedad", "humedad");
            tableMapping.ColumnMappings.Add("dctoHumedad", "dctoHumedad");
            tableMapping.ColumnMappings.Add("impurezas", "impurezas");
            tableMapping.ColumnMappings.Add("totaldescuentos", "totaldescuentos");
            tableMapping.ColumnMappings.Add("pesonetoapagar", "pesonetoapagar");
            tableMapping.ColumnMappings.Add("precioapagar", "precioapagar");
            tableMapping.ColumnMappings.Add("importe", "importe");
            tableMapping.ColumnMappings.Add("placas", "placas");
            tableMapping.ColumnMappings.Add("chofer", "chofer");
            tableMapping.ColumnMappings.Add("pagada", "pagada");
            tableMapping.ColumnMappings.Add("storeTS", "storeTS");
            tableMapping.ColumnMappings.Add("updateTS", "updateTS");
            tableMapping.ColumnMappings.Add("productoID", "productoID");
            tableMapping.ColumnMappings.Add("NumeroBoleta", "NumeroBoleta");
            tableMapping.ColumnMappings.Add("Ticket", "Ticket");
            tableMapping.ColumnMappings.Add("codigoClienteProvArchivo", "codigoClienteProvArchivo");
            tableMapping.ColumnMappings.Add("NombreProductor", "NombreProductor");
            tableMapping.ColumnMappings.Add("FechaEntrada", "FechaEntrada");
            tableMapping.ColumnMappings.Add("PesadorEntrada", "PesadorEntrada");
            tableMapping.ColumnMappings.Add("PesoDeEntrada", "PesoDeEntrada");
            tableMapping.ColumnMappings.Add("BasculaEntrada", "BasculaEntrada");
            tableMapping.ColumnMappings.Add("FechaSalida", "FechaSalida");
            tableMapping.ColumnMappings.Add("PesoDeSalida", "PesoDeSalida");
            tableMapping.ColumnMappings.Add("PesadorSalida", "PesadorSalida");
            tableMapping.ColumnMappings.Add("BasculaSalida", "BasculaSalida");
            tableMapping.ColumnMappings.Add("pesonetoentrada", "pesonetoentrada");
            tableMapping.ColumnMappings.Add("pesonetosalida", "pesonetosalida");
            tableMapping.ColumnMappings.Add("dctoImpurezas", "dctoImpurezas");
            tableMapping.ColumnMappings.Add("dctoSecado", "dctoSecado");
            tableMapping.ColumnMappings.Add("totalapagar", "totalapagar");
            tableMapping.ColumnMappings.Add("bodegaID", "bodegaID");
            tableMapping.ColumnMappings.Add("applyHumedad", "applyHumedad");
            tableMapping.ColumnMappings.Add("applyImpurezas", "applyImpurezas");
            tableMapping.ColumnMappings.Add("applySecado", "applySecado");
            tableMapping.ColumnMappings.Add("FolioDestino", "FolioDestino");
            tableMapping.ColumnMappings.Add("PesoDestino", "PesoDestino");
            tableMapping.ColumnMappings.Add("Merma", "Merma");
            tableMapping.ColumnMappings.Add("Flete", "Flete");
            tableMapping.ColumnMappings.Add("ImporteFlete", "ImporteFlete");
            tableMapping.ColumnMappings.Add("PrecioNetoDestino", "PrecioNetoDestino");
            tableMapping.ColumnMappings.Add("dctoGranoChico", "dctoGranoChico");
            tableMapping.ColumnMappings.Add("dctoGranoDanado", "dctoGranoDanado");
            tableMapping.ColumnMappings.Add("dctoGranoQuebrado", "dctoGranoQuebrado");
            tableMapping.ColumnMappings.Add("dctoGranoEstrellado", "dctoGranoEstrellado");
            tableMapping.ColumnMappings.Add("transportistaID", "transportistaID");
            tableMapping.ColumnMappings.Add("cabezasDeGanado", "cabezasDeGanado");
            tableMapping.ColumnMappings.Add("llevaFlete", "llevaFlete");
            tableMapping.ColumnMappings.Add("deGranjaACorrales", "deGranjaACorrales");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_Boletas] WHERE (([boletaID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "boletaID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo_Boletas] ([cicloID], [userID], [productorID], [humedad], [dctoHumedad], [impurezas], [totaldescuentos], [pesonetoapagar], [precioapagar], [importe], [placas], [chofer], [pagada], [storeTS], [updateTS], [productoID], [NumeroBoleta], [Ticket], [codigoClienteProvArchivo], [NombreProductor], [FechaEntrada], [PesadorEntrada], [PesoDeEntrada], [BasculaEntrada], [FechaSalida], [PesoDeSalida], [PesadorSalida], [BasculaSalida], [pesonetoentrada], [pesonetosalida], [dctoImpurezas], [dctoSecado], [totalapagar], [bodegaID], [applyHumedad], [applyImpurezas], [applySecado], [FolioDestino], [PesoDestino], [Merma], [Flete], [ImporteFlete], [PrecioNetoDestino], [dctoGranoChico], [dctoGranoDanado], [dctoGranoQuebrado], [dctoGranoEstrellado], [transportistaID], [cabezasDeGanado], [llevaFlete], [deGranjaACorrales], [LastEditDate], [CreationDate]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p49, @p50, @p51, @p52, @p53)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "cicloID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "userID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productorID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "humedad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoHumedad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "impurezas", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "totaldescuentos", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "pesonetoapagar", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precioapagar", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "importe", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "placas", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "chofer", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "pagada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "storeTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "updateTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "NumeroBoleta", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Ticket", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p19", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "codigoClienteProvArchivo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p20", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "NombreProductor", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p21", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FechaEntrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p22", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesadorEntrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p23", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesoDeEntrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p24", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "BasculaEntrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p25", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FechaSalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p26", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesoDeSalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p27", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesadorSalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p28", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "BasculaSalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p29", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "pesonetoentrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p30", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "pesonetosalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p31", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoImpurezas", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p32", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoSecado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p33", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "totalapagar", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p34", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "bodegaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p35", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "applyHumedad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p36", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "applyImpurezas", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p37", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "applySecado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p38", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FolioDestino", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p39", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesoDestino", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p40", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Merma", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p41", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Flete", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p42", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ImporteFlete", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p43", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PrecioNetoDestino", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p44", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoGranoChico", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p45", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoGranoDanado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p46", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoGranoQuebrado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p47", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoGranoEstrellado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p48", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "transportistaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p49", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "cabezasDeGanado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p50", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "llevaFlete", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p51", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "deGranjaACorrales", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p52", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p53", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo_Boletas] SET [cicloID] = @p1, [userID] = @p2, [productorID] = @p3, [humedad] = @p4, [dctoHumedad] = @p5, [impurezas] = @p6, [totaldescuentos] = @p7, [pesonetoapagar] = @p8, [precioapagar] = @p9, [importe] = @p10, [placas] = @p11, [chofer] = @p12, [pagada] = @p13, [storeTS] = @p14, [updateTS] = @p15, [productoID] = @p16, [NumeroBoleta] = @p17, [Ticket] = @p18, [codigoClienteProvArchivo] = @p19, [NombreProductor] = @p20, [FechaEntrada] = @p21, [PesadorEntrada] = @p22, [PesoDeEntrada] = @p23, [BasculaEntrada] = @p24, [FechaSalida] = @p25, [PesoDeSalida] = @p26, [PesadorSalida] = @p27, [BasculaSalida] = @p28, [pesonetoentrada] = @p29, [pesonetosalida] = @p30, [dctoImpurezas] = @p31, [dctoSecado] = @p32, [totalapagar] = @p33, [bodegaID] = @p34, [applyHumedad] = @p35, [applyImpurezas] = @p36, [applySecado] = @p37, [FolioDestino] = @p38, [PesoDestino] = @p39, [Merma] = @p40, [Flete] = @p41, [ImporteFlete] = @p42, [PrecioNetoDestino] = @p43, [dctoGranoChico] = @p44, [dctoGranoDanado] = @p45, [dctoGranoQuebrado] = @p46, [dctoGranoEstrellado] = @p47, [transportistaID] = @p48, [cabezasDeGanado] = @p49, [llevaFlete] = @p50, [deGranjaACorrales] = @p51, [LastEditDate] = @p52, [CreationDate] = @p53 WHERE (([boletaID] = @p54))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "cicloID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "userID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productorID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "humedad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoHumedad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "impurezas", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "totaldescuentos", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "pesonetoapagar", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precioapagar", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "importe", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "placas", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "chofer", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "pagada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "storeTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "updateTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "NumeroBoleta", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Ticket", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p19", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "codigoClienteProvArchivo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p20", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "NombreProductor", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p21", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FechaEntrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p22", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesadorEntrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p23", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesoDeEntrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p24", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "BasculaEntrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p25", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FechaSalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p26", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesoDeSalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p27", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesadorSalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p28", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "BasculaSalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p29", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "pesonetoentrada", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p30", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "pesonetosalida", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p31", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoImpurezas", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p32", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoSecado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p33", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "totalapagar", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p34", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "bodegaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p35", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "applyHumedad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p36", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "applyImpurezas", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p37", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "applySecado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p38", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FolioDestino", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p39", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PesoDestino", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p40", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Merma", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p41", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Flete", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p42", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ImporteFlete", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p43", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "PrecioNetoDestino", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p44", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoGranoChico", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p45", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoGranoDanado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p46", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoGranoQuebrado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p47", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "dctoGranoEstrellado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p48", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "transportistaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p49", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "cabezasDeGanado", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p50", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "llevaFlete", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p51", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "deGranjaACorrales", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p52", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p53", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p54", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "boletaID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [boletaID], [cicloID], [userID], [productorID], [humedad], [dctoHumedad], [impurezas], [totaldescuentos], [pesonetoapagar], [precioapagar], [importe], [placas], [chofer], [pagada], [storeTS], [updateTS], [productoID], [NumeroBoleta], [Ticket], [codigoClienteProvArchivo], [NombreProductor], [FechaEntrada], [PesadorEntrada], [PesoDeEntrada], [BasculaEntrada], [FechaSalida], [PesoDeSalida], [PesadorSalida], [BasculaSalida], [pesonetoentrada], [pesonetosalida], [dctoImpurezas], [dctoSecado], [totalapagar], [bodegaID], [applyHumedad], [applyImpurezas], [applySecado], [FolioDestino], [PesoDestino], [Merma], [Flete], [ImporteFlete], [PrecioNetoDestino], [dctoGranoChico], [dctoGranoDanado], [dctoGranoQuebrado], [dctoGranoEstrellado], [transportistaID], [cabezasDeGanado], [llevaFlete], [deGranjaACorrales], [LastEditDate], [CreationDate] FROM [dbo_Boletas]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        dbo_Boletas.boletaID, dbo_Boletas.cicloID, dbo_Boletas.userID, dbo_" +
                "Boletas.productorID, dbo_Boletas.humedad, dbo_Boletas.dctoHumedad, \r\n           " +
                "              dbo_Boletas.impurezas, dbo_Boletas.totaldescuentos, dbo_Boletas.pe" +
                "sonetoapagar, dbo_Boletas.precioapagar, dbo_Boletas.importe, dbo_Boletas.placas," +
                " \r\n                         dbo_Boletas.chofer, dbo_Boletas.pagada, dbo_Boletas." +
                "storeTS, dbo_Boletas.updateTS, dbo_Boletas.productoID, dbo_Boletas.NumeroBoleta," +
                " dbo_Boletas.Ticket, \r\n                         dbo_Boletas.codigoClienteProvArc" +
                "hivo, dbo_Boletas.NombreProductor, dbo_Boletas.FechaEntrada, dbo_Boletas.Pesador" +
                "Entrada, dbo_Boletas.PesoDeEntrada, \r\n                         dbo_Boletas.Bascu" +
                "laEntrada, dbo_Boletas.FechaSalida, dbo_Boletas.PesoDeSalida, dbo_Boletas.Pesado" +
                "rSalida, dbo_Boletas.BasculaSalida, \r\n                         dbo_Boletas.peson" +
                "etoentrada, dbo_Boletas.pesonetosalida, dbo_Boletas.dctoImpurezas, dbo_Boletas.d" +
                "ctoSecado, dbo_Boletas.totalapagar, \r\n                         dbo_Boletas.bodeg" +
                "aID, dbo_Boletas.applyHumedad, dbo_Boletas.applyImpurezas, dbo_Boletas.applySeca" +
                "do, dbo_Boletas.FolioDestino, \r\n                         dbo_Boletas.PesoDestino" +
                ", dbo_Boletas.Merma, dbo_Boletas.Flete, dbo_Boletas.ImporteFlete, dbo_Boletas.Pr" +
                "ecioNetoDestino, dbo_Boletas.dctoGranoChico, \r\n                         dbo_Bole" +
                "tas.dctoGranoDanado, dbo_Boletas.dctoGranoQuebrado, dbo_Boletas.dctoGranoEstrell" +
                "ado, dbo_Boletas.transportistaID, dbo_Boletas.cabezasDeGanado, \r\n               " +
                "          dbo_Boletas.llevaFlete, dbo_Boletas.deGranjaACorrales, dbo_gan_Proveed" +
                "ores_Boletas.ganProveedorID, dbo_ClienteVenta_Boletas.clienteventaID\r\nFROM      " +
                "      dbo_Boletas LEFT OUTER JOIN\r\n                         dbo_gan_Proveedores_" +
                "Boletas ON dbo_Boletas.boletaID = dbo_gan_Proveedores_Boletas.boletaID LEFT OUTE" +
                "R JOIN\r\n                         dbo_ClienteVenta_Boletas ON dbo_Boletas.boletaI" +
                "D = dbo_ClienteVenta_Boletas.BoletaID\r\nWHERE        (dbo_Boletas.boletaID = @bol" +
                "etaID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@boletaID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, true, 0, 0, "boletaID", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[2] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        boletaID\r\nFROM            dbo_Boletas\r\nWHERE        (Ticket = @Tick" +
                "et)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@Ticket", global::System.Data.SqlDbType.NVarChar, 15, global::System.Data.ParameterDirection.Input, true, 0, 0, "Ticket", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[3] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT MAX(boletaID) + 1 FROM dbo_Boletas";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_BoletasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_BoletasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_BoletasDataTable dataTable = new WSGaribayDataSet.dbo_BoletasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBoletaID(WSGaribayDataSet.dbo_BoletasDataTable dataTable, int boletaID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(boletaID));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual WSGaribayDataSet.dbo_BoletasDataTable GetDataByBoletaID(int boletaID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(boletaID));
            WSGaribayDataSet.dbo_BoletasDataTable dataTable = new WSGaribayDataSet.dbo_BoletasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_BoletasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_Boletas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int p1, 
                    int p2, 
                    int p3, 
                    double p4, 
                    double p5, 
                    double p6, 
                    decimal p7, 
                    double p8, 
                    decimal p9, 
                    decimal p10, 
                    string p11, 
                    string p12, 
                    bool p13, 
                    System.DateTime p14, 
                    System.DateTime p15, 
                    int p16, 
                    string p17, 
                    string p18, 
                    string p19, 
                    string p20, 
                    global::System.Nullable<global::System.DateTime> p21, 
                    string p22, 
                    double p23, 
                    string p24, 
                    global::System.Nullable<global::System.DateTime> p25, 
                    double p26, 
                    string p27, 
                    string p28, 
                    double p29, 
                    double p30, 
                    decimal p31, 
                    decimal p32, 
                    decimal p33, 
                    int p34, 
                    bool p35, 
                    bool p36, 
                    bool p37, 
                    string p38, 
                    global::System.Nullable<double> p39, 
                    global::System.Nullable<double> p40, 
                    global::System.Nullable<double> p41, 
                    global::System.Nullable<double> p42, 
                    global::System.Nullable<double> p43, 
                    global::System.Nullable<double> p44, 
                    global::System.Nullable<double> p45, 
                    global::System.Nullable<double> p46, 
                    global::System.Nullable<double> p47, 
                    global::System.Nullable<int> p48, 
                    int p49, 
                    bool p50, 
                    bool p51, 
                    global::System.Nullable<global::System.DateTime> p52, 
                    global::System.Nullable<global::System.DateTime> p53) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(p2));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(p3));
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(p4));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(p5));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(p6));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(p7));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(p8));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(p9));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(p10));
            if ((p11 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(p11));
            }
            if ((p12 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(p12));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(p13));
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(p14));
            this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(p15));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(p16));
            if ((p17 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(p17));
            }
            if ((p18 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(p18));
            }
            if ((p19 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(p19));
            }
            if ((p20 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(p20));
            }
            if ((p21.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(p21.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((p22 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(p22));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((double)(p23));
            if ((p24 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(p24));
            }
            if ((p25.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(p25.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((double)(p26));
            if ((p27 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(p27));
            }
            if ((p28 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(p28));
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((double)(p29));
            this.Adapter.InsertCommand.Parameters[29].Value = ((double)(p30));
            this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(p31));
            this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(p32));
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(p33));
            this.Adapter.InsertCommand.Parameters[33].Value = ((int)(p34));
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(p35));
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(p36));
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(p37));
            if ((p38 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(p38));
            }
            if ((p39.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(p39.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((p40.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(p40.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((p41.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(p41.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((p42.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(p42.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((p43.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((double)(p43.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((p44.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((double)(p44.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((p45.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((double)(p45.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((p46.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((double)(p46.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((p47.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((double)(p47.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((p48.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((int)(p48.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[48].Value = ((int)(p49));
            this.Adapter.InsertCommand.Parameters[49].Value = ((bool)(p50));
            this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(p51));
            if ((p52.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(p52.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((p53.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(p53.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int p1, 
                    int p2, 
                    int p3, 
                    double p4, 
                    double p5, 
                    double p6, 
                    decimal p7, 
                    double p8, 
                    decimal p9, 
                    decimal p10, 
                    string p11, 
                    string p12, 
                    bool p13, 
                    System.DateTime p14, 
                    System.DateTime p15, 
                    int p16, 
                    string p17, 
                    string p18, 
                    string p19, 
                    string p20, 
                    global::System.Nullable<global::System.DateTime> p21, 
                    string p22, 
                    double p23, 
                    string p24, 
                    global::System.Nullable<global::System.DateTime> p25, 
                    double p26, 
                    string p27, 
                    string p28, 
                    double p29, 
                    double p30, 
                    decimal p31, 
                    decimal p32, 
                    decimal p33, 
                    int p34, 
                    bool p35, 
                    bool p36, 
                    bool p37, 
                    string p38, 
                    global::System.Nullable<double> p39, 
                    global::System.Nullable<double> p40, 
                    global::System.Nullable<double> p41, 
                    global::System.Nullable<double> p42, 
                    global::System.Nullable<double> p43, 
                    global::System.Nullable<double> p44, 
                    global::System.Nullable<double> p45, 
                    global::System.Nullable<double> p46, 
                    global::System.Nullable<double> p47, 
                    global::System.Nullable<int> p48, 
                    int p49, 
                    bool p50, 
                    bool p51, 
                    global::System.Nullable<global::System.DateTime> p52, 
                    global::System.Nullable<global::System.DateTime> p53, 
                    int p54) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(p2));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(p3));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(p4));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(p5));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(p6));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(p7));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(p8));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(p9));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(p10));
            if ((p11 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(p11));
            }
            if ((p12 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(p12));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(p13));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(p14));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(p15));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(p16));
            if ((p17 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(p17));
            }
            if ((p18 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(p18));
            }
            if ((p19 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(p19));
            }
            if ((p20 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(p20));
            }
            if ((p21.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(p21.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((p22 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(p22));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(p23));
            if ((p24 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(p24));
            }
            if ((p25.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(p25.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(p26));
            if ((p27 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(p27));
            }
            if ((p28 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(p28));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(p29));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(p30));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(p31));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(p32));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(p33));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(p34));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(p35));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(p36));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(p37));
            if ((p38 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(p38));
            }
            if ((p39.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(p39.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((p40.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(p40.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((p41.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(p41.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((p42.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(p42.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((p43.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(p43.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((p44.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(p44.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((p45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(p45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((p46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(p46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((p47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(p47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((p48.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(p48.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(p49));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(p50));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(p51));
            if ((p52.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(p52.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((p53.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(p53.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(p54));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetBoletaIDFromTicket(string Ticket) {
            global::System.Data.SqlServerCe.SqlCeCommand command = this.CommandCollection[2];
            if ((Ticket == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Ticket));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetNextBoletaID() {
            global::System.Data.SqlServerCe.SqlCeCommand command = this.CommandCollection[3];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_gan_ProveedoresTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_gan_ProveedoresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_gan_Proveedores";
            tableMapping.ColumnMappings.Add("ganProveedorID", "ganProveedorID");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("direccion", "direccion");
            tableMapping.ColumnMappings.Add("ciudad", "ciudad");
            tableMapping.ColumnMappings.Add("estadoID", "estadoID");
            tableMapping.ColumnMappings.Add("userID", "userID");
            tableMapping.ColumnMappings.Add("RFC", "RFC");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_gan_Proveedores] WHERE (([ganProveedorID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ganProveedorID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo_gan_Proveedores] ([Nombre], [direccion], [ciudad], [estadoID], [" +
                "userID], [RFC], [LastEditDate], [CreationDate]) VALUES (@p1, @p2, @p3, @p4, @p5," +
                " @p6, @p7, @p8)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "direccion", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ciudad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "estadoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "userID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "RFC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo_gan_Proveedores] SET [Nombre] = @p1, [direccion] = @p2, [ciudad] = @p" +
                "3, [estadoID] = @p4, [userID] = @p5, [RFC] = @p6, [LastEditDate] = @p7, [Creatio" +
                "nDate] = @p8 WHERE (([ganProveedorID] = @p9))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "direccion", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ciudad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "estadoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "userID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "RFC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ganProveedorID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [ganProveedorID], [Nombre], [direccion], [ciudad], [estadoID], [userID], [" +
                "RFC], [LastEditDate], [CreationDate] FROM [dbo_gan_Proveedores]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_gan_ProveedoresDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_gan_ProveedoresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_gan_ProveedoresDataTable dataTable = new WSGaribayDataSet.dbo_gan_ProveedoresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_gan_ProveedoresDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_gan_Proveedores");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string p1, string p2, string p3, int p4, int p5, string p6, global::System.Nullable<global::System.DateTime> p7, global::System.Nullable<global::System.DateTime> p8) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(p4));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(p5));
            if ((p6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(p7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(p8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p1, string p2, string p3, int p4, int p5, string p6, global::System.Nullable<global::System.DateTime> p7, global::System.Nullable<global::System.DateTime> p8, int p9) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(p4));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(p5));
            if ((p6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(p8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(p9));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_gan_Proveedores_BoletasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_gan_Proveedores_BoletasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_gan_Proveedores_Boletas";
            tableMapping.ColumnMappings.Add("ganProveedorID", "ganProveedorID");
            tableMapping.ColumnMappings.Add("boletaID", "boletaID");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_gan_Proveedores_Boletas] WHERE (([ganProveedorID] = @p1) AND ([b" +
                "oletaID] = @p2))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ganProveedorID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "boletaID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo_gan_Proveedores_Boletas] ([ganProveedorID], [boletaID], [LastEdi" +
                "tDate], [CreationDate]) VALUES (@p1, @p2, @p3, @p4)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ganProveedorID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "boletaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo_gan_Proveedores_Boletas] SET [ganProveedorID] = @p1, [boletaID] = @p2" +
                ", [LastEditDate] = @p3, [CreationDate] = @p4 WHERE (([ganProveedorID] = @p5) AND" +
                " ([boletaID] = @p6))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ganProveedorID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "boletaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ganProveedorID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "boletaID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [ganProveedorID], [boletaID], [LastEditDate], [CreationDate] FROM [dbo_gan" +
                "_Proveedores_Boletas]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_gan_Proveedores_BoletasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_gan_Proveedores_BoletasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_gan_Proveedores_BoletasDataTable dataTable = new WSGaribayDataSet.dbo_gan_Proveedores_BoletasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_gan_Proveedores_BoletasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_gan_Proveedores_Boletas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1, int p2) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int p1, int p2, global::System.Nullable<global::System.DateTime> p3, global::System.Nullable<global::System.DateTime> p4) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int p1, int p2, global::System.Nullable<global::System.DateTime> p3, global::System.Nullable<global::System.DateTime> p4, int p5, int p6) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(p5));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(p6));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> p3, global::System.Nullable<global::System.DateTime> p4, int p5, int p6) {
            return this.Update(p5, p6, p3, p4, p5, p6);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_ProductoresTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_ProductoresTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_Productores";
            tableMapping.ColumnMappings.Add("productorID", "productorID");
            tableMapping.ColumnMappings.Add("apaterno", "apaterno");
            tableMapping.ColumnMappings.Add("amaterno", "amaterno");
            tableMapping.ColumnMappings.Add("nombre", "nombre");
            tableMapping.ColumnMappings.Add("fechanacimiento", "fechanacimiento");
            tableMapping.ColumnMappings.Add("IFE", "IFE");
            tableMapping.ColumnMappings.Add("CURP", "CURP");
            tableMapping.ColumnMappings.Add("domicilio", "domicilio");
            tableMapping.ColumnMappings.Add("poblacion", "poblacion");
            tableMapping.ColumnMappings.Add("municipio", "municipio");
            tableMapping.ColumnMappings.Add("estadoID", "estadoID");
            tableMapping.ColumnMappings.Add("CP", "CP");
            tableMapping.ColumnMappings.Add("RFC", "RFC");
            tableMapping.ColumnMappings.Add("sexoID", "sexoID");
            tableMapping.ColumnMappings.Add("telefono", "telefono");
            tableMapping.ColumnMappings.Add("telefonotrabajo", "telefonotrabajo");
            tableMapping.ColumnMappings.Add("celular", "celular");
            tableMapping.ColumnMappings.Add("fax", "fax");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("estadocivilID", "estadocivilID");
            tableMapping.ColumnMappings.Add("regimenID", "regimenID");
            tableMapping.ColumnMappings.Add("codigoBoletasFile", "codigoBoletasFile");
            tableMapping.ColumnMappings.Add("storeTS", "storeTS");
            tableMapping.ColumnMappings.Add("updateTS", "updateTS");
            tableMapping.ColumnMappings.Add("colonia", "colonia");
            tableMapping.ColumnMappings.Add("conyugue", "conyugue");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_Productores] WHERE (([productorID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productorID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo_Productores] ([apaterno], [amaterno], [nombre], [fechanacimiento], [IFE], [CURP], [domicilio], [poblacion], [municipio], [estadoID], [CP], [RFC], [sexoID], [telefono], [telefonotrabajo], [celular], [fax], [email], [estadocivilID], [regimenID], [codigoBoletasFile], [storeTS], [updateTS], [colonia], [conyugue], [LastEditDate], [CreationDate]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "apaterno", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "amaterno", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "fechanacimiento", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "IFE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CURP", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "domicilio", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "poblacion", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "municipio", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "estadoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CP", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "RFC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "sexoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "telefono", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "telefonotrabajo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "celular", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "fax", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "email", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p19", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "estadocivilID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p20", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "regimenID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p21", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "codigoBoletasFile", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p22", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "storeTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p23", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "updateTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p24", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "colonia", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p25", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "conyugue", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p26", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p27", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo_Productores] SET [apaterno] = @p1, [amaterno] = @p2, [nombre] = @p3, [fechanacimiento] = @p4, [IFE] = @p5, [CURP] = @p6, [domicilio] = @p7, [poblacion] = @p8, [municipio] = @p9, [estadoID] = @p10, [CP] = @p11, [RFC] = @p12, [sexoID] = @p13, [telefono] = @p14, [telefonotrabajo] = @p15, [celular] = @p16, [fax] = @p17, [email] = @p18, [estadocivilID] = @p19, [regimenID] = @p20, [codigoBoletasFile] = @p21, [storeTS] = @p22, [updateTS] = @p23, [colonia] = @p24, [conyugue] = @p25, [LastEditDate] = @p26, [CreationDate] = @p27 WHERE (([productorID] = @p28))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "apaterno", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "amaterno", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "fechanacimiento", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "IFE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CURP", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "domicilio", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "poblacion", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "municipio", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "estadoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CP", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "RFC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "sexoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "telefono", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "telefonotrabajo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "celular", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "fax", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "email", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p19", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "estadocivilID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p20", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "regimenID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p21", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "codigoBoletasFile", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p22", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "storeTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p23", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "updateTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p24", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "colonia", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p25", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "conyugue", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p26", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p27", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p28", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productorID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [productorID], [apaterno], [amaterno], [nombre], [fechanacimiento], [IFE], [CURP], [domicilio], [poblacion], [municipio], [estadoID], [CP], [RFC], [sexoID], [telefono], [telefonotrabajo], [celular], [fax], [email], [estadocivilID], [regimenID], [codigoBoletasFile], [storeTS], [updateTS], [colonia], [conyugue], [LastEditDate], [CreationDate] FROM [dbo_Productores]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_ProductoresDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_ProductoresDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_ProductoresDataTable dataTable = new WSGaribayDataSet.dbo_ProductoresDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_ProductoresDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_Productores");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string p1, 
                    string p2, 
                    string p3, 
                    global::System.Nullable<global::System.DateTime> p4, 
                    string p5, 
                    string p6, 
                    string p7, 
                    string p8, 
                    string p9, 
                    int p10, 
                    string p11, 
                    string p12, 
                    int p13, 
                    string p14, 
                    string p15, 
                    string p16, 
                    string p17, 
                    string p18, 
                    int p19, 
                    global::System.Nullable<int> p20, 
                    string p21, 
                    System.DateTime p22, 
                    System.DateTime p23, 
                    string p24, 
                    string p25, 
                    global::System.Nullable<global::System.DateTime> p26, 
                    global::System.Nullable<global::System.DateTime> p27) {
            if ((p1 == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(p9));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(p10));
            if ((p11 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(p11));
            }
            if ((p12 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(p12));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(p13));
            if ((p14 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(p14));
            }
            if ((p15 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(p15));
            }
            if ((p16 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(p16));
            }
            if ((p17 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(p17));
            }
            if ((p18 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(p18));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(p19));
            if ((p20.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(p20.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((p21 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(p21));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(p22));
            this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(p23));
            if ((p24 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(p24));
            }
            if ((p25 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(p25));
            }
            if ((p26.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(p26.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((p27.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(p27.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string p1, 
                    string p2, 
                    string p3, 
                    global::System.Nullable<global::System.DateTime> p4, 
                    string p5, 
                    string p6, 
                    string p7, 
                    string p8, 
                    string p9, 
                    int p10, 
                    string p11, 
                    string p12, 
                    int p13, 
                    string p14, 
                    string p15, 
                    string p16, 
                    string p17, 
                    string p18, 
                    int p19, 
                    global::System.Nullable<int> p20, 
                    string p21, 
                    System.DateTime p22, 
                    System.DateTime p23, 
                    string p24, 
                    string p25, 
                    global::System.Nullable<global::System.DateTime> p26, 
                    global::System.Nullable<global::System.DateTime> p27, 
                    int p28) {
            if ((p1 == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(p10));
            if ((p11 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(p11));
            }
            if ((p12 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(p12));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(p13));
            if ((p14 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(p14));
            }
            if ((p15 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(p15));
            }
            if ((p16 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(p16));
            }
            if ((p17 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(p17));
            }
            if ((p18 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(p18));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(p19));
            if ((p20.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(p20.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((p21 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(p21));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(p22));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(p23));
            if ((p24 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(p24));
            }
            if ((p25 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(p25));
            }
            if ((p26.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(p26.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((p27.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(p27.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(p28));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_ProductosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_ProductosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_Productos";
            tableMapping.ColumnMappings.Add("productoID", "productoID");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("codigo", "codigo");
            tableMapping.ColumnMappings.Add("descripcion", "descripcion");
            tableMapping.ColumnMappings.Add("precio1", "precio1");
            tableMapping.ColumnMappings.Add("precio2", "precio2");
            tableMapping.ColumnMappings.Add("precio3", "precio3");
            tableMapping.ColumnMappings.Add("precio4", "precio4");
            tableMapping.ColumnMappings.Add("storeTS", "storeTS");
            tableMapping.ColumnMappings.Add("updateTS", "updateTS");
            tableMapping.ColumnMappings.Add("unidadID", "unidadID");
            tableMapping.ColumnMappings.Add("presentacionID", "presentacionID");
            tableMapping.ColumnMappings.Add("codigoBascula", "codigoBascula");
            tableMapping.ColumnMappings.Add("productoGrupoID", "productoGrupoID");
            tableMapping.ColumnMappings.Add("casaagricolaID", "casaagricolaID");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_Productos] WHERE (([productoID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productoID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo_Productos] ([Nombre], [codigo], [descripcion], [precio1], [precio2], [precio3], [precio4], [storeTS], [updateTS], [unidadID], [presentacionID], [codigoBascula], [productoGrupoID], [casaagricolaID], [LastEditDate], [CreationDate]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "codigo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "descripcion", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precio1", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precio2", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precio3", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precio4", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "storeTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "updateTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "unidadID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "presentacionID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "codigoBascula", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productoGrupoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "casaagricolaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo_Productos] SET [Nombre] = @p1, [codigo] = @p2, [descripcion] = @p3, [precio1] = @p4, [precio2] = @p5, [precio3] = @p6, [precio4] = @p7, [storeTS] = @p8, [updateTS] = @p9, [unidadID] = @p10, [presentacionID] = @p11, [codigoBascula] = @p12, [productoGrupoID] = @p13, [casaagricolaID] = @p14, [LastEditDate] = @p15, [CreationDate] = @p16 WHERE (([productoID] = @p17))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "codigo", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "descripcion", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precio1", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precio2", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precio3", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "precio4", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "storeTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "updateTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "unidadID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "presentacionID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "codigoBascula", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productoGrupoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "casaagricolaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "productoID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [productoID], [Nombre], [codigo], [descripcion], [precio1], [precio2], [precio3], [precio4], [storeTS], [updateTS], [unidadID], [presentacionID], [codigoBascula], [productoGrupoID], [casaagricolaID], [LastEditDate], [CreationDate] FROM [dbo_Productos]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_ProductosDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_ProductosDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_ProductosDataTable dataTable = new WSGaribayDataSet.dbo_ProductosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_ProductosDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_Productos");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string p1, 
                    string p2, 
                    string p3, 
                    double p4, 
                    double p5, 
                    double p6, 
                    double p7, 
                    System.DateTime p8, 
                    System.DateTime p9, 
                    int p10, 
                    int p11, 
                    string p12, 
                    global::System.Nullable<int> p13, 
                    global::System.Nullable<int> p14, 
                    global::System.Nullable<global::System.DateTime> p15, 
                    global::System.Nullable<global::System.DateTime> p16) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(p4));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(p5));
            this.Adapter.InsertCommand.Parameters[5].Value = ((double)(p6));
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(p7));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(p8));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(p9));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(p10));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(p11));
            if ((p12 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(p12));
            }
            if ((p13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(p13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(p14.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((p15.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(p15.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(p16.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string p1, 
                    string p2, 
                    string p3, 
                    double p4, 
                    double p5, 
                    double p6, 
                    double p7, 
                    System.DateTime p8, 
                    System.DateTime p9, 
                    int p10, 
                    int p11, 
                    string p12, 
                    global::System.Nullable<int> p13, 
                    global::System.Nullable<int> p14, 
                    global::System.Nullable<global::System.DateTime> p15, 
                    global::System.Nullable<global::System.DateTime> p16, 
                    int p17) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(p4));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(p5));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(p6));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(p7));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(p8));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(p9));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(p10));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(p11));
            if ((p12 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(p12));
            }
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(p14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((p15.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(p15.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(p16.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(p17));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_SecurityLevelsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_SecurityLevelsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_SecurityLevels";
            tableMapping.ColumnMappings.Add("securitylevelID", "securitylevelID");
            tableMapping.ColumnMappings.Add("securitylevel", "securitylevel");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_SecurityLevels] WHERE (([securitylevelID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "securitylevelID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo_SecurityLevels] ([securitylevelID], [securitylevel], [LastEditDa" +
                "te], [CreationDate]) VALUES (@p1, @p2, @p3, @p4)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "securitylevelID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "securitylevel", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo_SecurityLevels] SET [securitylevelID] = @p1, [securitylevel] = @p2, [" +
                "LastEditDate] = @p3, [CreationDate] = @p4 WHERE (([securitylevelID] = @p5))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "securitylevelID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "securitylevel", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "securitylevelID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [securitylevelID], [securitylevel], [LastEditDate], [CreationDate] FROM [d" +
                "bo_SecurityLevels]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_SecurityLevelsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_SecurityLevelsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_SecurityLevelsDataTable dataTable = new WSGaribayDataSet.dbo_SecurityLevelsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_SecurityLevelsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_SecurityLevels");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int p1, string p2, global::System.Nullable<global::System.DateTime> p3, global::System.Nullable<global::System.DateTime> p4) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int p1, string p2, global::System.Nullable<global::System.DateTime> p3, global::System.Nullable<global::System.DateTime> p4, int p5) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(p5));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p2, global::System.Nullable<global::System.DateTime> p3, global::System.Nullable<global::System.DateTime> p4, int p5) {
            return this.Update(p5, p2, p3, p4, p5);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_UsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_UsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_Users";
            tableMapping.ColumnMappings.Add("userID", "userID");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("password", "password");
            tableMapping.ColumnMappings.Add("securitylevelID", "securitylevelID");
            tableMapping.ColumnMappings.Add("enabled", "enabled");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_Users] WHERE (([userID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "userID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo_Users] ([username], [password], [securitylevelID], [enabled], [N" +
                "ombre], [email], [LastEditDate], [CreationDate]) VALUES (@p1, @p2, @p3, @p4, @p5" +
                ", @p6, @p7, @p8)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "username", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "password", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "securitylevelID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "enabled", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "email", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo_Users] SET [username] = @p1, [password] = @p2, [securitylevelID] = @p" +
                "3, [enabled] = @p4, [Nombre] = @p5, [email] = @p6, [LastEditDate] = @p7, [Creati" +
                "onDate] = @p8 WHERE (([userID] = @p9))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "username", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "password", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "securitylevelID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "enabled", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "email", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "userID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [userID], [username], [password], [securitylevelID], [enabled], [Nombre], " +
                "[email], [LastEditDate], [CreationDate] FROM [dbo_Users]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        userID, username, password, securitylevelID, enabled, Nombre, email" +
                ", LastEditDate, CreationDate\r\nFROM            dbo_Users\r\nWHERE        (username " +
                "= @Username) AND (password = @Password) AND (enabled = 1)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@Username", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, true, 0, 0, "username", global::System.Data.DataRowVersion.Current, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@Password", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, true, 0, 0, "password", global::System.Data.DataRowVersion.Current, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_UsersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_UsersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_UsersDataTable dataTable = new WSGaribayDataSet.dbo_UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLogin(WSGaribayDataSet.dbo_UsersDataTable dataTable, string Username, string Password) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((Username == null)) {
                throw new global::System.ArgumentNullException("Username");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Username));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Password));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual WSGaribayDataSet.dbo_UsersDataTable GetDataByLogin(string Username, string Password) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((Username == null)) {
                throw new global::System.ArgumentNullException("Username");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Username));
            }
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Password));
            }
            WSGaribayDataSet.dbo_UsersDataTable dataTable = new WSGaribayDataSet.dbo_UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_UsersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_Users");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<bool> p4, string p5, string p6, global::System.Nullable<global::System.DateTime> p7, global::System.Nullable<global::System.DateTime> p8) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(p7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(p8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p1, string p2, global::System.Nullable<int> p3, global::System.Nullable<bool> p4, string p5, string p6, global::System.Nullable<global::System.DateTime> p7, global::System.Nullable<global::System.DateTime> p8, int p9) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(p8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(p9));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_ClienteVenta_BoletasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_ClienteVenta_BoletasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_ClienteVenta_Boletas";
            tableMapping.ColumnMappings.Add("clienteBoletaID", "clienteBoletaID");
            tableMapping.ColumnMappings.Add("clienteventaID", "clienteventaID");
            tableMapping.ColumnMappings.Add("BoletaID", "BoletaID");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_ClienteVenta_Boletas] WHERE (([clienteBoletaID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "clienteBoletaID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo_ClienteVenta_Boletas] ([clienteventaID], [BoletaID], [LastEditDa" +
                "te], [CreationDate]) VALUES (@p1, @p2, @p3, @p4)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "clienteventaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "BoletaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo_ClienteVenta_Boletas] SET [clienteventaID] = @p1, [BoletaID] = @p2, [" +
                "LastEditDate] = @p3, [CreationDate] = @p4 WHERE (([clienteBoletaID] = @p5))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "clienteventaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "BoletaID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "clienteBoletaID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [clienteBoletaID], [clienteventaID], [BoletaID], [LastEditDate], [Creation" +
                "Date] FROM [dbo_ClienteVenta_Boletas]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_ClienteVenta_BoletasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_ClienteVenta_BoletasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_ClienteVenta_BoletasDataTable dataTable = new WSGaribayDataSet.dbo_ClienteVenta_BoletasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_ClienteVenta_BoletasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_ClienteVenta_Boletas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int p1, int p2, global::System.Nullable<global::System.DateTime> p3, global::System.Nullable<global::System.DateTime> p4) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int p1, int p2, global::System.Nullable<global::System.DateTime> p3, global::System.Nullable<global::System.DateTime> p4, int p5) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(p5));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dbo_ClientesVentasTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeTransaction _transaction;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbo_ClientesVentasTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dbo_ClientesVentas";
            tableMapping.ColumnMappings.Add("clienteventaID", "clienteventaID");
            tableMapping.ColumnMappings.Add("nombre", "nombre");
            tableMapping.ColumnMappings.Add("domicilio", "domicilio");
            tableMapping.ColumnMappings.Add("ciudad", "ciudad");
            tableMapping.ColumnMappings.Add("telefono", "telefono");
            tableMapping.ColumnMappings.Add("estadoID", "estadoID");
            tableMapping.ColumnMappings.Add("RFC", "RFC");
            tableMapping.ColumnMappings.Add("userID", "userID");
            tableMapping.ColumnMappings.Add("storeTS", "storeTS");
            tableMapping.ColumnMappings.Add("colonia", "colonia");
            tableMapping.ColumnMappings.Add("CP", "CP");
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo_ClientesVentas] WHERE (([clienteventaID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "clienteventaID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo_ClientesVentas] ([nombre], [domicilio], [ciudad], [telefono], [e" +
                "stadoID], [RFC], [userID], [storeTS], [colonia], [CP], [LastEditDate], [Creation" +
                "Date]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "domicilio", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ciudad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "telefono", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "estadoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "RFC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "userID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "storeTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "colonia", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CP", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo_ClientesVentas] SET [nombre] = @p1, [domicilio] = @p2, [ciudad] = @p3, [telefono] = @p4, [estadoID] = @p5, [RFC] = @p6, [userID] = @p7, [storeTS] = @p8, [colonia] = @p9, [CP] = @p10, [LastEditDate] = @p11, [CreationDate] = @p12 WHERE (([clienteventaID] = @p13))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "nombre", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "domicilio", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "ciudad", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "telefono", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "estadoID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "RFC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "userID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "storeTS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NText, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "colonia", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CP", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LastEditDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "CreationDate", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "clienteventaID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = global::BasculaGaribay.Properties.Settings.Default.ClientGaribayConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [clienteventaID], [nombre], [domicilio], [ciudad], [telefono], [estadoID]," +
                " [RFC], [userID], [storeTS], [colonia], [CP], [LastEditDate], [CreationDate] FRO" +
                "M [dbo_ClientesVentas]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(WSGaribayDataSet.dbo_ClientesVentasDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual WSGaribayDataSet.dbo_ClientesVentasDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            WSGaribayDataSet.dbo_ClientesVentasDataTable dataTable = new WSGaribayDataSet.dbo_ClientesVentasDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet.dbo_ClientesVentasDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(WSGaribayDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dbo_ClientesVentas");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string p1, string p2, string p3, string p4, int p5, string p6, int p7, System.DateTime p8, string p9, string p10, global::System.Nullable<global::System.DateTime> p11, global::System.Nullable<global::System.DateTime> p12) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(p5));
            if ((p6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p6));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(p7));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(p8));
            if ((p9 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(p10));
            }
            if ((p11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(p11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p12.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(p12.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p1, string p2, string p3, string p4, int p5, string p6, int p7, System.DateTime p8, string p9, string p10, global::System.Nullable<global::System.DateTime> p11, global::System.Nullable<global::System.DateTime> p12, int p13) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(p5));
            if ((p6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(p7));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(p8));
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(p10));
            }
            if ((p11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(p11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p12.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(p12.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(p13));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private dbo_BoletasTableAdapter _dbo_BoletasTableAdapter;
        
        private dbo_gan_ProveedoresTableAdapter _dbo_gan_ProveedoresTableAdapter;
        
        private dbo_gan_Proveedores_BoletasTableAdapter _dbo_gan_Proveedores_BoletasTableAdapter;
        
        private dbo_ProductoresTableAdapter _dbo_ProductoresTableAdapter;
        
        private dbo_ProductosTableAdapter _dbo_ProductosTableAdapter;
        
        private dbo_SecurityLevelsTableAdapter _dbo_SecurityLevelsTableAdapter;
        
        private dbo_UsersTableAdapter _dbo_UsersTableAdapter;
        
        private dbo_ClienteVenta_BoletasTableAdapter _dbo_ClienteVenta_BoletasTableAdapter;
        
        private dbo_ClientesVentasTableAdapter _dbo_ClientesVentasTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_BoletasTableAdapter dbo_BoletasTableAdapter {
            get {
                return this._dbo_BoletasTableAdapter;
            }
            set {
                this._dbo_BoletasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_gan_ProveedoresTableAdapter dbo_gan_ProveedoresTableAdapter {
            get {
                return this._dbo_gan_ProveedoresTableAdapter;
            }
            set {
                this._dbo_gan_ProveedoresTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_gan_Proveedores_BoletasTableAdapter dbo_gan_Proveedores_BoletasTableAdapter {
            get {
                return this._dbo_gan_Proveedores_BoletasTableAdapter;
            }
            set {
                this._dbo_gan_Proveedores_BoletasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_ProductoresTableAdapter dbo_ProductoresTableAdapter {
            get {
                return this._dbo_ProductoresTableAdapter;
            }
            set {
                this._dbo_ProductoresTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_ProductosTableAdapter dbo_ProductosTableAdapter {
            get {
                return this._dbo_ProductosTableAdapter;
            }
            set {
                this._dbo_ProductosTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_SecurityLevelsTableAdapter dbo_SecurityLevelsTableAdapter {
            get {
                return this._dbo_SecurityLevelsTableAdapter;
            }
            set {
                this._dbo_SecurityLevelsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_UsersTableAdapter dbo_UsersTableAdapter {
            get {
                return this._dbo_UsersTableAdapter;
            }
            set {
                this._dbo_UsersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_ClienteVenta_BoletasTableAdapter dbo_ClienteVenta_BoletasTableAdapter {
            get {
                return this._dbo_ClienteVenta_BoletasTableAdapter;
            }
            set {
                this._dbo_ClienteVenta_BoletasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public dbo_ClientesVentasTableAdapter dbo_ClientesVentasTableAdapter {
            get {
                return this._dbo_ClientesVentasTableAdapter;
            }
            set {
                this._dbo_ClientesVentasTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dbo_BoletasTableAdapter != null) 
                            && (this._dbo_BoletasTableAdapter.Connection != null))) {
                    return this._dbo_BoletasTableAdapter.Connection;
                }
                if (((this._dbo_gan_ProveedoresTableAdapter != null) 
                            && (this._dbo_gan_ProveedoresTableAdapter.Connection != null))) {
                    return this._dbo_gan_ProveedoresTableAdapter.Connection;
                }
                if (((this._dbo_gan_Proveedores_BoletasTableAdapter != null) 
                            && (this._dbo_gan_Proveedores_BoletasTableAdapter.Connection != null))) {
                    return this._dbo_gan_Proveedores_BoletasTableAdapter.Connection;
                }
                if (((this._dbo_ProductoresTableAdapter != null) 
                            && (this._dbo_ProductoresTableAdapter.Connection != null))) {
                    return this._dbo_ProductoresTableAdapter.Connection;
                }
                if (((this._dbo_ProductosTableAdapter != null) 
                            && (this._dbo_ProductosTableAdapter.Connection != null))) {
                    return this._dbo_ProductosTableAdapter.Connection;
                }
                if (((this._dbo_SecurityLevelsTableAdapter != null) 
                            && (this._dbo_SecurityLevelsTableAdapter.Connection != null))) {
                    return this._dbo_SecurityLevelsTableAdapter.Connection;
                }
                if (((this._dbo_UsersTableAdapter != null) 
                            && (this._dbo_UsersTableAdapter.Connection != null))) {
                    return this._dbo_UsersTableAdapter.Connection;
                }
                if (((this._dbo_ClienteVenta_BoletasTableAdapter != null) 
                            && (this._dbo_ClienteVenta_BoletasTableAdapter.Connection != null))) {
                    return this._dbo_ClienteVenta_BoletasTableAdapter.Connection;
                }
                if (((this._dbo_ClientesVentasTableAdapter != null) 
                            && (this._dbo_ClientesVentasTableAdapter.Connection != null))) {
                    return this._dbo_ClientesVentasTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dbo_BoletasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbo_gan_ProveedoresTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbo_gan_Proveedores_BoletasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbo_ProductoresTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbo_ProductosTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbo_SecurityLevelsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbo_UsersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbo_ClienteVenta_BoletasTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dbo_ClientesVentasTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(WSGaribayDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dbo_UsersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_Users.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_UsersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbo_SecurityLevelsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_SecurityLevels.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_SecurityLevelsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbo_ClientesVentasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_ClientesVentas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_ClientesVentasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbo_ClienteVenta_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_ClienteVenta_Boletas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_ClienteVenta_BoletasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbo_ProductosTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_Productos.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_ProductosTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbo_gan_ProveedoresTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_gan_Proveedores.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_gan_ProveedoresTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbo_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_Boletas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_BoletasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbo_ProductoresTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_Productores.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_ProductoresTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dbo_gan_Proveedores_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.dbo_gan_Proveedores_Boletas.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dbo_gan_Proveedores_BoletasTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(WSGaribayDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dbo_UsersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_Users.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_UsersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbo_SecurityLevelsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_SecurityLevels.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_SecurityLevelsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbo_ClientesVentasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_ClientesVentas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_ClientesVentasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbo_ClienteVenta_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_ClienteVenta_Boletas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_ClienteVenta_BoletasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbo_ProductosTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_Productos.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_ProductosTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbo_gan_ProveedoresTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_gan_Proveedores.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_gan_ProveedoresTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbo_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_Boletas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_BoletasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbo_ProductoresTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_Productores.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_ProductoresTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dbo_gan_Proveedores_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.dbo_gan_Proveedores_Boletas.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dbo_gan_Proveedores_BoletasTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(WSGaribayDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dbo_gan_Proveedores_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_gan_Proveedores_Boletas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_gan_Proveedores_BoletasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbo_ProductoresTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_Productores.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_ProductoresTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbo_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_Boletas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_BoletasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbo_gan_ProveedoresTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_gan_Proveedores.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_gan_ProveedoresTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbo_ProductosTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_Productos.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_ProductosTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbo_ClienteVenta_BoletasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_ClienteVenta_Boletas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_ClienteVenta_BoletasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbo_ClientesVentasTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_ClientesVentas.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_ClientesVentasTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbo_SecurityLevelsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_SecurityLevels.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_SecurityLevelsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dbo_UsersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.dbo_Users.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dbo_UsersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(WSGaribayDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dbo_BoletasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_BoletasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbo_gan_ProveedoresTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_gan_ProveedoresTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbo_gan_Proveedores_BoletasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_gan_Proveedores_BoletasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbo_ProductoresTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_ProductoresTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbo_ProductosTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_ProductosTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbo_SecurityLevelsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_SecurityLevelsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbo_UsersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_UsersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbo_ClienteVenta_BoletasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_ClienteVenta_BoletasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._dbo_ClientesVentasTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dbo_ClientesVentasTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dbo_BoletasTableAdapter != null)) {
                    revertConnections.Add(this._dbo_BoletasTableAdapter, this._dbo_BoletasTableAdapter.Connection);
                    this._dbo_BoletasTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_BoletasTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_BoletasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_BoletasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_BoletasTableAdapter.Adapter);
                    }
                }
                if ((this._dbo_gan_ProveedoresTableAdapter != null)) {
                    revertConnections.Add(this._dbo_gan_ProveedoresTableAdapter, this._dbo_gan_ProveedoresTableAdapter.Connection);
                    this._dbo_gan_ProveedoresTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_gan_ProveedoresTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_gan_ProveedoresTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_gan_ProveedoresTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_gan_ProveedoresTableAdapter.Adapter);
                    }
                }
                if ((this._dbo_gan_Proveedores_BoletasTableAdapter != null)) {
                    revertConnections.Add(this._dbo_gan_Proveedores_BoletasTableAdapter, this._dbo_gan_Proveedores_BoletasTableAdapter.Connection);
                    this._dbo_gan_Proveedores_BoletasTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_gan_Proveedores_BoletasTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_gan_Proveedores_BoletasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_gan_Proveedores_BoletasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_gan_Proveedores_BoletasTableAdapter.Adapter);
                    }
                }
                if ((this._dbo_ProductoresTableAdapter != null)) {
                    revertConnections.Add(this._dbo_ProductoresTableAdapter, this._dbo_ProductoresTableAdapter.Connection);
                    this._dbo_ProductoresTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_ProductoresTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_ProductoresTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_ProductoresTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_ProductoresTableAdapter.Adapter);
                    }
                }
                if ((this._dbo_ProductosTableAdapter != null)) {
                    revertConnections.Add(this._dbo_ProductosTableAdapter, this._dbo_ProductosTableAdapter.Connection);
                    this._dbo_ProductosTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_ProductosTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_ProductosTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_ProductosTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_ProductosTableAdapter.Adapter);
                    }
                }
                if ((this._dbo_SecurityLevelsTableAdapter != null)) {
                    revertConnections.Add(this._dbo_SecurityLevelsTableAdapter, this._dbo_SecurityLevelsTableAdapter.Connection);
                    this._dbo_SecurityLevelsTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_SecurityLevelsTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_SecurityLevelsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_SecurityLevelsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_SecurityLevelsTableAdapter.Adapter);
                    }
                }
                if ((this._dbo_UsersTableAdapter != null)) {
                    revertConnections.Add(this._dbo_UsersTableAdapter, this._dbo_UsersTableAdapter.Connection);
                    this._dbo_UsersTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_UsersTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_UsersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_UsersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_UsersTableAdapter.Adapter);
                    }
                }
                if ((this._dbo_ClienteVenta_BoletasTableAdapter != null)) {
                    revertConnections.Add(this._dbo_ClienteVenta_BoletasTableAdapter, this._dbo_ClienteVenta_BoletasTableAdapter.Connection);
                    this._dbo_ClienteVenta_BoletasTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_ClienteVenta_BoletasTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_ClienteVenta_BoletasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_ClienteVenta_BoletasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_ClienteVenta_BoletasTableAdapter.Adapter);
                    }
                }
                if ((this._dbo_ClientesVentasTableAdapter != null)) {
                    revertConnections.Add(this._dbo_ClientesVentasTableAdapter, this._dbo_ClientesVentasTableAdapter.Connection);
                    this._dbo_ClientesVentasTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(workConnection));
                    this._dbo_ClientesVentasTableAdapter.Transaction = ((global::System.Data.SqlServerCe.SqlCeTransaction)(workTransaction));
                    if (this._dbo_ClientesVentasTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dbo_ClientesVentasTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dbo_ClientesVentasTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dbo_BoletasTableAdapter != null)) {
                    this._dbo_BoletasTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_BoletasTableAdapter]));
                    this._dbo_BoletasTableAdapter.Transaction = null;
                }
                if ((this._dbo_gan_ProveedoresTableAdapter != null)) {
                    this._dbo_gan_ProveedoresTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_gan_ProveedoresTableAdapter]));
                    this._dbo_gan_ProveedoresTableAdapter.Transaction = null;
                }
                if ((this._dbo_gan_Proveedores_BoletasTableAdapter != null)) {
                    this._dbo_gan_Proveedores_BoletasTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_gan_Proveedores_BoletasTableAdapter]));
                    this._dbo_gan_Proveedores_BoletasTableAdapter.Transaction = null;
                }
                if ((this._dbo_ProductoresTableAdapter != null)) {
                    this._dbo_ProductoresTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_ProductoresTableAdapter]));
                    this._dbo_ProductoresTableAdapter.Transaction = null;
                }
                if ((this._dbo_ProductosTableAdapter != null)) {
                    this._dbo_ProductosTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_ProductosTableAdapter]));
                    this._dbo_ProductosTableAdapter.Transaction = null;
                }
                if ((this._dbo_SecurityLevelsTableAdapter != null)) {
                    this._dbo_SecurityLevelsTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_SecurityLevelsTableAdapter]));
                    this._dbo_SecurityLevelsTableAdapter.Transaction = null;
                }
                if ((this._dbo_UsersTableAdapter != null)) {
                    this._dbo_UsersTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_UsersTableAdapter]));
                    this._dbo_UsersTableAdapter.Transaction = null;
                }
                if ((this._dbo_ClienteVenta_BoletasTableAdapter != null)) {
                    this._dbo_ClienteVenta_BoletasTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_ClienteVenta_BoletasTableAdapter]));
                    this._dbo_ClienteVenta_BoletasTableAdapter.Transaction = null;
                }
                if ((this._dbo_ClientesVentasTableAdapter != null)) {
                    this._dbo_ClientesVentasTableAdapter.Connection = ((global::System.Data.SqlServerCe.SqlCeConnection)(revertConnections[this._dbo_ClientesVentasTableAdapter]));
                    this._dbo_ClientesVentasTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591